{
  "data": {
    "id": 1687,
    "exerciseKey": "1036468a-13c7-49d5-af8f-31c31135ceea",
    "category": "QA",
    "renderType": "md",
    "title": "es5 中的类和es6中的class有什么区别？\n",
    "desc": null,
    "options": null,
    "explanation": "在es5中主要是通过构造函数方式和原型方式来定义一个类，在es6中我们可以通过class来定义类。\n\n## 一、class类必须new调用，不能直接执行。\n\n![image.png](https://static.ecool.fun//article/c1841b40-fce7-466c-9316-38c057419c40.png)\n\nclass类执行的话会报错，而es5中的类和普通函数并没有本质区别，执行肯定是ok的。\n\n## 二、class类不存在变量提升\n\n![image.png](https://static.ecool.fun//article/5378c86b-1d14-41d6-8661-e6bd762cd17a.png)\n\n![image.png](https://static.ecool.fun//article/43a43e47-2362-4f57-9b4c-0461033ed0a6.png)\n\n图2报错，说明class方式没有把类的定义提升到顶部。\n\n## 三、class类无法遍历它实例原型链上的属性和方法\n\n```js\nfunction Foo (color) {\n    this.color = color\n}\nFoo.prototype.like = function () {\n    console.log(`like${this.color}`)\n}\nlet foo = new Foo()\n\nfor (let key in foo) {\n    // 原型上的like也被打印出来了\n    console.log(key)  // color、like\n}\n```\n\n```js\nclass Foo {\n    constructor (color) {\n        this.color = color\n    }\n    like () {\n        console.log(`like${this.color}`)\n    }\n}\nlet foo = new Foo('red')\n\nfor (let key in foo) {\n    // 只打印一个color,没有打印原型链上的like\n    console.log(key)  // color\n}\n```\n\n## 四、new.target属性\n\nes6为new命令引入了一个new.target属性，它会返回new命令作用于的那个构造函数。如果不是通过new调用或Reflect.construct()调用的，new.target会返回undefined\n\n```js\nfunction Person(name) {\n  if (new.target === Person) {\n    this.name = name;\n  } else {\n    throw new Error('必须使用 new 命令生成实例');\n  }\n}\n\nlet obj = {}\nPerson.call(obj, 'red') // 此时使用非new的调用方式就会报错\n```\n\n## 五、class类有static静态方法\n\nstatic静态方法只能通过类调用，不会出现在实例上；另外如果静态方法包含 this 关键字，这个 this 指的是类，而不是实例。static声明的静态属性和方法都不可以被子类继承。\n\n```js\nclass Foo {\n  static bar() {\n    this.baz(); // 此处的this指向类\n  }\n  static baz() {\n    console.log('hello'); // 不会出现在实例中\n  }\n  baz() {\n    console.log('world');\n  }\n}\n\nFoo.bar() // hello\n```",
    "level": 3,
    "status": 2,
    "appId": 7,
    "createAt": "2022-03-08T15:30:16.000Z",
    "updateAt": "2024-01-25T19:36:01.000Z",
    "updateUserId": 11,
    "isCollected": false,
    "currentIndex": 47,
    "prev": "d3f21598-edfa-48f4-b2d3-d0c19d754b10",
    "next": "b3e35cf9-1939-4c79-8415-8168c5532779"
  },
  "post": {
    "exerciseKey": "1036468a-13c7-49d5-af8f-31c31135ceea",
    "category": "QA",
    "title": "es5 中的类和es6中的class有什么区别？\n",
    "level": 3,
    "updateAt": "2024-01-25T19:36:01+00:00"
  },
  "tag": {
    "id": 10,
    "tagName": "JavaScript",
    "type": "1",
    "exerciseCount": 322
  }
}