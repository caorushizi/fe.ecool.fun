{
  "data": {
    "id": 67,
    "exerciseKey": "2eb7d8d6-731e-444d-9f2f-c8bdea7f50eb",
    "category": "Choice",
    "renderType": "md",
    "title": "输出是什么?",
    "desc": "```javascript\nconst settings = {\n  username: \"lydiahallie\",\n  level: 19,\n  health: 90\n};\n\nconst data = JSON.stringify(settings, [\"level\", \"health\"]);\nconsole.log(data);\n```",
    "options": "{\"options\":[\"\\\"{\\\"level\\\":19, \\\"health\\\":90}\\\"\",\"\\\"{\\\"username\\\": \\\"lydiahallie\\\"}\\\"\",\"\\\"[\\\"level\\\", \\\"health\\\"]\\\"\",\"\\\"{\\\"username\\\": \\\"lydiahallie\\\", \\\"level\\\":19, \\\"health\\\":90}\\\"\"],\"isMulti\":false,\"answer\":[0]}",
    "explanation": "`JSON.stringify`的第二个参数是 _替代者(replacer)_. 替代者(replacer)可以是个函数或数组，用以控制哪些值如何被转换为字符串。\n如果替代者(replacer)是个 _数组_ ，那么就只有包含在数组中的属性将会被转化为字符串。在本例中，只有名为`\"level\"` 和 `\"health\"` 的属性被包括进来， `\"username\"`则被排除在外。 `data` 就等于 `\"{\"level\":19, \"health\":90}\"`.\n而如果替代者(replacer)是个 _函数_，这个函数将被对象的每个属性都调用一遍。\n函数返回的值会成为这个属性的值，最终体现在转化后的JSON字符串中（译者注：Chrome下，经过实验，如果所有属性均返回同一个值的时候有异常，会直接将返回值作为结果输出而不会输出JSON字符串），而如果返回值为`undefined`，则该属性会被排除在外。",
    "level": 0.5,
    "status": 2,
    "appId": 7,
    "createAt": "2021-07-02T15:33:04.000Z",
    "updateAt": "2021-07-03T22:21:06.000Z",
    "updateUserId": 11,
    "isCollected": false,
    "currentIndex": 1141,
    "prev": "baac6d08-4161-4949-a058-e1c5696791e0",
    "next": "576883a2-f601-4c53-9f8c-be61a07168bf"
  },
  "post": {
    "exerciseKey": "2eb7d8d6-731e-444d-9f2f-c8bdea7f50eb",
    "category": "Choice",
    "title": "输出是什么?",
    "level": 0.5,
    "updateAt": "2021-07-03T22:21:06+00:00"
  },
  "tag": {
    "id": 32,
    "tagName": "选择题",
    "type": "1",
    "exerciseCount": 151
  }
}