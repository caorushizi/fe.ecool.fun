{
  "data": {
    "id": 1774,
    "exerciseKey": "07bfb2a3-8a44-492e-9dd2-96c8d85b3cb2",
    "category": "QA",
    "renderType": "md",
    "title": "删除排序链表中的重复元素",
    "desc": "给定一个已排序的链表的头 `head` ， _删除所有重复的元素，使每个元素只出现一次_ 。返回 _已排序的链表_ 。\n\n**示例 1：**\n\n![](https://assets.leetcode.com/uploads/2021/01/04/list1.jpg) \n\n\n**输入：** head = [1,1,2]\n**输出：** [1,2]\n\n**示例 2：**\n\n![](https://assets.leetcode.com/uploads/2021/01/04/list2.jpg) \n\n\n**输入：** head = [1,1,2,3,3]\n**输出：** [1,2,3]\n\n**提示：**\n\n* 链表中节点数目在范围 `[0, 300]` 内\n* `-100 <= Node.val <= 100`\n* 题目数据保证链表已经按升序 **排列**\n\n```js\n/**\n * Definition for singly-linked list.\n * function ListNode(val, next) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.next = (next===undefined ? null : next)\n * }\n */\n/**\n * @param {ListNode} head\n * @return {ListNode}\n */\nvar deleteDuplicates = function(head) {\n\n};\n```",
    "options": null,
    "explanation": "**思路与算法**\n\n由于给定的链表是排好序的，因此**重复的元素在链表中出现的位置是连续的**，因此我们只需要对链表进行一次遍历，就可以删除重复的元素。\n\n具体地，我们从指针 cur 指向链表的头节点，随后开始对链表进行遍历。如果当前 cur 与 cur.next 对应的元素相同，那么我们就将 cur.next 从链表中移除；否则说明链表中已经不存在其它与 cur 对应的元素相同的节点，因此可以将 cur 指向 cur.next。\n\n当遍历完整个链表之后，我们返回链表的头节点即可。\n\n**细节**\n\n当我们遍历到链表的最后一个节点时，cur.next 为空节点，如果不加以判断，访问 cur.next 对应的元素会产生运行错误。因此我们只需要遍历到链表的最后一个节点，而不需要遍历完整个链表。\n\n\n```JavaScript\nvar deleteDuplicates = function(head) {\n    if (!head) {\n        return head;\n    }\n\n    let cur = head;\n    while (cur.next) {\n        if (cur.val === cur.next.val) {\n            cur.next = cur.next.next;\n        } else {\n            cur = cur.next;\n        }\n    }\n    return head;\n};\n```\n\n\n**复杂度分析**\n\n- 时间复杂度 O(n)，其中 n 是链表的长度。\n\n- 空间复杂度 O(1)。",
    "level": 1,
    "status": 2,
    "appId": 7,
    "createAt": "2022-04-14T01:41:11.000Z",
    "updateAt": "2022-04-17T20:23:59.000Z",
    "updateUserId": 11,
    "isCollected": false,
    "currentIndex": 558,
    "prev": "e79d1df5-690b-428c-846d-9f076e2afae3",
    "next": "c8997d09-6634-4e27-9f3f-5376a6e97f17"
  },
  "post": {
    "exerciseKey": "07bfb2a3-8a44-492e-9dd2-96c8d85b3cb2",
    "category": "QA",
    "title": "删除排序链表中的重复元素",
    "level": 1,
    "updateAt": "2022-04-17T20:23:59+00:00"
  },
  "tag": {
    "id": 31,
    "tagName": "leetcode",
    "type": "1",
    "exerciseCount": 37
  }
}