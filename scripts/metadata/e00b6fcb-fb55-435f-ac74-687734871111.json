{
  "data": {
    "id": 528,
    "exerciseKey": "e00b6fcb-fb55-435f-ac74-687734871111",
    "category": "QA",
    "renderType": "md",
    "title": "介绍你知道的一些数据结构",
    "desc": null,
    "options": null,
    "explanation": "* 栈：一种特殊串联形式的抽象数据类型，可由链表或数组实现，通过链表或数组的栈顶（Top）指针对数据进行压栈（Push）和出栈（Pop）操作，其特点是LIFO。\n\n* 队列：先进先出（FIFO）的线性表，一般用链表和数组来实现，只允许在后端（back or rear）插入，在前端（front）删除。\n\n* 数组：由相同元素的集合所组成的数据结构，存储在一块连续的内存单元，根据元素的索引可以计算出该元素对应的存储地址。\n\n* 链表：由一连串节点组成，每个节点包含任意的实例数据和一个或两个用来指向下一个/上一个节点位置的链接。\n\n* 树：实现抽象数据类型的数据结构，如：二叉树、霍夫曼树。\n\n* 图：表示物件与物件之间的关系，图论的基本研究对象。\n\n* 堆：是计算机科学中一种特别的树状数据结构，也是一种特殊的二叉树。\n\n* 散列表：根据键（key）直接访问内存存储位置的一种数据结构，通过计算一个关于键值的函数，将所需查询的数据映射到表中的一个位置来访问记录，映射函数叫做散列函数，存放记录的数组叫散列表（散列函数和哈希冲突是实现散列表最重要的两个环节）。\n",
    "level": 3,
    "status": 2,
    "appId": 7,
    "createAt": "2021-07-17T13:47:32.000Z",
    "updateAt": "2021-07-17T22:43:19.000Z",
    "updateUserId": 11,
    "isCollected": false,
    "currentIndex": 828,
    "prev": "6b11a97d-74b0-4768-a8ae-33b6886da458",
    "next": "c81eed52-f021-4483-8b61-c815eb03ae18"
  },
  "post": {
    "exerciseKey": "e00b6fcb-fb55-435f-ac74-687734871111",
    "category": "QA",
    "title": "介绍你知道的一些数据结构",
    "level": 3,
    "updateAt": "2021-07-17T22:43:19+00:00"
  },
  "tag": {
    "id": 30,
    "tagName": "计算机基础",
    "type": "1",
    "exerciseCount": 16
  }
}