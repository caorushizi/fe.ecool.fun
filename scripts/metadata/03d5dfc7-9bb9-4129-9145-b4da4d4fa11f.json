{
  "data": {
    "id": 391,
    "exerciseKey": "03d5dfc7-9bb9-4129-9145-b4da4d4fa11f",
    "category": "QA",
    "renderType": "md",
    "title": "说说webpack proxy工作原理？为什么能解决跨域?",
    "desc": null,
    "options": null,
    "explanation": "## 一、是什么\n\n`webpack proxy`，即`webpack`提供的代理服务\n\n基本行为就是接收客户端发送的请求后转发给其他服务器\n\n其目的是为了便于开发者在开发模式下解决跨域问题（浏览器安全策略限制）\n\n想要实现代理首先需要一个中间服务器，`webpack`中提供服务器的工具为`webpack-dev-server`\n\n#### webpack-dev-server\n\n`webpack-dev-server`是 `webpack` 官方推出的一款开发工具，将自动编译和自动刷新浏览器等一系列对开发友好的功能全部集成在了一起\n\n目的是为了提高开发者日常的开发效率，**只适用在开发阶段**\n\n关于配置方面，在`webpack`配置对象属性中通过`devServer`属性提供，如下：\n\n```js\n// ./webpack.config.js\nconst path = require('path')\n\nmodule.exports = {\n    // ...\n    devServer: {\n        contentBase: path.join(__dirname, 'dist'),\n        compress: true,\n        port: 9000,\n        proxy: {\n            '/api': {\n                target: 'https://api.github.com'\n            }\n        }\n        // ...\n    }\n}\n```\n\n`devServetr`里面`proxy`则是关于代理的配置，该属性为对象的形式，对象中每一个属性就是一个代理的规则匹配\n\n属性的名称是需要被代理的请求路径前缀，一般为了辨别都会设置前缀为` /api`，值为对应的代理匹配规则，对应如下：\n\n- target：表示的是代理到的目标地址\n- pathRewrite：默认情况下，我们的 /api-hy 也会被写入到URL中，如果希望删除，可以使用pathRewrite\n- secure：默认情况下不接收转发到https的服务器上，如果希望支持，可以设置为false\n- changeOrigin：它表示是否更新代理后请求的 headers 中host地址\n\n\n\n\n\n## 二、工作原理\n\n `proxy`工作原理实质上是利用`http-proxy-middleware` 这个`http`代理中间件，实现请求转发给其他服务器\n\n举个例子：\n\n在开发阶段，本地地址为`http://localhost:3000`，该浏览器发送一个前缀带有`/api`标识的请求到服务端获取数据，但响应这个请求的服务器只是将请求转发到另一台服务器中\n\n```js\nconst express = require('express');\nconst proxy = require('http-proxy-middleware');\n\nconst app = express();\n\napp.use('/api', proxy({target: 'http://www.example.org', changeOrigin: true}));\napp.listen(3000);\n\n// http://localhost:3000/api/foo/bar -> http://www.example.org/api/foo/bar\n```\n\n\n\n## 三、跨域\n\n在开发阶段， `webpack-dev-server` 会启动一个本地开发服务器，所以我们的应用在开发阶段是独立运行在 `localhost `的一个端口上，而后端服务又是运行在另外一个地址上\n\n所以在开发阶段中，由于浏览器同源策略的原因，当本地访问后端就会出现跨域请求的问题\n\n通过设置`webpack proxy`实现代理请求后，相当于浏览器与服务端中添加一个代理者\n\n当本地发送请求的时候，代理服务器响应该请求，并将请求转发到目标服务器，目标服务器响应数据后再将数据返回给代理服务器，最终再由代理服务器将数据响应给本地\n\n ![](https://static.ecool.fun//article/9c49aa8e-58c9-40e8-b96d-28beb8d8f999.png)\n\n在代理服务器传递数据给本地浏览器的过程中，两者同源，并不存在跨域行为，这时候浏览器就能正常接收数据\n\n注意：**服务器与服务器之间请求数据并不会存在跨域行为，跨域行为是浏览器安全策略限制**\n\n",
    "level": 3,
    "status": 2,
    "appId": 7,
    "createAt": "2021-07-05T15:33:37.000Z",
    "updateAt": "2024-01-25T19:07:54.000Z",
    "updateUserId": 11,
    "isCollected": false,
    "currentIndex": 103,
    "prev": "a2580d1e-90e9-48bc-b93c-247425fb3e5f",
    "next": "af816690-2a3c-4685-a562-991e3040af15"
  },
  "post": {
    "exerciseKey": "03d5dfc7-9bb9-4129-9145-b4da4d4fa11f",
    "category": "QA",
    "title": "说说webpack proxy工作原理？为什么能解决跨域?",
    "level": 3,
    "updateAt": "2024-01-25T19:07:54+00:00"
  },
  "tag": {
    "id": 28,
    "tagName": "工程化",
    "type": "1",
    "exerciseCount": 33
  }
}