{
  "data": {
    "id": 536,
    "exerciseKey": "cfff7bf1-9ff0-4661-8e8e-2ddec4ed270a",
    "category": "QA",
    "renderType": "md",
    "title": "Nginx支持哪些负载均衡调度算法？",
    "desc": null,
    "options": null,
    "explanation": "* weight轮询（默认，常用，具有HA功效！）：接收到的请求按照权重分配到不同的后端服务器，即使在使用过程中，某一台后端服务器宕机，Nginx会自动将该服务器剔除出队列，请求受理情况不会受到任何影响。 这种方式下，可以给不同的后端服务器设置一个权重值(weight)，用于调整不同的服务器上请求的分配率；权重数据越大，被分配到请求的几率越大；该权重值，主要是针对实际工作环境中不同的后端服务器硬件配置进行调整的。\n* ip_hash（常用）：每个请求按访问ip的hash结果分配，这样每个访客固定访问一个后端服务器，这也在一定程度上解决了集群部署环境下session共享的问题。\n* fair：智能调整调度算法，动态的根据后端服务器的请求处理到响应的时间进行均衡分配，响应时间短处理效率高的服务器分配到请求的概率高，响应时间长处理效率低的服务器分配到的请求少；结合了前两者的优点的一种调度算法。但是需要注意的是Nginx默认不支持fair算法，如果要使用这种调度算法，请安装upstream_fair模块。\n* url_hash：按照访问的url的hash结果分配请求，每个请求的url会指向后端固定的某个服务器，可以在Nginx作为静态服务器的情况下提高缓存效率。同样要注意Nginx默认不支持这种调度算法，要使用的话需要安装Nginx的hash软件包。",
    "level": 3.5,
    "status": 2,
    "appId": 7,
    "createAt": "2021-07-19T14:04:05.000Z",
    "updateAt": "2021-07-25T10:31:37.000Z",
    "updateUserId": 11,
    "isCollected": false,
    "currentIndex": 819,
    "prev": "7566c4ff-4ce9-4357-85db-ce5494d9cf90",
    "next": "5a88ac52-80ca-4ecb-90ab-12674b8cd704"
  },
  "post": {
    "exerciseKey": "cfff7bf1-9ff0-4661-8e8e-2ddec4ed270a",
    "category": "QA",
    "title": "Nginx支持哪些负载均衡调度算法？",
    "level": 3.5,
    "updateAt": "2021-07-25T10:31:37+00:00"
  },
  "tag": {
    "id": 16,
    "tagName": "计算机网络",
    "type": "1",
    "exerciseCount": 72
  }
}