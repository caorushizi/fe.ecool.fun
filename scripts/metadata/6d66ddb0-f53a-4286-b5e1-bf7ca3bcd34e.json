{
  "data": {
    "id": 2059,
    "exerciseKey": "6d66ddb0-f53a-4286-b5e1-bf7ca3bcd34e",
    "category": "QA",
    "renderType": "md",
    "title": "如何让 Proxy 去监听基本数据类型？",
    "desc": null,
    "options": null,
    "explanation": "`Proxy`无法直接监听基本数据类型（如字符串、数字、布尔值等），因为它们是不可变的。`Proxy`只能在对象级别上进行操作，而不是基本数据类型。\n\n当我们尝试使用`Proxy`包装基本数据类型时，会得到一个`TypeError`错误，因为基本数据类型不具有属性和方法。\n\n以下展示了尝试在基本数据类型上应用`Proxy`时会发生的错误：\n\n```javascript\nconst value = 'Hello';\n\nconst handler = {\n  set(target, property, value) {\n    console.log(`Setting property '${property}' to '${value}'`);\n    target[property] = value;\n    return true;\n  }\n};\n\nconst proxyValue = new Proxy(value, handler); // TypeError: Cannot create proxy with a non-object as target\n```\n\n如果要监听基本数据类型的更改，最好使用其他方式，例如通过触发事件或调用回调函数来通知更改。可以创建一个自定义的数据包装器，将基本数据类型包装在对象中，并在该对象上实现监听逻辑。这样，可以在包装器对象上添加`Proxy`以监听其属性的更改。\n\n以下是一个示例，演示如何使用自定义的数据包装器来监听基本数据类型的更改：\n\n```javascript\nfunction ValueWrapper(value) {\n  this.value = value;\n  this.onChange = null;\n}\n\nValueWrapper.prototype.setValue = function(newValue) {\n  this.value = newValue;\n  if (typeof this.onChange === 'function') {\n    this.onChange(this.value);\n  }\n};\n\nconst wrapper = new ValueWrapper('Hello');\n\nconst handler = {\n  set(target, property, value) {\n    console.log(`Setting property '${property}' to '${value}'`);\n    target[property] = value;\n    if (typeof target.onChange === 'function') {\n      target.onChange(target.value);\n    }\n    return true;\n  }\n};\n\nconst proxyWrapper = new Proxy(wrapper, handler);\n\nproxyWrapper.onChange = newValue => {\n  console.log(`Value changed: ${newValue}`);\n};\n\nproxyWrapper.setValue('Hi'); // 输出: Setting property 'value' to 'Hi', Value changed: Hi\n```\n\n在上述示例中，我们创建了一个`ValueWrapper`对象作为数据包装器，并在其原型上定义了`setValue`方法来设置值并触发更改事件。然后，我们使用`Proxy`对该包装器对象进行拦截，以监听`value`属性的更改，并在适当时调用回调函数 `onChange`。\n\n通过这种方式，可以实现对基本数据类型的更改进行监听和响应。",
    "level": 3,
    "status": 2,
    "appId": 7,
    "createAt": "2023-12-17T10:09:00.000Z",
    "updateAt": "2023-12-17T18:09:22.000Z",
    "updateUserId": 11,
    "isCollected": false,
    "currentIndex": 268,
    "prev": "06ed39d5-65ff-4276-a2f3-b7dc9cebf52e",
    "next": "37ec6705-eb04-44c9-99eb-4ffda663c7f7"
  },
  "post": {
    "exerciseKey": "6d66ddb0-f53a-4286-b5e1-bf7ca3bcd34e",
    "category": "QA",
    "title": "如何让 Proxy 去监听基本数据类型？",
    "level": 3,
    "updateAt": "2023-12-17T18:09:22+00:00"
  },
  "tag": {
    "id": 10,
    "tagName": "JavaScript",
    "type": "1",
    "exerciseCount": 322
  }
}