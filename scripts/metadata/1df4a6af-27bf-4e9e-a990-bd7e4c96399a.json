{
  "data": {
    "id": 13,
    "exerciseKey": "1df4a6af-27bf-4e9e-a990-bd7e4c96399a",
    "category": "Choice",
    "renderType": "md",
    "title": "输出是什么？",
    "desc": "```javascript\nfor (var i = 0; i < 3; i++) {\n  setTimeout(() => console.log(i), 1)\n}\n\nfor (let i = 0; i < 3; i++) {\n  setTimeout(() => console.log(i), 1)\n}\n```",
    "options": "{\"options\":[\"0 1 2 和 0 1 2\",\"0 1 2 和 3 3 3\",\"3 3 3 和 0 1 2\"],\"isMulti\":false,\"answer\":[2]}",
    "explanation": "由于 JavaScript 的事件循环，`setTimeout` 回调会在*遍历结束后*才执行。因为在第一个遍历中遍历 `i` 是通过 `var` 关键字声明的，所以这个值是全局作用域下的。在遍历过程中，我们通过一元操作符 `++` 来每次递增 `i` 的值。当 `setTimeout` 回调执行的时候，`i` 的值等于 3。\n在第二个遍历中，遍历 `i` 是通过 `let` 关键字声明的：通过 `let` 和 `const` 关键字声明的变量是拥有块级作用域（指的是任何在 {} 中的内容）。在每次的遍历过程中，`i` 都有一个新值，并且每个值都在循环内的作用域中。",
    "level": 2,
    "status": 2,
    "appId": 7,
    "createAt": "2021-07-02T15:33:04.000Z",
    "updateAt": "2021-07-03T16:42:23.000Z",
    "updateUserId": 11,
    "isCollected": false,
    "currentIndex": 1180,
    "prev": "c9e06422-43a4-4dc7-8a07-35b878896123",
    "next": ""
  },
  "post": {
    "exerciseKey": "1df4a6af-27bf-4e9e-a990-bd7e4c96399a",
    "category": "Choice",
    "title": "输出是什么？",
    "level": 2,
    "updateAt": "2021-07-03T16:42:23+00:00"
  },
  "tag": {
    "id": 32,
    "tagName": "选择题",
    "type": "1",
    "exerciseCount": 151
  }
}