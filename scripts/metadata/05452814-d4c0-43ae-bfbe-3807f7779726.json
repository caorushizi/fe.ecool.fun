{
  "data": {
    "id": 2072,
    "exerciseKey": "05452814-d4c0-43ae-bfbe-3807f7779726",
    "category": "QA",
    "renderType": "md",
    "title": "webpack 5 的主要升级点有哪些？",
    "desc": null,
    "options": null,
    "explanation": "-  持久缓存（Persistent Caching）： Webpack 5引入了更好的持久缓存机制，利用了更稳定的HashedModuleIdsPlugin和NamedChunksPlugin，以改善构建性能。\n- Tree-shaking 改进： Webpack 5对Tree-shaking进行了改进，提供了更好的代码优化，以便删除未使用的代码。\n- 支持 WebAssembly（WASM）： Webpack 5 对 WebAssembly 提供了原生的支持，使得在项目中使用 WebAssembly 更加方便。\n- 支持 ES6 模块导入（Dynamic Import）： Webpack 5对动态导入语法（import()）提供了更好的支持，可以更轻松地进行代码分割。\n- 模块联邦（Module Federation）： 这是Webpack 5中的一项重大功能，允许将多个独立的Webpack构建连接在一起，实现模块共享，从而更好地支持微服务架构。\n- 缓存组（Caching Groups）： 新的缓存组概念被引入，可以更细粒度地控制模块的缓存策略。\n- 内置代码分割优化（optimization.splitChunks）： Webpack 5通过optimization.splitChunks进行了重新设计，提供了更灵活的配置选项，使得代码分割更为强大和易用。\n- 默认配置优化： Webpack 5 默认配置中的一些优化，使得开箱即用的性能更好。\n- 提高构建性能： Webpack 5引入了一些性能优化，包括更快的持久化缓存、更快的构建速度等。\n- 移除废弃特性： 作为更新，Webpack 5移除了一些过时的特性和API，因此在升级时需要注意潜在的破坏性变化。",
    "level": 3,
    "status": 2,
    "appId": 7,
    "createAt": "2023-12-17T10:45:34.000Z",
    "updateAt": "2024-02-19T11:53:43.000Z",
    "updateUserId": 11,
    "isCollected": false,
    "currentIndex": 20,
    "prev": "cbbef7f1-c87e-4c3c-9f0a-c8c2f0683075",
    "next": "d17cf190-40d8-4405-bc82-eb54480ca38c"
  },
  "post": {
    "exerciseKey": "05452814-d4c0-43ae-bfbe-3807f7779726",
    "category": "QA",
    "title": "webpack 5 的主要升级点有哪些？",
    "level": 3,
    "updateAt": "2024-02-19T11:53:43+00:00"
  },
  "tag": {
    "id": 28,
    "tagName": "工程化",
    "type": "1",
    "exerciseCount": 33
  }
}