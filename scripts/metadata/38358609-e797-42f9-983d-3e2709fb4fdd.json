{
  "data": {
    "id": 176,
    "exerciseKey": "38358609-e797-42f9-983d-3e2709fb4fdd",
    "category": "QA",
    "renderType": "md",
    "title": "怎么使用 CSS3 实现动画？",
    "desc": null,
    "options": null,
    "explanation": "## 一、是什么\n\nCSS动画（CSS Animations）是为层叠样式表建议的允许可扩展标记语言（XML）元素使用CSS的动画的模块\n\n即指元素从一种样式逐渐过渡为另一种样式的过程\n\n常见的动画效果有很多，如平移、旋转、缩放等等，复杂动画则是多个简单动画的组合\n\n`css`实现动画的方式，有如下几种：\n\n- transition 实现渐变动画\n- transform 转变动画\n- animation 实现自定义动画\n\n\n## 二、实现方式\n\n### transition 实现渐变动画\n\n`transition`的属性如下：\n\n- property:填写需要变化的css属性\n- duration:完成过渡效果需要的时间单位(s或者ms)\n- timing-function:完成效果的速度曲线\n- delay: 动画效果的延迟触发时间\n\n其中`timing-function`的值有如下：\n\n| 值                            | 描述                                                         |\n| ----------------------------- | ------------------------------------------------------------ |\n| linear                        | 匀速（等于 cubic-bezier(0,0,1,1)）                           |\n| ease                          | 从慢到快再到慢（cubic-bezier(0.25,0.1,0.25,1)）              |\n| ease-in                       | 慢慢变快（等于 cubic-bezier(0.42,0,1,1)）                    |\n| ease-out                      | 慢慢变慢（等于 cubic-bezier(0,0,0.58,1)）                    |\n| ease-in-out                   | 先变快再到慢（等于 cubic-bezier(0.42,0,0.58,1)），渐显渐隐效果 |\n| cubic-bezier(*n*,*n*,*n*,*n*) | 在 cubic-bezier 函数中定义自己的值。可能的值是 0 至 1 之间的数值 |\n\n注意：并不是所有的属性都能使用过渡的，如`display:none<->display:block`\n\n举个例子，实现鼠标移动上去发生变化动画效果\n\n```html\n<style>\n       .base {\n            width: 100px;\n            height: 100px;\n            display: inline-block;\n            background-color: #0EA9FF;\n            border-width: 5px;\n            border-style: solid;\n            border-color: #5daf34;\n            transition-property: width, height, background-color, border-width;\n            transition-duration: 2s;\n            transition-timing-function: ease-in;\n            transition-delay: 500ms;\n        }\n\n        /*简写*/\n        /*transition: all 2s ease-in 500ms;*/\n        .base:hover {\n            width: 200px;\n            height: 200px;\n            background-color: #5daf34;\n            border-width: 10px;\n            border-color: #3a8ee6;\n        }\n</style>\n<div class=\"base\"></div>\n```\n\n### transform 转变动画\n\n包含四个常用的功能：\n\n- translate：位移\n- scale：缩放\n- rotate：旋转\n- skew：倾斜\n\n一般配合`transition`过度使用\n\n注意的是，`transform`不支持`inline`元素，使用前把它变成`block`\n\n举个例子\n\n```html\n<style>\n    .base {\n        width: 100px;\n        height: 100px;\n        display: inline-block;\n        background-color: #0EA9FF;\n        border-width: 5px;\n        border-style: solid;\n        border-color: #5daf34;\n        transition-property: width, height, background-color, border-width;\n        transition-duration: 2s;\n        transition-timing-function: ease-in;\n        transition-delay: 500ms;\n    }\n    .base2 {\n        transform: none;\n        transition-property: transform;\n        transition-delay: 5ms;\n    }\n\n    .base2:hover {\n        transform: scale(0.8, 1.5) rotate(35deg) skew(5deg) translate(15px, 25px);\n    }\n</style>\n <div class=\"base base2\"></div>\n```\n\n可以看到盒子发生了旋转，倾斜，平移，放大\n\n\n\n### animation 实现自定义动画\n\n`animation`是由 8 个属性的简写，分别如下：\n\n| 属性                                   | 描述                                                         | 属性值                                        |\n| -------------------------------------- | ------------------------------------------------------------ | --------------------------------------------- |\n| animation-duration                     | 指定动画完成一个周期所需要时间，单位秒（s）或毫秒（ms），默认是 0 |                                               |\n| animation-timing-function              | 指定动画计时函数，即动画的速度曲线，默认是 \"ease\"            | linear、ease、ease-in、ease-out、ease-in-out  |\n| animation-delay                        | 指定动画延迟时间，即动画何时开始，默认是 0                   |                                               |\n| animation-iteration-count              | 指定动画播放的次数，默认是 1                                 |                                               |\n| animation-direction 指定动画播放的方向 | 默认是 normal                                                | normal、reverse、alternate、alternate-reverse |\n| animation-fill-mode                    | 指定动画填充模式。默认是 none                                | forwards、backwards、both                     |\n| animation-play-state                   | 指定动画播放状态，正在运行或暂停。默认是 running             | running、pauser                               |\n| animation-name                         | 指定 @keyframes 动画的名称                                   |                                               |\n\n`CSS` 动画只需要定义一些关键的帧，而其余的帧，浏览器会根据计时函数插值计算出来，\n\n通过 `@keyframes` 来定义关键帧\n\n因此，如果我们想要让元素旋转一圈，只需要定义开始和结束两帧即可：\n\n```css\n@keyframes rotate{\n    from{\n        transform: rotate(0deg);\n    }\n    to{\n        transform: rotate(360deg);\n    }\n}\n```\n\n`from` 表示最开始的那一帧，`to` 表示结束时的那一帧\n\n也可以使用百分比刻画生命周期\n\n```css\n@keyframes rotate{\n    0%{\n        transform: rotate(0deg);\n    }\n    50%{\n        transform: rotate(180deg);\n    }\n    100%{\n        transform: rotate(360deg);\n    }\n}\n```\n\n定义好了关键帧后，下来就可以直接用它了：\n\n```css\nanimation: rotate 2s;\n```\n\n\n\n\n\n## 三、总结\n\n| 属性               | 含义                                                         |\n| ------------------ | ------------------------------------------------------------ |\n| transition（过度） | 用于设置元素的样式过度，和animation有着类似的效果，但细节上有很大的不同 |\n| transform（变形）  | 用于元素进行旋转、缩放、移动或倾斜，和设置样式的动画并没有什么关系，就相当于color一样用来设置元素的“外表” |\n| translate（移动）  | 只是transform的一个属性值，即移动                            |\n| animation（动画）  | 用于设置动画属性，他是一个简写的属性，包含6个属性            |\n",
    "level": 1.5,
    "status": 2,
    "appId": 7,
    "createAt": "2021-07-03T13:30:23.000Z",
    "updateAt": "2024-01-24T17:28:18.000Z",
    "updateUserId": 11,
    "isCollected": false,
    "currentIndex": 181,
    "prev": "9083d1ed-fedc-4aec-ba50-df836e983e55",
    "next": "417ebda0-3f2d-48d3-95ec-ae1838bf39cb"
  },
  "post": {
    "exerciseKey": "38358609-e797-42f9-983d-3e2709fb4fdd",
    "category": "QA",
    "title": "怎么使用 CSS3 实现动画？",
    "level": 1.5,
    "updateAt": "2024-01-24T17:28:18+00:00"
  },
  "tag": {
    "id": 11,
    "tagName": "CSS",
    "type": "1",
    "exerciseCount": 90
  }
}