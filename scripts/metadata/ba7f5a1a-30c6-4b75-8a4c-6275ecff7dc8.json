{
  "data": {
    "id": 1922,
    "exerciseKey": "ba7f5a1a-30c6-4b75-8a4c-6275ecff7dc8",
    "category": "QA",
    "renderType": "md",
    "title": "你对 babel 了解吗，能不能说说几个 stage 代表什么意思？",
    "desc": null,
    "options": null,
    "explanation": "Babel 是一个广泛使用的 JavaScript 编译器，它可以将新版本的 JavaScript 代码转换为向后兼容的旧版本代码。\n\nBabel 通过使用不同的插件集合来支持各个 ECMAScript（ES）提案的不同阶段，这些阶段被称为 \"stage\"。\n\n以下是几个常见的 Babel stage（阶段）及其代表的意思：\n\n1. **Stage 0 - Strawman（展示阶段）**:\n   - 这是提案中最初的阶段，表明该提案还处于初始阶段，可能只是一个想法或草案，并没有正式进入 ECMAScript 规范的流程中。\n\n2. **Stage 1 - Proposal（建议阶段）**:\n   - 在这个阶段，提案已经成为了正式的 ECMAScript 提案，已经有了详细的规范和设计说明，并且正在讨论和收集反馈。\n\n3. **Stage 2 - Draft（草案阶段）**:\n   - 草案阶段表明该提案已经比较成熟，在语言规范中进行了初步定义，并且正在进行实验和实现。\n\n4. **Stage 3 - Candidate（候选阶段）**:\n   - 候选阶段表明该提案已经基本成熟，规范已经稳定，并且已经有了多个浏览器或环境的实现和测试。\n\n5. **Stage 4 - Finished（完成阶段）**:\n   - 完成阶段表明该提案已经准备好被纳入下一个版本的 ECMAScript 规范中，并且已经通过了所有必要的测试和审查。\n\n需要注意的是，不是所有的提案都会按照这个阶段流程发展。一些重要的提案可能直接进入较高的阶段，而其他的提案可能在某个阶段停滞或被废弃。\n\nBabel 提供了一系列插件集合，用于转译各个不同阶段的 ECMAScript 提案。根据你的需求，在 Babel 的配置文件中可以选择不同的插件集合，以支持你希望使用的 ECMAScript 特性。",
    "level": 1,
    "status": 2,
    "appId": 7,
    "createAt": "2022-11-15T12:56:46.000Z",
    "updateAt": "2023-12-18T10:43:08.000Z",
    "updateUserId": 11,
    "isCollected": false,
    "currentIndex": 245,
    "prev": "cf173a5c-bf67-4121-ad14-ed7404bc77a4",
    "next": "4a0ca854-e576-4046-a740-f1ef8d4060c9"
  },
  "post": {
    "exerciseKey": "ba7f5a1a-30c6-4b75-8a4c-6275ecff7dc8",
    "category": "QA",
    "title": "你对 babel 了解吗，能不能说说几个 stage 代表什么意思？",
    "level": 1,
    "updateAt": "2023-12-18T10:43:08+00:00"
  },
  "tag": {
    "id": 28,
    "tagName": "工程化",
    "type": "1",
    "exerciseCount": 33
  }
}