{
  "data": {
    "id": 1838,
    "exerciseKey": "c8a51567-945f-461d-b632-0209dd1917f5",
    "category": "QA",
    "renderType": "md",
    "title": "Canvas和SVG有什么区别？",
    "desc": null,
    "options": null,
    "explanation": "\n**（1）SVG：**\nSVG可缩放矢量图形（Scalable Vector Graphics）是基于可扩展标记语言XML描述的2D图形的语言，SVG基于XML就意味着SVG DOM中的每个元素都是可用的，可以为某个元素附加Javascript事件处理器。在 SVG 中，每个被绘制的图形均被视为对象。如果 SVG 对象的属性发生变化，那么浏览器能够自动重现图形。\n\n\n其特点如下：\n\n- 不依赖分辨率\n- 支持事件处理器\n- 最适合带有大型渲染区域的应用程序（比如谷歌地图）\n- 复杂度高会减慢渲染速度（任何过度使用 DOM 的应用都不快）\n- 不适合游戏应用\n\n\n\n**（2）Canvas：**\nCanvas是画布，通过Javascript来绘制2D图形，是逐像素进行渲染的。其位置发生改变，就会重新进行绘制。\n\n\n其特点如下：\n\n- 依赖分辨率\n- 不支持事件处理器\n- 弱的文本渲染能力\n- 能够以 .png 或 .jpg 格式保存结果图像\n- 最适合图像密集型的游戏，其中的许多对象会被频繁重绘\n\n\n\n注：矢量图，也称为面向对象的图像或绘图图像，在数学上定义为一系列由线连接的点。矢量文件中的图形元素称为对象。每个对象都是一个自成一体的实体，它具有颜色、形状、轮廓、大小和屏幕位置等属性。\n",
    "level": 2,
    "status": 2,
    "appId": 7,
    "createAt": "2022-06-25T06:33:17.000Z",
    "updateAt": "2022-06-25T14:36:16.000Z",
    "updateUserId": 11,
    "isCollected": false,
    "currentIndex": 515,
    "prev": "8e135d77-c081-4419-b0b3-2e43461d5b55",
    "next": "93ffefee-3471-48a5-b60c-1b7adf8edf13"
  },
  "post": {
    "exerciseKey": "c8a51567-945f-461d-b632-0209dd1917f5",
    "category": "QA",
    "title": "Canvas和SVG有什么区别？",
    "level": 2,
    "updateAt": "2022-06-25T14:36:16+00:00"
  },
  "tag": {
    "id": 12,
    "tagName": "HTML",
    "type": "1",
    "exerciseCount": 57
  }
}