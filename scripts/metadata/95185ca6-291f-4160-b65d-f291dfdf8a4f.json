{
  "data": {
    "id": 1997,
    "exerciseKey": "95185ca6-291f-4160-b65d-f291dfdf8a4f",
    "category": "QA",
    "renderType": "md",
    "title": "说下 websocket 的连接原理",
    "desc": null,
    "options": null,
    "explanation": "WebSocket 是一种基于 TCP 协议的双向通信协议，它可以在客户端和服务器之间建立持久性的连接，实现实时的数据传输和交互。其主要原理如下：\n\n1. 利用 HTTP 建立连接：WebSocket 的连接需要通过 HTTP 请求首先建立握手（Handshaking）过程，该过程类似于普通的 HTTP 请求，但包含了一些特殊的头部字段，例如 Upgrade 和 Connection 等。\n\n2. 建立 TCP 连接：建立 HTTP 连接之后，客户端和服务器之间会建立一个 TCP 连接，并交换协商的加密和压缩参数等。\n\n3. 双向通信：建立好 TCP 连接之后，就可以进行双向通信了。客户端和服务器都可以在任意时刻发送消息，并且不需要发送 HTTP 请求或响应，而是直接通过已经建立好的连接进行数据的传递和处理。\n\n4. 断开连接：当双方其中一方决定关闭连接时，会发送一个特殊的控制帧（Close Frame），告知对方关闭连接。\n\n需要注意的是，在 WebSocket 的连接过程中，由于需要进行 Handshaking 过程，因此第一次连接较慢。同时，在建立连接之后，需要保持长时间的连接状态，因此需要考虑网络稳定性、负载均衡和错误重试等问题，以保证连接的可靠性和稳定性。\n\nWebSocket 是一种基于 TCP 的双向通信协议，通过建立长时间的持久连接来实现客户端和服务器之间的实时数据传输和交互。它在实时性、效率和安全性等方面都有很大的优势，适用于在线游戏、即时聊天、实时监控等领域。",
    "level": 2,
    "status": 2,
    "appId": 7,
    "createAt": "2023-05-24T01:24:25.000Z",
    "updateAt": "2023-05-26T09:27:27.000Z",
    "updateUserId": 11,
    "isCollected": false,
    "currentIndex": 364,
    "prev": "a2443317-c9d1-408a-856e-d8ec18558a7a",
    "next": "76826682-df0e-4dad-a50f-d500a09065cb"
  },
  "post": {
    "exerciseKey": "95185ca6-291f-4160-b65d-f291dfdf8a4f",
    "category": "QA",
    "title": "说下 websocket 的连接原理",
    "level": 2,
    "updateAt": "2023-05-26T09:27:27+00:00"
  },
  "tag": {
    "id": 16,
    "tagName": "计算机网络",
    "type": "1",
    "exerciseCount": 72
  }
}