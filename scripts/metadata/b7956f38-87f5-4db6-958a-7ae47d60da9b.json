{
  "data": {
    "id": 532,
    "exerciseKey": "b7956f38-87f5-4db6-958a-7ae47d60da9b",
    "category": "QA",
    "renderType": "md",
    "title": " Atom CSS 是什么？",
    "desc": null,
    "options": null,
    "explanation": "Atom CSS：原子CSS，意思是一个类只干一件事。\n\n不同于大家常用的BEM这类规则，原子css就是拆分，所有 CSS 类都有一个唯一的 CSS 规则。例如如下\n\n```css\n.w-full{\n  width:100%;\n}\n.h-full{\n  height:100%;\n}\n```\n\n而像这种就不是\n```\n.w&h-full{\n  width:100%;\n  height:100%;\n}\n```\n\n当我们使用的时候，直接写class名就可以\n\n```html\n<html>\n\t<body>\n    \t<div id=\"app\" class=\"w-full h-full\">\n        </div>\n\t</body>\n</html>\n\n```\n\n## 原子CSS的优缺点\n\n* 优点\n\t* 减少了css体积，提高了css复用\n\t* 减少起名的复杂度\n* 缺点\n\t* 增加了记忆成本。将css拆分为原子之后，你势必要记住一些class才能书写，哪怕tailwindcss提供了完善的工具链，你写background，也要记住开头是bg。\n    * 增加了html结构的复杂性。当整个dom都是这样class名，势必会带来调试的麻烦，有的时候很难定位具体css问题\n    * 你仍需要起class名。对于大部分属性而言，你可以只用到center,auto，100%，这些值，但是有时候你仍需要设定不一样的参数值，例如left，top，这时候你还需要起一个class名\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
    "level": 2,
    "status": 2,
    "appId": 7,
    "createAt": "2021-07-19T13:51:53.000Z",
    "updateAt": "2021-07-25T10:31:26.000Z",
    "updateUserId": 11,
    "isCollected": false,
    "currentIndex": 823,
    "prev": "7f3601d3-aa34-499f-b395-563fa84f9aad",
    "next": "ea7dbe32-726d-4d21-a9bc-3df77e1ec853"
  },
  "post": {
    "exerciseKey": "b7956f38-87f5-4db6-958a-7ae47d60da9b",
    "category": "QA",
    "title": " Atom CSS 是什么？",
    "level": 2,
    "updateAt": "2021-07-25T10:31:26+00:00"
  },
  "tag": {
    "id": 11,
    "tagName": "CSS",
    "type": "1",
    "exerciseCount": 90
  }
}