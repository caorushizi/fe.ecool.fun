{
  "data": {
    "id": 1543,
    "exerciseKey": "aea31e8b-4929-4a02-8fe5-8eb27fd663bf",
    "category": "QA",
    "renderType": "md",
    "title": "实现一个对象的 flatten 方法",
    "desc": "实现以下转换：\n\n```js\nconst obj = {\n\ta: {\n  \tb: 1,\n\t\tc: 2,\n\t\td: {\n\t\t\te: 5\n\t\t}\n  },\n  b: [1, 3, {a: 2, b: 3}],\n  c: 3\n}\n```\n\nflatten(obj){} 结果返回如下\n\n```js\n// {\n//   'a.b': 1,\n//   'a.c': 2,\n//   'a.d.e': 5,\n//   'b[0]': 1,\n//   'b[1]': 3,\n//   'b[2].a': 2,\n//   'b[2].b': 3\n//    c: 3\n// }\n```\n\n",
    "options": null,
    "explanation": "从结果入手，可以看出需要对象进行遍历，把里面的属性值依次输出。\n\n核心方法体就是：传入对象的 key 值和 value，对 value 再进行递归遍历。\n\n而 js 的数据类型可以分为`基础数据类型`和`引用数据类型`，对于题目而言，基础数据类型无需再进行深层次遍历，引用数据类型需要再次进行递归。\n\n```js\nfunction flat(obj, key = \"\", res = {}, isArray = false) { \n  for (let [k, v] of Object.entries(obj)) { \n    if (Array.isArray(v)) { \n      let tmp = isArray ? key + \"[\" + k + \"]\" : key + k \n      flat(v, tmp, res, true) \n    } else if (typeof v === \"object\") { \n      let tmp = isArray ? key + \"[\" + k + \"].\" : key + k + \".\" \n      flat(v, tmp, res) \n    } else { \n      let tmp = isArray ? key + \"[\" + k + \"]\" : key + k \n      res[tmp] = v \n    } \n  } \n  return res \n}\n```\n\n还有一种写法更加容易理解：\n\n```js\nfunction objectFlat(obj = ''){\n  const res = {}\n  function flat(item , preKey = ''){\n    Object.entries(item).forEach(([key,value]) => {\n      let newKey = key\n      if (Array.isArray(item)){\n        // console.log('是数组')\n        newKey = preKey ? `${preKey}[${key}]` : key\n      }else{\n        newKey = preKey ? `${preKey}.${key}` : key\n      }\n      if (value && typeof value === 'object'){\n        flat(value , newKey)\n      }else{\n        res[newKey] = value\n      }\n    })\n  }\n  flat(obj)\n  return res\n}\n\nconst source = { a: { b: { c: 1, d: 2 }, e: 3 }, f: { g: 2 } }\nconsole.log(objectFlat(source));\nconst obj = {\n  a: 1,\n  b: [1, 2, { c: true }],\n  c: { e: 2, f: 3 },\n  g: null,\n};\nconsole.log(objectFlat(obj));\n```",
    "level": 3,
    "status": 2,
    "appId": 7,
    "createAt": "2021-11-17T11:41:58.000Z",
    "updateAt": "2021-11-17T19:52:15.000Z",
    "updateUserId": 11,
    "isCollected": false,
    "currentIndex": 736,
    "prev": "a09650c2-d9af-4f1a-ad05-8b33757cbca7",
    "next": "01c20a11-d5c8-4e32-bbb2-a8d3a5da1961"
  },
  "post": {
    "exerciseKey": "aea31e8b-4929-4a02-8fe5-8eb27fd663bf",
    "category": "QA",
    "title": "实现一个对象的 flatten 方法",
    "level": 3,
    "updateAt": "2021-11-17T19:52:15+00:00"
  },
  "tag": {
    "id": 26,
    "tagName": "编程题",
    "type": "1",
    "exerciseCount": 109
  }
}