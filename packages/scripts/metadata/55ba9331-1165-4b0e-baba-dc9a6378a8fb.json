{
  "data": {
    "id": 286,
    "exerciseKey": "55ba9331-1165-4b0e-baba-dc9a6378a8fb",
    "category": "QA",
    "renderType": "md",
    "title": "前端该如何选择图片的格式？",
    "desc": null,
    "options": null,
    "explanation": "##图片的类型\n\n图片的类型目前就分为两种：\n\n* 位图\n* 矢量图\n\n### 位图\n\n所谓位图就是用像素点拼起来的图也叫点阵图，平时我们用到的png、jpg等图片就是位图。\n\n### 矢量图\n\n矢量图，也叫做向量图。矢量图并不纪录画面上每一点的信息，而是纪录了元素形状及颜色的算法，当你打开一幅矢量图的时候，软件对图形对应的函数进行运算，将运算结果图形的形状和颜色显示给你看。\n\n无论显示画面是大还是小，画面上的对象对应的算法是不变的，所以，即使对画面进行倍数相当大的缩放，它也不会像位图那样会失真。\n\n常见的就是svg格式的。\n\n## 图片的压缩类型\n\n* 无压缩\n* 有损压缩\n* 无损压缩\n\n### 无压缩\n\n无压缩的图片格式不对图片数据进行压缩处理，能准确地呈现原图片。例如BMP格式的图片。\n\n### 有损压缩\n\n指在压缩文件大小的过程中，损失了一部分图片的信息，也即降低了图片的质量（即图片被压糊了），并且这种损失是不可逆的。\n\n常见的有损压缩手段是按照一定的算法将临近的像素点进行合并。压缩算法不会对图片所有的数据进行编码压缩，而是在压缩的时候，去除了人眼无法识别的图片细节。因此有损压缩可以在同等图片质量的情况下大幅降低图片的体积。例如jpg格式的图片使用的就是有损压缩。\n\n### 无损压缩\n\n在压缩图片的过程中，图片的质量没有任何损耗。我们任何时候都可以从无损压缩过的图片中恢复出原来的信息。\n\n压缩算法对图片的所有的数据进行编码压缩，能在保证图片的质量的同时降低图片的体积。例如png、gif使用的就是无损压缩。\n\n## 图片位数\n\n图片位数通常分为8、16、24、32\n\n* 图片位数越大，能表示的颜色越多，同时占用的体积也约大。例如8位图片支持256种颜色，即2的8次方。\n* 图片位数越大，颜色过渡也就越细腻，携带的色彩信息可以更加丰富。\n* 32位跟24位的区别就是多了一个Alpha通道，用来支持半透明，其他的跟24位基本一样。\n\n## 常见的图片的格式\n\n### GIF\n\nGIF的全称是`Graphics Interchange Format`，可译为图形交换格式，是在1987年由Compu Serve公司为了填补跨平台图像格式的空白而发展起来的。\n\nGIF采用的是Lempel-Zev-Welch（LZW）压缩算法，最高支持256种颜色。由于这种特性，GIF比较适用于色彩较少的图片，比如卡通造型、公司标志等等。如果碰到需要用24位真彩色的场合，那么GIF的表现力就有限了。\n\nGIF格式图片最大的特性是帧动画，相比古老的bmp格式，尺寸较小，而且支持透明(不支持半透明，因为不支持 Alpha 透明通道 )和动画。\n\n优点：\n\n* 体积小\n* 支持动画\n\n缺点：\n\n* 由于采用了8位压缩，最多只能处理256种颜色\n\n### JPEG/JPG\n\nJPEG是`Joint Photographic Experts Group`(联合图像专家组)的缩写，文件后辍名为\"．jpg\"或\"．jpeg\"，是常用的图像文件格式，由一个软件开发联合会组织制定，是一种有损压缩格式，能够将图像压缩在很小的储存空间，图像中重复或不重要的资料会被丢失，因此容易造成图像数据的损伤。尤其是使用过高的压缩比例，将使最终解压缩后恢复的图像质量明显降低，如果追求高品质图像，不宜采用过高压缩比例。\n\n优点：\n\n* 采用有损压缩，压缩后体积更小\n* 支持24位真彩色\n* 支持渐进式加载\n\n缺点：\n\n* 有损压缩会损坏图片的质量\n* 不支持透明/半透明\n\n### 渐进式jpeg(progressive jpeg)\n\n渐进式jpg文件包含多次扫描，这些扫描顺寻的存储在jpg文件中。打开文件过程中，会先显示整个图片的模糊轮廓，随着扫描次数的增加，图片变得越来越清晰。\n\n### PNG\n\npng，即便携式网络图形是一种无损压缩的位图片形格式，其设计目的是试图替代GIF和TIFF文件格式，同时增加一些GIF文件格式所不具备的特性。PNG使用从LZ77派生的无损数据压缩算法，一般应用于JAVA程序、网页或S60程序中，原因是它压缩比高，生成文件体积小。\n\npng支持8位、24位、32位3种，我们通常叫它们png8、png24、png32。\n\n优点：\n\n* 无损压缩\n* 支持透明、半透明\n* 最高支持24位真彩色图像以及8位灰度图像，从而彻底地消除锯齿边缘。\n\n缺点：\n\n* 与jpg的有损耗压缩相比，png提供的压缩量较少\n* 不支持动画，如需支持动画还得使用apng\n\n### APNG\n\nAPNG（Animated Portable Network Graphics）是一个基于PNG（Portable Network Graphics）的位图动画格式。实际上就是多张png组成的动图。MAC电脑打开可以看到组成apng的每一张图。\n\n优点：\n\n* 支持png的所有优点\n* 支持动画\n\n缺点：\n\n* 浏览器支持情况较差\n\n### WEBP\n\nWebP是由Google最初在2010年发布，目标是减少文件大小。它能同时支持无损压缩和有损压缩。\n\n它几乎集成了以上所有图片的优点，并且能够拥有更高的压缩率，但是浏览器支持率还不够理想。\n\n### SVG\n\nSVG是一种用XML定义的语言，用来描述二维矢量及矢量/栅格图形。SVG提供了3种类型的图形对象：矢量图形（例如：由直线和曲线组成的路径）、图象、文本。图形对象还可进行分组、添加样式、变换、组合等操作，特征集包括嵌套变换、剪切路径、alpha蒙板、滤镜效果、模板对象和其它扩展。\n\nSVG图形是可交互的和动态的，可以在SVG文件中嵌入动画元素或通过脚本来定义动画。\n\nSVG与上面图片不同的是它是矢量图，无论你怎么放大，它都不会失真；同时，SVG文件通常要比比JPEG和PNG格式的文件要小很多。\n\n优点：\n\n* SVG 可被非常多的工具读取和修改（比如记事本）\n* SVG 与 JPEG 和 GIF 图像比起来，尺寸更小，且可压缩性更强。\n* SVG 是可伸缩\n* SVG 图像可在任何的分辨率下被高质量地打印\n* SVG 可在图像质量不下降的情况下被放大\n* SVG 可以与 JavaScript 技术一起运行\n* SVG 文件是纯粹的 XML\n\n缺点：\n\n* 渲染成本相对于其他格式图片比较高，对于性能有影响。\n* 需要学习成本，因为SVG是一种用XML定义的语言。\n\n## 如何选择图片的格式\n\n![image.png](https://static.ecool.fun//article/d0ab542b-20ea-4709-baab-54aed4e0e07b.png)\n\n",
    "pivot": "",
    "vipLimit": 0,
    "level": 3,
    "appId": 7,
    "createAt": "2021-07-04T07:59:32.000Z",
    "updateAt": "2024-08-10T17:04:54.000Z",
    "isCollected": false,
    "currentIndex": 1214,
    "filterTotalNum": 1487,
    "prev": "d26004b5-4091-4a30-b66f-7c6e78dd34c8",
    "next": "79fe443f-0556-4359-8e05-804161ac48ef"
  },
  "post": {
    "exerciseKey": "55ba9331-1165-4b0e-baba-dc9a6378a8fb",
    "category": "QA",
    "title": "前端该如何选择图片的格式？",
    "level": 3,
    "createAt": "2021-07-04T07:59:32+00:00",
    "updateAt": "2024-08-10T17:04:54+00:00"
  },
  "tag": {
    "id": 12,
    "tagName": "HTML",
    "type": "1",
    "exerciseCount": 68
  }
}