{
  "data": {
    "id": 174,
    "exerciseKey": "dc8c6233-f645-444c-8e31-f18bc3f5244f",
    "category": "QA",
    "renderType": "md",
    "title": "什么是响应式设计？响应式设计的基本原理是什么？如何进行实现？",
    "desc": null,
    "options": null,
    "explanation": "## 一、是什么\n\n响应式网站设计（Responsive Web design）是一种网络页面设计布局，页面的设计与开发应当根据用户行为以及设备环境(系统平台、屏幕尺寸、屏幕定向等)进行相应的响应和调整\n\n描述响应式界面最著名的一句话就是“Content is like water”\n\n大白话便是“如果将屏幕看作容器，那么内容就像水一样”\n\n响应式网站常见特点：\n\n- 同时适配PC + 平板 + 手机等\n\n- 标签导航在接近手持终端设备时改变为经典的抽屉式导航\n\n- 网站的布局会根据视口来调整模块的大小和位置\n\n ![](https://static.ecool.fun//article/3e044cad-d40d-467e-ae42-290e94e41d3f.png)\n\n\n\n## 二、实现方式\n\n响应式设计的基本原理是通过媒体查询检测不同的设备屏幕尺寸做处理，为了处理移动端，页面头部必须有`meta`声明`viewport`\n\n```html\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no”>\n```\n\n属性对应如下：\n\n- width=device-width: 是自适应手机屏幕的尺寸宽度\n\n- maximum-scale:是缩放比例的最大值\n\n- inital-scale:是缩放的初始化\n\n- user-scalable:是用户的可以缩放的操作\n\n\n\n实现响应式布局的方式有如下：\n\n- 媒体查询\n- 百分比\n- vw/vh\n- rem\n\n\n\n### 媒体查询\n\n`CSS3 `中的增加了更多的媒体查询，就像`if`条件表达式一样，我们可以设置不同类型的媒体条件，并根据对应的条件，给相应符合条件的媒体调用相对应的样式表\n\n使用`@Media`查询，可以针对不同的媒体类型定义不同的样式，如：\n\n```css\n@media screen and (max-width: 1920px) { ... }\n```\n\n当视口在375px - 600px之间，设置特定字体大小18px\n\n```css\n@media screen (min-width: 375px) and (max-width: 600px) {\n  body {\n    font-size: 18px;\n  }\n}\n```\n\n通过媒体查询，可以通过给不同分辨率的设备编写不同的样式来实现响应式的布局，比如我们为不同分辨率的屏幕，设置不同的背景图片\n\n比如给小屏幕手机设置@2x图，为大屏幕手机设置@3x图，通过媒体查询就能很方便的实现\n\n\n\n### 百分比\n\n通过百分比单位 \" % \" 来实现响应式的效果\n\n 比如当浏览器的宽度或者高度发生变化时，通过百分比单位，可以使得浏览器中的组件的宽和高随着浏览器的变化而变化，从而实现响应式的效果\n\n`height`、`width`属性的百分比依托于父标签的宽高，但是其他盒子属性则不完全依赖父元素：\n\n- 子元素的top/left和bottom/right如果设置百分比，则相对于直接非static定位(默认定位)的父元素的高度/宽度\n\n- 子元素的padding如果设置百分比，不论是垂直方向或者是水平方向，都相对于直接父亲元素的width，而与父元素的height无关。\n\n- 子元素的margin如果设置成百分比，不论是垂直方向还是水平方向，都相对于直接父元素的width\n\n- border-radius不一样，如果设置border-radius为百分比，则是相对于自身的宽度\n\n可以看到每个属性都使用百分比，会照成布局的复杂度，所以不建议使用百分比来实现响应式\n\n\n\n\n\n### vw/vh\n\n`vw`表示相对于视图窗口的宽度，`vh`表示相对于视图窗口高度。 任意层级元素，在使用`vw`单位的情况下，`1vw`都等于视图宽度的百分之一\n\n与百分比布局很相似，在以前文章提过与`%`的区别，这里就不再展开述说\n\n\n\n### rem\n\n在以前也讲到，`rem`是相对于根元素`html`的`font-size`属性，默认情况下浏览器字体大小为`16px`，此时`1rem = 16px`\n\n可以利用前面提到的媒体查询，针对不同设备分辨率改变`font-size`的值，如下：\n\n```css\n@media screen and (max-width: 414px) {\n  html {\n    font-size: 18px\n  }\n}\n\n@media screen and (max-width: 375px) {\n  html {\n    font-size: 16px\n  }\n}\n\n@media screen and (max-width: 320px) {\n  html {\n    font-size: 12px\n  }\n}\n```\n\n为了更准确监听设备可视窗口变化，我们可以在`css`之前插入`script`标签，内容如下：\n\n```js\n//动态为根元素设置字体大小\nfunction init () {\n    // 获取屏幕宽度\n    var width = document.documentElement.clientWidth\n    // 设置根元素字体大小。此时为宽的10等分\n    document.documentElement.style.fontSize = width / 10 + 'px'\n}\n\n//首次加载应用，设置一次\ninit()\n// 监听手机旋转的事件的时机，重新设置\nwindow.addEventListener('orientationchange', init)\n// 监听手机窗口变化，重新设置\nwindow.addEventListener('resize', init)\n```\n\n无论设备可视窗口如何变化，始终设置`rem`为`width`的1/10，实现了百分比布局\n\n除此之外，我们还可以利用主流`UI`框架，如：`element ui`、`antd`提供的栅格布局实现响应式\n\n\n\n### 小结\n\n响应式设计实现通常会从以下几方面思考：\n\n- 弹性盒子（包括图片、表格、视频）和媒体查询等技术\n- 使用百分比布局创建流式布局的弹性UI，同时使用媒体查询限制元素的尺寸和内容变更范围\n- 使用相对单位使得内容自适应调节\n- 选择断点，针对不同断点实现不同布局和内容展示\n\n\n\n## 三、总结\n\n响应式布局优点可以看到：\n\n- 面对不同分辨率设备灵活性强\n- 能够快捷解决多设备显示适应问题\n\n缺点：\n\n- 仅适用布局、信息、框架并不复杂的部门类型网站\n- 兼容各种设备工作量大，效率低下\n- 代码累赘，会出现隐藏无用的元素，加载时间加长\n- 其实这是一种折中性质的设计解决方案，多方面因素影响而达不到最佳效果\n- 一定程度上改变了网站原有的布局结构，会出现用户混淆的情况\n\n",
    "level": 3,
    "status": 2,
    "appId": 7,
    "createAt": "2021-07-03T13:29:03.000Z",
    "updateAt": "2024-01-24T17:27:53.000Z",
    "updateUserId": 11,
    "isCollected": false,
    "currentIndex": 183,
    "prev": "417ebda0-3f2d-48d3-95ec-ae1838bf39cb",
    "next": "6f841b28-be0d-413f-9b7a-70e740fa7621"
  },
  "post": {
    "exerciseKey": "dc8c6233-f645-444c-8e31-f18bc3f5244f",
    "category": "QA",
    "title": "什么是响应式设计？响应式设计的基本原理是什么？如何进行实现？",
    "level": 3,
    "updateAt": "2024-01-24T17:27:53+00:00"
  },
  "tag": {
    "id": 11,
    "tagName": "CSS",
    "type": "1",
    "exerciseCount": 90
  }
}
