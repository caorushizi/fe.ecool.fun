{
  "data": {
    "id": 129,
    "exerciseKey": "758b3c03-bac2-4d4f-a900-63f478a1e770",
    "category": "Choice",
    "renderType": "md",
    "title": "输出什么？",
    "desc": "```javascript\nasync function* range(start, end) {\n\tfor (let i = start; i <= end; i++) {\n\t\tyield Promise.resolve(i);\n\t}\n}\n\n(async () => {\n\tconst gen = range(1, 3);\n\tfor await (const item of gen) {\n\t\tconsole.log(item);\n\t}\n})();\n```",
    "options": "{\"options\":[\"Promise {1} Promise {2} Promise {3}\",\"Promise {<pending>} Promise {<pending>} Promise {<pending>}\",\"1 2 3\",\"undefined undefined undefined\"],\"isMulti\":false,\"answer\":[2]}",
    "explanation": "我们给 函数range 传递： `Promise{1}`, `Promise{2}`, `Promise{3}`，Generator 函数 `range` 返回一个全是 async object promise 数组。我们将 async object 赋值给变量 `gen`，之后我们使用`for await ... of` 进行循环遍历。我们将返回的 Promise 实例赋值给 `item`： 第一个返回 `Promise{1}`， 第二个返回 `Promise{2}`，之后是 `Promise{3}`。因为我们正 _awaiting_ `item` 的值，resolved 状态的 promsie，promise数组的resolved _值_ 以此为： `1`，`2`，`3`.",
    "level": 0.5,
    "status": 2,
    "appId": 7,
    "createAt": "2021-07-02T15:33:04.000Z",
    "updateAt": "2021-07-03T22:31:15.000Z",
    "updateUserId": 11,
    "isCollected": false,
    "currentIndex": 1087,
    "prev": "c8a6250a-c30b-4ddc-8b5c-5313c04e136e",
    "next": "a8d808be-7214-4540-bb33-594b23a5a9d3"
  },
  "post": {
    "exerciseKey": "758b3c03-bac2-4d4f-a900-63f478a1e770",
    "category": "Choice",
    "title": "输出什么？",
    "level": 0.5,
    "updateAt": "2021-07-03T22:31:15+00:00"
  },
  "tag": {
    "id": 32,
    "tagName": "选择题",
    "type": "1",
    "exerciseCount": 151
  }
}
