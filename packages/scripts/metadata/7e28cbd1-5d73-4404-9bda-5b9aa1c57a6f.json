{
  "data": {
    "id": 2315,
    "exerciseKey": "7e28cbd1-5d73-4404-9bda-5b9aa1c57a6f",
    "category": "QA",
    "renderType": "md",
    "title": "http1.1 的 keep-alive 和 http2 的多路复用有什么区别？",
    "desc": "",
    "options": "",
    "explanation": "HTTP/1.1 的 Keep-Alive 和 HTTP/2 的多路复用是两种不同的技术，尽管它们都旨在提高网络请求的效率，但实现方式和功能有显著区别。\n\n### **1. Keep-Alive（HTTP/1.1）**\n\n- **连接保持**：HTTP/1.1 引入了 Keep-Alive 机制，允许在同一个 TCP 连接上发送多个 HTTP 请求和响应，减少了频繁建立和关闭连接的开销。\n- **请求顺序**：在一个连接上，HTTP/1.1 的请求是顺序处理的，即必须等待前一个请求完成后，才能发送下一个请求，这可能导致队头阻塞（Head-of-Line Blocking）的问题。\n- **连接重用**：Keep-Alive 可以降低延迟，提高性能，但在高并发场景下，仍然需要为每个请求打开一个 TCP 连接。\n\n### **2. 多路复用（HTTP/2）**\n\n- **并发请求**：HTTP/2 的多路复用允许在同一个 TCP 连接上并发地发送多个请求和响应，而无需等待前一个完成。这解决了队头阻塞的问题。\n- **流的概念**：HTTP/2 引入了流的概念，每个请求和响应都被视为一个独立的流，流的优先级可以被设置，这样可以根据需求合理调度。\n- **二进制协议**：HTTP/2 使用二进制帧传输数据，进一步优化了数据传输的效率，相比于文本协议的 HTTP/1.1，更加高效。",
    "pivot": "",
    "vipLimit": 1,
    "level": 3,
    "appId": 7,
    "createAt": "2024-08-13T08:30:22.000Z",
    "updateAt": "2024-09-19T01:36:36.000Z",
    "isCollected": false,
    "currentIndex": 275,
    "filterTotalNum": 1487,
    "prev": "d7f71615-0e65-4aee-b9ba-d50dbcab6e29",
    "next": "274aef71-fe2f-4e9d-9684-0b048bebdd4f"
  },
  "post": {
    "exerciseKey": "7e28cbd1-5d73-4404-9bda-5b9aa1c57a6f",
    "category": "QA",
    "title": "http1.1 的 keep-alive 和 http2 的多路复用有什么区别？",
    "level": 3,
    "createAt": "2024-08-13T08:30:22+00:00",
    "updateAt": "2024-09-19T01:36:36+00:00"
  },
  "tag": {
    "id": 16,
    "tagName": "计算机网络",
    "type": "1",
    "exerciseCount": 95
  }
}