{
  "data": {
    "id": 2621,
    "exerciseKey": "19b30b63-a332-4538-a362-50d7732af156",
    "category": "QA",
    "renderType": "md",
    "title": "枚举和常量枚举的区别",
    "desc": "",
    "options": "",
    "explanation": "在 TypeScript 中，**枚举（`enum`）** 和 **常量枚举（`const enum`）** 都用于定义一组命名的常量，但它们之间有一些重要的区别。下面是它们的主要区别及使用场景：\n\n### **1. 定义方式**\n\n- **普通枚举（`enum`）**：\n\n  普通枚举在编译时会生成一个对象，包含枚举成员及其对应的值。在代码中使用枚举成员时，TypeScript 会将其替换为相应的值。\n\n  ```typescript\n  enum Color {\n    Red = 1,\n    Green,\n    Blue\n  }\n\n  let colorName: string = Color[2]; // 'Green'\n  let colorValue: number = Color.Red; // 1\n  ```\n\n- **常量枚举（`const enum`）**：\n\n  常量枚举在编译时不会生成对象代码，而是将所有的枚举成员值直接内联到代码中。这使得 `const enum` 更高效，但也失去了反向映射的功能。\n\n  ```typescript\n  const enum Color {\n    Red = 1,\n    Green,\n    Blue\n  }\n\n  let colorValue: number = Color.Red; // 1\n  ```\n\n  在编译后，`Color.Red` 会被直接替换为 `1`，而不会生成 `Color` 对象。\n\n### **2. 反向映射**\n\n- **普通枚举**：\n  \n  普通枚举会生成一个包含反向映射的对象，使得可以通过值找到对应的枚举名称。\n\n  ```typescript\n  enum Color {\n    Red = 1,\n    Green,\n    Blue\n  }\n\n  console.log(Color[2]); // 'Green'\n  ```\n\n- **常量枚举**：\n\n  常量枚举不生成反向映射对象。它只会在编译时内联值，因此无法通过值获取对应的枚举名称。\n\n  ```typescript\n  const enum Color {\n    Red = 1,\n    Green,\n    Blue\n  }\n\n  // 无法通过值获取名称\n  // console.log(Color[2]); // 编译错误\n  ```\n\n### **3. 编译后的输出**\n\n- **普通枚举**：\n\n  编译后会生成一个包含所有枚举值的对象。\n\n  ```javascript\n  var Color;\n  (function (Color) {\n      Color[Color[\"Red\"] = 1] = \"Red\";\n      Color[Color[\"Green\"] = 2] = \"Green\";\n      Color[Color[\"Blue\"] = 3] = \"Blue\";\n  })(Color || (Color = {}));\n  ```\n\n- **常量枚举**：\n\n  编译后不会生成额外的对象，枚举值会被直接替换到代码中。\n\n  ```javascript\n  var colorValue = 1; // 直接内联值\n  ```\n\n### **4. 性能**\n\n- **普通枚举**：\n\n  由于生成了对象，普通枚举在运行时会有一定的开销。\n\n- **常量枚举**：\n\n  常量枚举由于不生成对象，只是在编译时内联值，因此在性能上更优。\n\n### **5. 使用场景**\n\n- **普通枚举**：适用于需要枚举值和名称双向映射的场景，例如调试、日志记录等。\n\n- **常量枚举**：适用于性能要求较高的场景，或者不需要反向映射的场合，例如常量值的替代。",
    "pivot": "",
    "vipLimit": 1,
    "level": 0.5,
    "appId": 7,
    "createAt": "2024-08-13T08:30:36.000Z",
    "updateAt": "2024-08-15T14:08:24.000Z",
    "isCollected": false,
    "currentIndex": 124,
    "filterTotalNum": 1487,
    "prev": "5680ca8b-077f-445e-b38c-ac64356163c7",
    "next": "00492e10-3989-452d-ba2e-be65b1417322"
  },
  "post": {
    "exerciseKey": "19b30b63-a332-4538-a362-50d7732af156",
    "category": "QA",
    "title": "枚举和常量枚举的区别",
    "level": 0.5,
    "createAt": "2024-08-13T08:30:36+00:00",
    "updateAt": "2024-08-15T14:08:24+00:00"
  },
  "tag": {
    "id": 19,
    "tagName": "Typescript",
    "type": "1",
    "exerciseCount": 55
  }
}