{
  "data": {
    "id": 190,
    "exerciseKey": "4b009a64-6d98-4469-89d4-9c254d682fa6",
    "category": "QA",
    "renderType": "md",
    "title": "Javscript数组的常用方法有哪些？",
    "desc": null,
    "options": null,
    "explanation": "以下是一些常见的JavaScript数组方法：\n\n1. `push()`: 在数组末尾添加一个或多个元素，并返回新数组的长度。\n2. `pop()`: 移除并返回数组末尾的元素。\n3. `unshift()`: 在数组开头添加一个或多个元素，并返回新数组的长度。\n4. `shift()`: 移除并返回数组开头的元素。\n5. `concat()`: 合并两个或更多数组，并返回新的合并后的数组，不会修改原始数组。\n6. `slice()`: 从数组中提取指定位置的元素，返回一个新的数组，不会修改原始数组。\n7. `splice()`: 从指定位置删除或替换元素，可修改原始数组。\n8. `indexOf()`: 查找指定元素在数组中的索引，如果不存在则返回-1。\n9. `lastIndexOf()`: 从数组末尾开始查找指定元素在数组中的索引，如果不存在则返回-1。\n10. `includes()`: 检查数组是否包含指定元素，返回一个布尔值。\n11. `join()`: 将数组中的所有元素转为字符串，并使用指定的分隔符连接它们。\n12. `reverse()`: 颠倒数组中元素的顺序，会修改原始数组。\n13. `sort()`: 对数组中的元素进行排序，默认按照字母顺序排序，会修改原始数组。\n14. `filter()`: 创建一个新数组，其中包含符合条件的所有元素。\n15. `map()`: 创建一个新数组，其中包含对原始数组中的每个元素进行操作后的结果。\n16. `reduce()`: 将数组中的元素进行累积操作，返回一个单一的值。\n17. `forEach()`: 对数组中的每个元素执行提供的函数。\n",
    "level": 1.5,
    "status": 2,
    "appId": 7,
    "createAt": "2021-07-03T13:45:09.000Z",
    "updateAt": "2023-07-20T09:40:28.000Z",
    "updateUserId": 11,
    "isCollected": false,
    "currentIndex": 302,
    "prev": "a9854cb2-406f-4837-a57f-947f818e5731",
    "next": "ddcf6ea7-290c-4ab1-9b5c-d77f08c9771d"
  },
  "post": {
    "exerciseKey": "4b009a64-6d98-4469-89d4-9c254d682fa6",
    "category": "QA",
    "title": "Javscript数组的常用方法有哪些？",
    "level": 1.5,
    "updateAt": "2023-07-20T09:40:28+00:00"
  },
  "tag": {
    "id": 10,
    "tagName": "JavaScript",
    "type": "1",
    "exerciseCount": 322
  }
}