{
  "data": {
    "id": 647,
    "exerciseKey": "e3f8c4ad-de53-4f97-9ec1-54b65c787569",
    "category": "QA",
    "renderType": "md",
    "title": "说说你对git reset 和 git revert 的理解？区别？",
    "desc": null,
    "options": null,
    "explanation": "## 一、是什么\n\n### git reset\n\n`reset`用于回退版本，可以遗弃不再使用的提交\n\n执行遗弃时，需要根据影响的范围而指定不同的参数，可以指定是否复原索引或工作树内容\n\n ![](https://static.ecool.fun//article/2fabcf2c-c219-4a1d-9d33-e2a9d94db3ba.png)\n\n\n\n### git revert\n\n在当前提交后面，新增一次提交，抵消掉上一次提交导致的所有变化，不会改变过去的历史，主要是用于安全地取消过去发布的提交\n\n ![](https://static.ecool.fun//article/4c9d4308-2ced-4fdb-bbfc-5067162156da.png)\n\n\n## 二、如何用\n\n### git reset\n\n当没有指定`ID`的时候，默认使用`HEAD`，如果指定`ID`，那么就是基于指向`ID`去变动暂存区或工作区的内容\n\n```cmd\n// 没有指定ID, 暂存区的内容会被当前ID版本号的内容覆盖，工作区不变\ngit reset\n\n// 指定ID，暂存区的内容会被指定ID版本号的内容覆盖，工作区不变\ngit reset <ID> \n```\n\n日志`ID`可以通过查询，可以`git log`进行查询，如下：\n\n```cmd\ncommit a7700083ace1204ccdff9f71631fb34c9913f7c5 (HEAD -> master)\nAuthor: linguanghui <linguanghui@baidu.com>\nDate:   Tue Aug 17 22:34:40 2021 +0800\n\n    second commit\n\ncommit e31118663ce66717edd8a179688a7f3dde5a9393\nAuthor: linguanghui <linguanghui@baidu.com>\nDate:   Tue Aug 17 22:20:01 2021 +0800\n\n    first commit\n```\n\n常见命令如下：\n\n- --mixed（默认）：默认的时候，只有暂存区变化\n\n- --hard参数：如果使用 --hard 参数，那么工作区也会变化\n\n- --soft：如果使用 --soft 参数，那么暂存区和工作区都不会变化\n\n ![](https://static.ecool.fun//article/bb244dfd-d025-4088-82ef-b1a4096ff987.png)\n\n\n\n### git revert\n\n跟`git reset`用法基本一致，`git revert` 撤销某次操作，此次操作之前和之后的 `commit`和`history`都会保留，并且把这次撤销，作为一次最新的提交，如下：\n\n```cmd\ngit revert <commit_id> \n```\n\n如果撤销前一个版本，可以通过如下命令：\n\n```cmd\ngit revert HEAD\n```\n\n撤销前前一次，如下：\n\n```cmd\ngit revert HEAD^\n```\n\n## 三、区别\n\n撤销（revert）被设计为撤销公开的提交（比如已经push）的安全方式，`git reset`被设计为重设本地更改\n\n因为两个命令的目的不同，它们的实现也不一样：重设完全地移除了一堆更改，而撤销保留了原来的更改，用一个新的提交来实现撤销\n\n两者主要区别如下：\n\n- git revert是用一次新的commit来回滚之前的commit，git reset是直接删除指定的commit\n- git reset 是把HEAD向后移动了一下，而git revert是HEAD继续前进，只是新的commit的内容和要revert的内容正好相反，能够抵消要被revert的内容\n- 在回滚这一操作上看，效果差不多。但是在日后继续 merge 以前的老版本时有区别\n\n> git revert是用一次逆向的commit“中和”之前的提交，因此日后合并老的branch时，之前提交合并的代码仍然存在，导致不能够重新合并\n>\n> 但是git reset是之间把某些commit在某个branch上删除，因而和老的branch再次merge时，这些被回滚的commit应该还会被引入\n\n- 如果回退分支的代码以后还需要的情况则使用`git revert`， 如果分支是提错了没用的并且不想让别人发现这些错误代码，则使用`git reset`\n",
    "pivot": "",
    "vipLimit": 0,
    "level": 2.5,
    "appId": 7,
    "createAt": "2021-10-24T03:41:23.000Z",
    "updateAt": "2024-08-10T17:05:50.000Z",
    "isCollected": false,
    "currentIndex": 853,
    "filterTotalNum": 1487,
    "prev": "cb0fc1b3-29a9-4f1a-b350-ec50276e5bdc",
    "next": "24674728-b580-4985-8fb0-e7c304f5e406"
  },
  "post": {
    "exerciseKey": "e3f8c4ad-de53-4f97-9ec1-54b65c787569",
    "category": "QA",
    "title": "说说你对git reset 和 git revert 的理解？区别？",
    "level": 2.5,
    "createAt": "2021-10-24T03:41:23+00:00",
    "updateAt": "2024-08-10T17:05:50+00:00"
  },
  "tag": {
    "id": 29,
    "tagName": "工具",
    "type": "1",
    "exerciseCount": 33
  }
}