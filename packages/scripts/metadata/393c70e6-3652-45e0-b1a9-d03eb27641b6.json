{
  "data": {
    "id": 434,
    "exerciseKey": "393c70e6-3652-45e0-b1a9-d03eb27641b6",
    "category": "QA",
    "renderType": "md",
    "title": "怎么进行移动端的调试？",
    "desc": null,
    "options": null,
    "explanation": "* vConsole：Web 调试面板\n\nvConsole 会在你网页中加一个悬浮的小按钮，可以点击它来打开关闭调试面板，并查看 DOM、Console、Network和 本地存储 等信息。基本可以满足普通前端开发的需求。使用方法也很简单，通过npm安装或者直接在需要的页面引入 js文件 ，然后 new VConsole() 就可以了。\n\n*  Charles\n\nCharles 是一款强大的抓包工具，可以截取包括 https 在内的各种网络请求并方便的查看具体信息。有 Mac、Windows 和 Linux多版本，通过配置 WIFI 代理，也可以拦截手机发出的请求。毕竟前端相当一部分报错是网络错误或数据不符合预期导致的（甩锅后端😄）。所以通过拦截 http 请求,查看具体的请求信息和数据，能获取很多有用的信息，可以在一定程度上帮助 debug。\n\n* Chrome浏览器 + Android\n\n使用Chrome中的 Inspect，直接在PC端调试android机器中的webview的页面。\n\n* Mac + IOS + Safari\n\n方法基本同上\n",
    "level": 2.5,
    "status": 2,
    "appId": 7,
    "createAt": "2021-07-06T15:44:58.000Z",
    "updateAt": "2021-07-07T00:14:08.000Z",
    "updateUserId": 11,
    "isCollected": false,
    "currentIndex": 920,
    "prev": "b9bd9552-5748-45b1-88a8-f36e45f6261f",
    "next": "22a4d7b2-40a6-44be-9910-86256ee1d557"
  },
  "post": {
    "exerciseKey": "393c70e6-3652-45e0-b1a9-d03eb27641b6",
    "category": "QA",
    "title": "怎么进行移动端的调试？",
    "level": 2.5,
    "updateAt": "2021-07-07T00:14:08+00:00"
  },
  "tag": {
    "id": 29,
    "tagName": "工具",
    "type": "1",
    "exerciseCount": 30
  }
}