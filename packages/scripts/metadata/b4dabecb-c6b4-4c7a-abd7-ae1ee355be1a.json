{
  "data": {
    "id": 2568,
    "exerciseKey": "b4dabecb-c6b4-4c7a-abd7-ae1ee355be1a",
    "category": "QA",
    "renderType": "md",
    "title": "TCP/IP 是如何保证数据包传输有序可靠的？\n\n",
    "desc": "",
    "options": "",
    "explanation": "TCP/IP 协议栈中的 TCP 协议提供了保证数据包传输有序和可靠的功能。以下是 TCP 如何实现这一目标的详细机制：\n\n### **1. 数据包传输有序**\n\nTCP 确保数据包的顺序是通过以下机制实现的：\n\n1. **序列号（Sequence Number）**：\n   - 每个 TCP 数据包（即 TCP 段）都有一个序列号，用于标识数据流中的位置。发送方会为每个数据包分配一个唯一的序列号。\n   - 接收方根据序列号重新排序接收到的数据包，确保数据的正确顺序。\n\n2. **确认应答（Acknowledgments）**：\n   - 接收方在接收到数据包后，会发送一个确认应答（ACK）回到发送方，表明数据包已成功接收，并指明期望接收的下一个数据包的序列号。\n   - 发送方通过这些确认应答知道哪些数据包已被接收，哪些数据包可能需要重新发送。\n\n### **2. 数据包传输可靠**\n\nTCP 通过以下机制实现数据传输的可靠性：\n\n1. **重传机制（Retransmission）**：\n   - 如果发送方在一定时间内未收到接收方的确认应答（ACK），发送方会重发数据包。这种情况可能发生在网络拥堵或数据包丢失时。\n\n2. **流量控制（Flow Control）**：\n   - TCP 使用流量控制机制来防止发送方发送过多的数据，导致接收方缓冲区溢出。接收方会告知发送方其接收能力（即接收窗口的大小），发送方依据此窗口大小调整数据发送速率。\n\n3. **拥塞控制（Congestion Control）**：\n   - TCP 通过拥塞控制机制来避免网络拥堵。它使用多种算法（如慢启动、拥塞避免、快速重传和快速恢复）来动态调整数据发送速率。\n\n4. **数据包完整性检查（Checksum）**：\n   - 每个 TCP 数据包都包含一个校验和字段，用于检测数据在传输过程中是否发生了损坏。接收方会计算数据包的校验和，并与数据包中的校验和进行比较。如果校验和不匹配，数据包会被丢弃，并请求重传。\n\n### **3. 数据流控制**\n\n1. **滑动窗口（Sliding Window）**：\n   - TCP 使用滑动窗口协议来控制数据的流动。窗口大小是接收方告知发送方的缓冲区大小，控制了发送方可以发送的数据量。\n   - 接收方通过调整窗口大小，动态调整数据的接收能力，从而避免数据丢失或缓冲区溢出。\n\n### **4. 排序和合并**\n\n1. **数据缓存和排序**：\n   - 接收方在接收到数据包后，会将数据包存储在缓存中，并根据序列号将数据包按正确顺序重新组装成完整的数据流。\n\n2. **数据合并**：\n   - 接收方将接收到的分段数据包按照序列号进行合并，确保应用层接收到的是完整的、按正确顺序的数据。\n",
    "pivot": "",
    "vipLimit": 1,
    "level": 3.5,
    "appId": 7,
    "createAt": "2024-08-13T08:30:31.000Z",
    "updateAt": "2024-08-15T23:00:41.000Z",
    "isCollected": false,
    "currentIndex": 155,
    "filterTotalNum": 1487,
    "prev": "c1aefc66-c3cb-4e29-961d-84a341071d8e",
    "next": "dbea0a9d-c362-4c32-a4a0-820dfa88368c"
  },
  "post": {
    "exerciseKey": "b4dabecb-c6b4-4c7a-abd7-ae1ee355be1a",
    "category": "QA",
    "title": "TCP/IP 是如何保证数据包传输有序可靠的？\n\n",
    "level": 3.5,
    "createAt": "2024-08-13T08:30:31+00:00",
    "updateAt": "2024-08-15T23:00:41+00:00"
  },
  "tag": {
    "id": 16,
    "tagName": "计算机网络",
    "type": "1",
    "exerciseCount": 95
  }
}