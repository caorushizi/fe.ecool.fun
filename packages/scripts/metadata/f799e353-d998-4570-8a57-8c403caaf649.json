{
  "data": {
    "id": 530,
    "exerciseKey": "f799e353-d998-4570-8a57-8c403caaf649",
    "category": "QA",
    "renderType": "md",
    "title": "什么是空间复杂度？",
    "desc": null,
    "options": null,
    "explanation": "> 空间复杂度是对一个算法在运行过程中临时占用存储空间的大小。\n\n## 计算方法\n\n* 忽略常数，用O(1)表示\n* 递归算法的空间复杂度=(递归深度n)*(每次递归所要的辅助空间)\n\n仅仅只复制单个变量，空间复杂度为O(1)。\n\n举例如下：空间复杂度为O(n) = O(1)。\n\n```javascript\nlet a = 1;\nlet b = 2;\nlet c = 3;\nconsole.log('输出a,b,c', a, b, c);\n```\n\n递归实现，调用fun函数，每次都创建1个变量k。调用n次，空间复杂度O(n*1) = O(n)。\n\n```javascript\nfunction fun(n) {\n  let k = 10;\n  if (n == k) {\n  \treturn n;\n  } else {\n  \treturn fun(++n)\n  }\n}\n```",
    "level": 2,
    "status": 2,
    "appId": 7,
    "createAt": "2021-07-17T13:54:21.000Z",
    "updateAt": "2021-07-17T22:43:24.000Z",
    "updateUserId": 11,
    "isCollected": false,
    "currentIndex": 826,
    "prev": "0e5e7b73-c27f-4e4f-a8ff-c39927175a55",
    "next": "6b11a97d-74b0-4768-a8ae-33b6886da458"
  },
  "post": {
    "exerciseKey": "f799e353-d998-4570-8a57-8c403caaf649",
    "category": "QA",
    "title": "什么是空间复杂度？",
    "level": 2,
    "updateAt": "2021-07-17T22:43:24+00:00"
  },
  "tag": {
    "id": 30,
    "tagName": "计算机基础",
    "type": "1",
    "exerciseCount": 16
  }
}
