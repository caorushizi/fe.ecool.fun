{
  "data": {
    "id": 577,
    "exerciseKey": "c6db446a-bbc3-42a9-bc4a-aeecfde8bcbc",
    "category": "QA",
    "renderType": "md",
    "title": "不同版本的 React 都做过哪些优化？",
    "desc": null,
    "options": null,
    "explanation": "React渲染页面的两个阶段：\n\n* 调度阶段（reconciliation）：在这个阶段 React 会更新数据生成新的 Virtual DOM，然后通过Diff算法，快速找出需要更新的元素，放到更新队列中去，得到新的更新队列。\n* 渲染阶段（commit）：这个阶段 React 会遍历更新队列，**将其所有的变更一次性更新到DOM上**。\n\n## React 15 架构\n\nReact15架构可以分为两层：\n\n* Reconciler（协调器）—— 负责找出变化的组件；\n* Renderer（渲染器）—— 负责将变化的组件渲染到页面上；\n\n在React15及以前，Reconciler采用递归的方式创建虚拟DOM，递归过程是不能中断的。如果组件树的层级很深，递归会占用线程很多时间，递归更新时间超过了16ms，用户交互就会卡顿。\n\n为了解决这个问题，React16将递归的无法中断的更新重构为异步的可中断更新，由于曾经用于递归的虚拟DOM数据结构已经无法满足需要。于是，全新的Fiber架构应运而生。\n\n## React 16 架构\n\n为了解决同步更新长时间占用线程导致页面卡顿的问题，也为了探索运行时优化的更多可能，React开始重构并一直持续至今。重构的目标是实现Concurrent Mode（并发模式）。\n\n从v15到v16，React团队花了两年时间将源码架构中的Stack Reconciler重构为Fiber Reconciler。\n\nReact16架构可以分为三层：\n\n* Scheduler（调度器）—— 调度任务的优先级，高优任务优先进入Reconciler；\n* Reconciler（协调器）—— 负责找出变化的组件：更新工作从递归变成了可以中断的循环过程。Reconciler内部采用了Fiber的架构；\n* Renderer（渲染器）—— 负责将变化的组件渲染到页面上。\n\n## React 17 优化\n\nReact16的expirationTimes模型只能区分是否>=expirationTimes决定节点是否更新。React17的lanes模型可以选定一个更新区间，并且动态的向区间中增减优先级，可以处理更细粒度的更新。\n\n>Lane用二进制位表示任务的优先级，方便优先级的计算（位运算），不同优先级占用不同位置的“赛道”，而且存在批的概念，优先级越低，“赛道”越多。高优先级打断低优先级，新建的任务需要赋予什么优先级等问题都是Lane所要解决的问题。\n\nConcurrent Mode的目的是实现一套可中断/恢复的更新机制。其由两部分组成：\n\n* 一套协程架构：Fiber Reconciler\n* 基于协程架构的启发式更新算法：控制协程架构工作方式的算法\n\n\n\n",
    "pivot": "",
    "vipLimit": 0,
    "level": 4,
    "appId": 7,
    "createAt": "2021-08-07T08:52:43.000Z",
    "updateAt": "2024-08-10T17:05:39.000Z",
    "isCollected": false,
    "currentIndex": 923,
    "filterTotalNum": 1487,
    "prev": "4585f639-0eff-4190-9fa0-e1c0838284e8",
    "next": "09420ad4-4cd0-4c3d-9b56-970e21c8f208"
  },
  "post": {
    "exerciseKey": "c6db446a-bbc3-42a9-bc4a-aeecfde8bcbc",
    "category": "QA",
    "title": "不同版本的 React 都做过哪些优化？",
    "level": 4,
    "createAt": "2021-08-07T08:52:43+00:00",
    "updateAt": "2024-08-10T17:05:39+00:00"
  },
  "tag": {
    "id": 13,
    "tagName": "React.js",
    "type": "1",
    "exerciseCount": 129
  }
}