{
  "data": {
    "id": 626,
    "exerciseKey": "4ca8dcc9-9ce6-457c-b6ef-3c2e322aeba5",
    "category": "QA",
    "renderType": "md",
    "title": "浏览器的同源策略是什么？",
    "desc": null,
    "options": null,
    "explanation": "同源策略（Same origin policy）是一种约定，它是浏览器最核心也最基本的安全功能，如果缺少了同源策略，则浏览器的正常功能可能都会受到影响。可以说 Web 是构建在同源策略基础之上的，浏览器只是针对同源策略的一种实现。\n\n它的核心就在于它认为自任何站点装载的信赖内容是不安全的。当被浏览器半信半疑的脚本运行在沙箱时，它们应该只被允许访问来自同一站点的资源，而不是那些来自其它站点可能怀有恶意的资源。\n\n所谓同源是指：**域名**、**协议**、**端口**相同。\n\n另外，同源策略又分为以下两种：\n\n* DOM 同源策略：禁止对不同源页面 DOM 进行操作。这里主要场景是 iframe 跨域的情况，不同域名的 iframe 是限制互相访问的。\n* XMLHttpRequest 同源策略：禁止使用 XHR 对象向不同源的服务器地址发起 HTTP 请求。",
    "pivot": "",
    "vipLimit": 0,
    "level": 0.5,
    "appId": 7,
    "createAt": "2021-09-25T02:42:15.000Z",
    "updateAt": "2024-07-20T11:49:30.000Z",
    "isCollected": false,
    "currentIndex": 874,
    "filterTotalNum": 1487,
    "prev": "6dd983d9-39fc-48ca-9e22-7599ab339f5b",
    "next": "594f4864-1932-4020-aec6-a2ae0fb16765"
  },
  "post": {
    "exerciseKey": "4ca8dcc9-9ce6-457c-b6ef-3c2e322aeba5",
    "category": "QA",
    "title": "浏览器的同源策略是什么？",
    "level": 0.5,
    "createAt": "2021-09-25T02:42:15+00:00",
    "updateAt": "2024-07-20T11:49:30+00:00"
  },
  "tag": {
    "id": 10,
    "tagName": "JavaScript",
    "type": "1",
    "exerciseCount": 379
  }
}