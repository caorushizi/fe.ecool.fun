{
  "data": {
    "id": 2878,
    "exerciseKey": "d687d4df-669d-46a1-a037-d84d8c819bfe",
    "category": "QA",
    "renderType": "md",
    "title": "如果想在小程序中嵌入 markdown 的文档，你有什么思路？",
    "desc": null,
    "options": null,
    "explanation": "小程序不支持直接渲染 `markdown`，但是支持富文本的渲染，可以将文档转成 html 后进行渲染，或者使用一些第三方的库直接进行 `markdown`完成渲染。\n\n### **1. 转成 html 后渲染**\n\n- **步骤**：\n  1. 使用 Markdown 解析库（如 `marked`、`markdown-it` 等）将 Markdown 文本转换为 HTML。\n  2. 使用小程序的 `<web-view>` 、`<rich-text>` 组件，或者自定义的组件渲染转换后的 HTML。\n\n- **示例**：\n  ```javascript\n  // 在 JavaScript 文件中\n  import marked from 'marked';\n\n  // 将 Markdown 转换为 HTML\n  const markdownText = '# Hello World\\nThis is a Markdown document.';\n  const html = marked(markdownText);\n\n  // 将转换后的 HTML 传递给小程序的页面或组件\n  this.setData({ html });\n  ```\n\n  ```html\n  <!-- 在 WXML 文件中 -->\n  <rich-text nodes=\"{{html}}\" />\n  ```\n\n### **2. 使用第三方的组件库**\n\n可以使用第三方库，如 `wxParse` 或 `towxml` 进行渲染。这些库可以将 Markdown 文本解析为微信小程序可以理解的组件和数据。\n\n以下是使用 `wxParse` 的基本步骤：\n\n1. 下载并导入 `wxParse` 到你的项目中。\n2. 在需要使用的页面的 JS 文件中，引入 `wxParse.js`。\n3. 使用 `wxParse.wxParse('markdown', 'md', markdownContent, this)` 方法将 Markdown 文本解析为数据和组件。\n4. 在对应的 WXML 文件中，使用 `<import src=\"wxParse.wxml\"/>` 导入 `wxParse` 的 WXML。\n5. 在需要显示 Markdown 的地方，使用 `<template is=\"wxParse\" data=\"{{wxParseData:markdown.nodes}}\"/>` 显示解析后的内容。\n\n以下是使用 `wxParse` 渲染 Markdown 的代码示例：\n\n```javascript\n// 引入 wxParse.js\nvar wxParse = require('../../wxParse/wxParse.js');\n\nPage({\n  data: {\n    markdown: ''\n  },\n  onLoad: function(options) {\n    var that = this;\n    var markdownContent = '# 这是一个标题\\n这是一段普通的文本';\n    wxParse.wxParse('markdown', 'md', markdownContent, that);\n  }\n});\n```\n\n```html\n<!-- 引入 wxParse.wxml -->\n<import src=\"../../wxParse/wxParse.wxml\"/>\n<view>\n  <!-- 显示解析后的内容 -->\n  <template is=\"wxParse\" data=\"{{wxParseData:markdown.nodes}}\"/>\n</view>\n```",
    "pivot": "",
    "vipLimit": 1,
    "level": 3,
    "appId": 7,
    "createAt": "2024-09-09T06:15:52.000Z",
    "updateAt": "2024-09-10T11:13:03.000Z",
    "isCollected": false,
    "currentIndex": 8,
    "filterTotalNum": 1487,
    "prev": "58f33dfb-be76-4251-ad48-d661d65c4b28",
    "next": "9ccba9eb-a2fe-4334-8c82-bf6fa2582cab"
  },
  "post": {
    "exerciseKey": "d687d4df-669d-46a1-a037-d84d8c819bfe",
    "category": "QA",
    "title": "如果想在小程序中嵌入 markdown 的文档，你有什么思路？",
    "level": 3,
    "createAt": "2024-09-09T06:15:52+00:00",
    "updateAt": "2024-09-10T11:13:03+00:00"
  },
  "tag": {
    "id": 75,
    "tagName": "场景题",
    "type": "1",
    "exerciseCount": 39
  }
}