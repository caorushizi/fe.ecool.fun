{
  "data": {
    "id": 2057,
    "exerciseKey": "7053c84f-1316-43f2-a2ba-23fb00318220",
    "category": "QA",
    "renderType": "md",
    "title": "需要在本地实现一个聊天室，多个tab页相互通信，不能用websocket，你会怎么做？",
    "desc": null,
    "options": null,
    "explanation": "可以考虑使用以下方法：\n\n1. 使用LocalStorage：这个存储API可在浏览器的不同标签页之间共享数据。当一个标签页发送消息时，将消息存储在LocalStorage中。其他标签页可以监听该存储区的变化，并读取最新的消息内容来实现通信效果。\n```js\n// 监听变化\nwindow.addEventListener(\"storage\", (e) => {\n    // todo ...\n});\n```\n\n2. 使用Broadcast Channel API：Broadcast Channel API 可以在浏览器的不同上下文（包括不同的标签页）之间进行双向通信。当一个标签页发送消息到广播频道时，其他标签页可以通过监听相同的广播频道来接收和响应消息。\n\n3. 使用SharedWorker：SharedWorker 是一种在多个浏览器上下文之间共享脚本执行的机制，它可以在不同的标签页之间进行通信。可以创建一个SharedWorker，然后在各个标签页中连接到该SharedWorker，使它们能够共享数据和通信。\n\n以上方法都可以实现在本地多个标签页之间进行通信，但需要根据具体需求和项目情况选择适合的解决方案。需要注意的是，这些方法只适用于本地通信，无法实现跨网络的实时通信效果，若需要实现更复杂的聊天室功能，WebSocket仍是更常用的选择。",
    "level": 2.5,
    "status": 2,
    "appId": 7,
    "createAt": "2023-12-17T10:01:13.000Z",
    "updateAt": "2024-02-01T15:22:30.000Z",
    "updateUserId": 11,
    "isCollected": false,
    "currentIndex": 22,
    "prev": "d17cf190-40d8-4405-bc82-eb54480ca38c",
    "next": "6fc9c443-f643-42c4-b2cd-224f4f89e92c"
  },
  "post": {
    "exerciseKey": "7053c84f-1316-43f2-a2ba-23fb00318220",
    "category": "QA",
    "title": "需要在本地实现一个聊天室，多个tab页相互通信，不能用websocket，你会怎么做？",
    "level": 2.5,
    "updateAt": "2024-02-01T15:22:30+00:00"
  },
  "tag": {
    "id": 10,
    "tagName": "JavaScript",
    "type": "1",
    "exerciseCount": 322
  }
}
