{
  "data": {
    "id": 2675,
    "exerciseKey": "5102cc7e-824a-4ecb-bcab-e04a5f32d522",
    "category": "QA",
    "renderType": "md",
    "title": "[3, 15, 8, 29, 102, 22].sort()，结果是多少，为什么？",
    "desc": "",
    "options": "",
    "explanation": "对于数组 `[3, 15, 8, 29, 102, 22]` 使用 `.sort()` 方法，结果是 ` [102, 15, 22, 29, 3, 8]`。\n\n### **原因**：\n\n`Array.prototype.sort()` 方法默认是按字典顺序（即字符串的顺序）对数组元素进行排序的。它会将数组中的元素转换为字符串，然后按字典顺序比较这些字符串。\n\n在这个例子中，排序过程如下：\n\n1. **转换为字符串**：\n   - `3` -> `\"3\"`\n   - `15` -> `\"15\"`\n   - `8` -> `\"8\"`\n   - `29` -> `\"29\"`\n   - `102` -> `\"102\"`\n   - `22` -> `\"22\"`\n\n2. **按字典顺序比较字符串**：\n   - `\"102\"` > `\"15\"`\n   - `\"15\"` > `\"22\"`\n   - `\"22\"` > `\"29\"`\n   - `\"29\"` > `\"3\"`\n   - `\"3\"` > `\"8\"`\n\n因此，排序后的结果是 `[102, 15, 22, 29, 3, 8]`。如果要按数值排序，需要传递一个比较函数给 `.sort()`，例如：\n\n```javascript\n[3, 15, 8, 29, 102, 22].sort((a, b) => a - b);\n```\n\n这将返回 `[3, 8, 15, 22, 29, 102]`。",
    "pivot": "",
    "vipLimit": 1,
    "level": 0.5,
    "appId": 7,
    "createAt": "2024-08-13T08:30:36.000Z",
    "updateAt": "2024-08-14T23:50:48.000Z",
    "isCollected": false,
    "currentIndex": 92,
    "filterTotalNum": 1487,
    "prev": "67bb706f-a325-4e89-9940-05ab3bcf4bf6",
    "next": "47b47141-d45d-457b-8eb9-18bcb6f47e98"
  },
  "post": {
    "exerciseKey": "5102cc7e-824a-4ecb-bcab-e04a5f32d522",
    "category": "QA",
    "title": "[3, 15, 8, 29, 102, 22].sort()，结果是多少，为什么？",
    "level": 0.5,
    "createAt": "2024-08-13T08:30:36+00:00",
    "updateAt": "2024-08-14T23:50:48+00:00"
  },
  "tag": {
    "id": 10,
    "tagName": "JavaScript",
    "type": "1",
    "exerciseCount": 379
  }
}