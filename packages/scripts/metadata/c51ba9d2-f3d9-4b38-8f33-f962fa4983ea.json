{
  "data": {
    "id": 1876,
    "exerciseKey": "c51ba9d2-f3d9-4b38-8f33-f962fa4983ea",
    "category": "QA",
    "renderType": "md",
    "title": "怎么把函数中的 arguments 转成数组？",
    "desc": null,
    "options": null,
    "explanation": "函数中的 arguments 是一个对象，不是一个数组，严格来说它是一个类数组对象。\n\n## 1、调用数组的原型方法来转换\n\n```js\nvar foo = function(a,b){\n\tvar arr = Array.prototype.slice.call(arguments);\n\tconsole.log(arr)\n}\nfoo(1,2) //(2) [1, 2]\n```\n\n## 2、使用ES6的新语法 `Array.from()` 来转换\n\n`Array.from` 方法用于将两类对象转为真正的数组：类似数组的对象和可遍历对象（包括Set和Map）。\n\n```js\nvar foo = function(a,b){\n\tvar arr = Array.from(arguments);\n\tconsole.log(arr)\n}\nfoo(1,2) // (2) [1, 2]\n```\n\n## 3、使用 for \n\n使用 for 循环挨个将 arguments 对象中的内容复制给新数组中\n\n```js\nfunction toArray(){\n    var args = []; \n    for (var i = 1; i < arguments.length; i++) { \n        args.push(arguments[i]); \n    } \n    return args;\n}\n```\n\n## 4、利用 ES6 中的 rest 参数转换\n\n```js\nlet a = (…args) => args;\n```\n",
    "level": 1,
    "status": 2,
    "appId": 7,
    "createAt": "2022-08-07T14:45:32.000Z",
    "updateAt": "2023-12-18T10:53:44.000Z",
    "updateUserId": 11,
    "isCollected": false,
    "currentIndex": 243,
    "prev": "903ad6ce-2c81-4d82-a356-536e4629cfa3",
    "next": "cf173a5c-bf67-4121-ad14-ed7404bc77a4"
  },
  "post": {
    "exerciseKey": "c51ba9d2-f3d9-4b38-8f33-f962fa4983ea",
    "category": "QA",
    "title": "怎么把函数中的 arguments 转成数组？",
    "level": 1,
    "updateAt": "2023-12-18T10:53:44+00:00"
  },
  "tag": {
    "id": 10,
    "tagName": "JavaScript",
    "type": "1",
    "exerciseCount": 322
  }
}