{
  "data": {
    "id": 2586,
    "exerciseKey": "4b69ba73-7add-4fbe-9aa3-615541823ac6",
    "category": "QA",
    "renderType": "md",
    "title": "npm lock 文件了解多少？",
    "desc": "",
    "options": "",
    "explanation": "`package-lock.json` 是 npm 的一个锁文件，用于记录项目中实际安装的依赖树的确切版本和依赖关系。这个文件是 npm 5.0.0 引入的，目的是确保不同开发环境和部署环境中的依赖一致性。\n\n### **`package-lock.json` 的功能和特点**\n\n1. **锁定版本**：\n   - 锁定项目中每个依赖包的确切版本，确保在不同的环境中安装时得到相同的版本。\n\n2. **记录依赖树**：\n   - 记录项目所有直接和间接依赖的完整树结构，包括每个包的版本、来源和完整性校验信息。\n\n3. **提高安装速度**：\n   - 在安装时，npm 可以直接使用 `package-lock.json` 来确定确切的依赖版本，而不是根据 `package.json` 进行解析，从而提高安装速度。\n\n4. **确保一致性**：\n   - 保证团队中所有开发者、测试和生产环境中安装的依赖版本一致，从而避免因不同版本造成的问题。\n\n### **`package-lock.json` 的结构**\n\n`package-lock.json` 文件的结构主要包括以下几个部分：\n\n- **`name` 和 `version`**：\n  - 项目的名称和版本。\n  \n- **`lockfileVersion`**：\n  - 锁文件的版本，npm 会根据不同的版本生成不同的锁文件格式。\n  \n- **`dependencies`**：\n  - 记录直接依赖的详细信息，包括每个依赖包的版本、解析 URL 和文件哈希。\n  \n- **`devDependencies`**：\n  - 记录开发依赖的详细信息。\n  \n- **`engines`**：\n  - 记录项目所需的 Node.js 版本信息。\n\n- **`packages`**：\n  - 详细记录项目中每一个依赖的完整信息，包括包的源 URL 和完整性校验码等。\n\n### **如何使用 `package-lock.json`**\n\n- **安装依赖**：\n  - 使用 `npm install` 命令时，npm 会读取 `package-lock.json` 文件，并按文件中的依赖树安装确切的版本。\n\n- **保持一致性**：\n  - 当其他开发者拉取代码或进行部署时，`package-lock.json` 确保他们的环境中使用的是相同版本的依赖。\n\n- **检查依赖**：\n  - 可以通过 `npm ci` 命令（相较于 `npm install` 更加依赖于 `package-lock.json`）来确保完全一致的依赖环境。\n",
    "pivot": "",
    "vipLimit": 1,
    "level": 2,
    "appId": 7,
    "createAt": "2024-08-13T08:30:31.000Z",
    "updateAt": "2024-08-15T19:01:39.000Z",
    "isCollected": false,
    "currentIndex": 142,
    "filterTotalNum": 1487,
    "prev": "c1505892-4928-41b4-bbd1-e83be2f53ff2",
    "next": "dc38016d-8f9e-4d7a-881e-8fedbda9c41d"
  },
  "post": {
    "exerciseKey": "4b69ba73-7add-4fbe-9aa3-615541823ac6",
    "category": "QA",
    "title": "npm lock 文件了解多少？",
    "level": 2,
    "createAt": "2024-08-13T08:30:31+00:00",
    "updateAt": "2024-08-15T19:01:39+00:00"
  },
  "tag": {
    "id": 28,
    "tagName": "工程化",
    "type": "1",
    "exerciseCount": 58
  }
}