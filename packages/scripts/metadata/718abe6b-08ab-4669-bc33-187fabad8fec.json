{
  "data": {
    "id": 1697,
    "exerciseKey": "718abe6b-08ab-4669-bc33-187fabad8fec",
    "category": "QA",
    "renderType": "md",
    "title": "cookie、localStorage和sessionStorage 三者之间有什么区别",
    "desc": null,
    "options": null,
    "explanation": "## 生命周期\n\n* cookie：可设置失效时间，没有设置的话，默认是关闭浏览器后失效\n* localStorage：除非被手动清除，否则将会永久保存。\n* sessionStorage： 仅在当前网页会话下有效，关闭页面或浏览器后就会被清除。\n\n## 存放数据大小\n\n* cookie：4KB左右\n* localStorage和sessionStorage：可以保存5MB的信息。\n\n## http请求\n\n* cookie：每次都会携带在HTTP头中，如果使用cookie保存过多数据会带来性能问题\n* localStorage和sessionStorage：仅在客户端（即浏览器）中保存，不参与和服务器的通信\n\n## 易用性\n\n* cookie：需要程序员自己封装，原生的 Cookie API 不友好\n* localStorage和sessionStorage：原生 API 可以接受，亦可再次封装来对Object和Array有更好的支持\n\n## 应用场景\n\n从安全性来说，因为每次http请求都会携带cookie信息，这样无形中浪费了带宽，所以cookie应该尽可能少的使用，另外cookie还需要指定作用域，不可以跨域调用（当前页面只能读取页面所在域的 `cookie`，即 `document.cookie` ），限制比较多。但是用来识别用户登录来说，cookie还是比storage更好用的。其他情况下，可以使用storage，就用storage。\n\nstorage在存储数据的大小上面秒杀了cookie，现在基本上很少使用cookie了。\n\nlocalStorage和sessionStorage唯一的差别一个是永久保存在浏览器里面，一个是关闭网页就清除了信息。localStorage可以用来夸页面传递参数，sessionStorage用来保存一些临时的数据，防止用户刷新页面之后丢失了一些参数。\n",
    "level": 2,
    "status": 2,
    "appId": 7,
    "createAt": "2022-03-15T16:01:01.000Z",
    "updateAt": "2023-03-27T09:55:05.000Z",
    "updateUserId": 11,
    "isCollected": false,
    "currentIndex": 407,
    "prev": "77778585-d890-4a84-9d69-4a9042f571d7",
    "next": "13d7618b-87b1-41c1-9dbe-dbc9991d71c5"
  },
  "post": {
    "exerciseKey": "718abe6b-08ab-4669-bc33-187fabad8fec",
    "category": "QA",
    "title": "cookie、localStorage和sessionStorage 三者之间有什么区别",
    "level": 2,
    "updateAt": "2023-03-27T09:55:05+00:00"
  },
  "tag": {
    "id": 10,
    "tagName": "JavaScript",
    "type": "1",
    "exerciseCount": 322
  }
}
