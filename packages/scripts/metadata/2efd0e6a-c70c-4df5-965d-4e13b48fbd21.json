{
  "data": {
    "id": 1665,
    "exerciseKey": "2efd0e6a-c70c-4df5-965d-4e13b48fbd21",
    "category": "QA",
    "renderType": "md",
    "title": "HTTP 中如何处理表单数据的提交？",
    "desc": null,
    "options": null,
    "explanation": "在 http 中，有两种主要的表单提交的方式，体现在两种不同的Content-Type取值:\n\n* application/x-www-form-urlencoded\n* multipart/form-data\n\n由于表单提交一般是POST请求，很少考虑GET，因此这里我们将默认提交的数据放在请求体中。\n\n## application/x-www-form-urlencoded\n\n对于`application/x-www-form-urlencoded`格式的表单内容，有以下特点:\n\n* 其中的数据会被编码成以&分隔的键值对\n* 字符以URL编码方式编码。\n\n如：\n\n```\n// 转换过程: {a: 1, b: 2} -> a=1&b=2 -> 如下(最终形式)\n\"a%3D1%26b%3D2\"\n```\n\n## multipart/form-data\n\n对于 `multipart/form-data` 而言:\n\n* 请求头中的 `Content-Type` 字段会包含 `boundary` ，且 `boundary` 的值有浏览器默认指定。例: `Content-Type: multipart/form-data;boundary=----WebkitFormBoundaryRRJKeWfHPGrS4LKe`。\n* 数据会分为多个部分，每两个部分之间通过分隔符来分隔，每部分表述均有 HTTP 头部描述子包体，如Content-Type，在最后的分隔符会加上--表示结束。\n\n相应的请求体是下面这样:\n\n```\nContent-Disposition: form-data;name=\"data1\";\nContent-Type: text/plain\ndata1\n----WebkitFormBoundaryRRJKeWfHPGrS4LKe\nContent-Disposition: form-data;name=\"data2\";\nContent-Type: text/plain\ndata2\n----WebkitFormBoundaryRRJKeWfHPGrS4LKe--\n```\n\n## 小结\n\n值得一提的是，`multipart/form-data` 格式最大的特点在于:每一个表单元素都是独立的资源表述。另外，你可能在写业务的过程中，并没有注意到其中还有boundary的存在，如果你打开抓包工具，确实可以看到不同的表单元素被拆分开了，之所以在平时感觉不到，是以为浏览器和 HTTP 给你封装了这一系列操作。\n\n而且，在实际的场景中，对于图片等文件的上传，基本采用`multipart/form-data`而不用`application/x-www-form-urlencoded`，因为没有必要做 URL 编码，带来巨大耗时的同时，也占用了更多的空间。\n",
    "level": 3,
    "status": 2,
    "appId": 7,
    "createAt": "2022-02-06T13:24:47.000Z",
    "updateAt": "2022-02-06T21:47:56.000Z",
    "updateUserId": 11,
    "isCollected": false,
    "currentIndex": 613,
    "prev": "c0a79b31-1e78-430b-aec4-3bddc4822d79",
    "next": "dc610274-b10d-40ec-a8dc-ddad15196978"
  },
  "post": {
    "exerciseKey": "2efd0e6a-c70c-4df5-965d-4e13b48fbd21",
    "category": "QA",
    "title": "HTTP 中如何处理表单数据的提交？",
    "level": 3,
    "updateAt": "2022-02-06T21:47:56+00:00"
  },
  "tag": {
    "id": 16,
    "tagName": "计算机网络",
    "type": "1",
    "exerciseCount": 72
  }
}