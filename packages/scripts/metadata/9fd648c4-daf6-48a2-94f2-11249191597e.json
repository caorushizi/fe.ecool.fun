{
  "data": {
    "id": 2508,
    "exerciseKey": "9fd648c4-daf6-48a2-94f2-11249191597e",
    "category": "QA",
    "renderType": "md",
    "title": "vue3 相比较于 vue2，在编译阶段有哪些改进？",
    "desc": "",
    "options": "",
    "explanation": "以下是一些主要的改进：\n\n### 1. **虚拟 DOM 的优化**\n\n- **Proxy 代理**：Vue 3 使用 `Proxy` 对象来实现响应式系统，而 Vue 2 使用 `Object.defineProperty`。`Proxy` 提供了更灵活和高效的方式来追踪对象的变化。\n- **静态节点提升**：Vue 3 在编译阶段对静态节点进行了优化，将其提升到静态节点，以减少重复渲染。\n\n### 2. **编译器的改进**\n\n- **更小的编译器体积**：Vue 3 的编译器经过了重构，减少了体积，并且更快。\n- **更高效的编译策略**：使用了更高效的编译策略和优化手段，生成的渲染函数代码更简洁。\n\n### 3. **模板编译**\n\n- **新的编译器**：Vue 3 引入了新的模板编译器，与 Vue 2 相比，编译后的代码更加高效，生成的虚拟 DOM 更简洁。\n- **编译时优化**：Vue 3 的编译器能够识别和优化模板中的常见模式，比如静态节点提升，减少不必要的重新渲染。\n\n### 4. **响应式系统的改进**\n\n- **基于 Proxy 的响应式系统**：Vue 3 的响应式系统基于 `Proxy` 实现，比 Vue 2 使用的 `Object.defineProperty` 更高效，支持更广泛的对象操作，并且不需要 `Object.defineProperty` 的限制。\n- **更快的依赖追踪**：`Proxy` 能够更高效地追踪依赖关系，减少了性能开销。\n\n### 5. **编译时类型检查**\n\n- **TypeScript 支持**：Vue 3 从设计之初就考虑了对 TypeScript 的支持，编译器和核心库的类型定义更加完善，提升了开发时的类型检查和 IDE 支持。\n\n### 6. **组件的改进**\n\n- **更强大的组件编译**：Vue 3 对组件的编译做了大量的优化，使得组件在运行时更高效。\n- **编译时的插件支持**：Vue 3 支持更多的编译时插件，能够在构建过程中处理组件的特定需求。\n\n### 7. **编译时常量折叠**\n\n- **常量折叠**：编译器会对模板中的常量进行折叠优化，减少运行时的计算开销。\n\n### 8. **更简洁的代码生成**\n\n- **优化的代码生成**：Vue 3 编译器生成的代码比 Vue 2 更简洁，减少了冗余的代码，提高了执行效率。",
    "pivot": "",
    "vipLimit": 1,
    "level": 3.5,
    "appId": 7,
    "createAt": "2024-08-13T08:30:31.000Z",
    "updateAt": "2024-08-20T12:09:49.000Z",
    "isCollected": false,
    "currentIndex": 180,
    "filterTotalNum": 1487,
    "prev": "514f2a2f-5707-4068-8b2d-baf16af8c489",
    "next": "a468a9c0-79fb-4779-8780-01e34b722fd4"
  },
  "post": {
    "exerciseKey": "9fd648c4-daf6-48a2-94f2-11249191597e",
    "category": "QA",
    "title": "vue3 相比较于 vue2，在编译阶段有哪些改进？",
    "level": 3.5,
    "createAt": "2024-08-13T08:30:31+00:00",
    "updateAt": "2024-08-20T12:09:49+00:00"
  },
  "tag": {
    "id": 14,
    "tagName": "Vue.js",
    "type": "1",
    "exerciseCount": 97
  }
}