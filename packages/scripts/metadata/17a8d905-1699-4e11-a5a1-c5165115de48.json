{
  "data": {
    "id": 376,
    "exerciseKey": "17a8d905-1699-4e11-a5a1-c5165115de48",
    "category": "QA",
    "renderType": "html",
    "title": "Webpack中 loader的作用是什么，以及常用loader有哪些",
    "desc": null,
    "options": null,
    "explanation": "<p><strong>loader作用</strong>：</p><p style=\"text-align:start;text-indent:2em;\"></p><p style=\"text-align:start;text-indent:2em;\">（1）实现对不同格式文件的处理，比如将Scss转换为CSS，或将 TypeScript转化为Javascript。</p><p style=\"text-align:start;text-indent:2em;\">（2）可以编译文件，从而使其能够添加到依赖关系中。loader是 WebPack最重要的部分之一。通过使用不同的 loader，我们能够调用外部的脚本或者工具，实现对不同格式文件的处理。loader需要在 webpack.config.js里单独用 module进行配置。</p><p></p><p></p><p><strong>常用的 loader如下</strong>：</p><p></p><p>file-loader：把文件输出到一个文件夹中，在代码中通过相对 URL 去引用输出的文件<br/> url-loader：和 file-loader 类似，但是能在文件很小的情况下以 base64 的方式把文件内容注入到代码中去<br/> source-map-loader：加载额外的 Source Map 文件，以方便断点调试<br/> image-loader：加载并且压缩图片文件<br/> babel-loader：把 ES6 转换成 ES5<br/> css-loader：加载 CSS，支持模块化、压缩、文件导入等特性<br/> style-loader：把 CSS 代码注入到 JavaScript 中，通过 DOM 操作去加载 CSS。<br/> eslint-loader：通过 ESLint 检查 JavaScript 代码<br/><br/></p>",
    "level": 1,
    "status": 2,
    "appId": 7,
    "createAt": "2021-07-05T14:50:44.000Z",
    "updateAt": "2021-07-07T00:10:43.000Z",
    "updateUserId": 11,
    "isCollected": false,
    "currentIndex": 961,
    "prev": "9dc34a20-34be-4c0f-a401-71d936cf4958",
    "next": "fcdd893d-e614-47c9-9876-1d2a21af556d"
  },
  "post": {
    "exerciseKey": "17a8d905-1699-4e11-a5a1-c5165115de48",
    "category": "QA",
    "title": "Webpack中 loader的作用是什么，以及常用loader有哪些",
    "level": 1,
    "updateAt": "2021-07-07T00:10:43+00:00"
  },
  "tag": {
    "id": 28,
    "tagName": "工程化",
    "type": "1",
    "exerciseCount": 33
  }
}