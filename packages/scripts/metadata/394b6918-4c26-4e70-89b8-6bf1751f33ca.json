{
  "data": {
    "id": 163,
    "exerciseKey": "394b6918-4c26-4e70-89b8-6bf1751f33ca",
    "category": "QA",
    "renderType": "md",
    "title": "em/px/rem/vh/vw 这些单位有什么区别？",
    "desc": "",
    "options": null,
    "explanation": "## 一、介绍\n\n传统的项目开发中，我们只会用到`px`、`%`、`em`这几个单位，它可以适用于大部分的项目开发，且拥有比较良好的兼容性\n\n从`CSS3`开始，浏览器对计量单位的支持又提升到了另外一个境界，新增了`rem`、`vh`、`vw`、`vm`等一些新的计量单位\n\n利用这些新的单位开发出比较良好的响应式页面，适应多种不同分辨率的终端，包括移动设备等\n\n## 二、单位\n\n在`css`单位中，可以分为长度单位、绝对单位，如下表所指示\n\n| CSS单位      |                                        |\n| ------------ | -------------------------------------- |\n| 相对长度单位 | em、ex、ch、rem、vw、vh、vmin、vmax、% |\n| 绝对长度单位 | cm、mm、in、px、pt、pc                 |\n\n这里我们主要讲述px、em、rem、vh、vw\n\n### px\n\npx，表示像素，所谓像素就是呈现在我们显示器上的一个个小点，每个像素点都是大小等同的，所以像素为计量单位被分在了绝对长度单位中\n\n有些人会把`px`认为是相对长度，原因在于在移动端中存在设备像素比，`px`实际显示的大小是不确定\n\n这里之所以认为`px`为绝对单位，在于`px`的大小和元素的其他属性无关\n\n### em\n\nem是相对长度单位。相对于当前对象内文本的字体尺寸。如当前对行内文本的字体尺寸未被人为设置，则相对于浏览器的默认字体尺寸（`1em = 16px`）\n\n为了简化 `font-size` 的换算，我们需要在` css `中的 `body` 选择器中声明` font-size `= `62.5%`，这就使 em 值变为 `16px*62.5% = 10px`\n\n这样 `12px = 1.2em`, `10px = 1em`, 也就是说只需要将你的原来的` px` 数值除以 10，然后换上 `em `作为单位就行了\n\n特点：\n\n- em 的值并不是固定的\n- em 会继承父级元素的字体大小\n- em 是相对长度单位。相对于当前对象内文本的字体尺寸。如当前对行内文本的字体尺寸未被人为设置，则相对于浏览器的默认字体尺寸\n- 任意浏览器的默认字体高都是 16px\n\n举个例子\n\n```html\n<div class=\"big\">\n    我是14px=1.4em\n    <div class=\"small\">我是12px=1.2em</div>\n</div>\n```\n\n样式为\n\n```css\n<style>\nhtml {font-size: 10px;  } /*  公式16px*62.5%=10px  */  \n.big{font-size: 1.4em}\n.small{font-size: 1.2em}\n</style>\n```\n\n这时候`.big`元素的`font-size`为14px，而`.small`元素的`font-size`为12px\n\n### rem\n\nrem，相对单位，相对的只是HTML根元素`font-size`的值\n\n同理，如果想要简化`font-size`的转化，我们可以在根元素`html`中加入`font-size: 62.5%`\n\n```css\nhtml {font-size: 62.5%;  } /*  公式16px*62.5%=10px  */ \n```\n\n这样页面中1rem=10px、1.2rem=12px、1.4rem=14px、1.6rem=16px;使得视觉、使用、书写都得到了极大的帮助\n\n特点：\n\n- rem单位可谓集相对大小和绝对大小的优点于一身\n- 和em不同的是rem总是相对于根元素，而不像em一样使用级联的方式来计算尺寸\n\n### vh、vw\n\nvw ，就是根据窗口的宽度，分成100等份，100vw就表示满宽，50vw就表示一半宽。（vw 始终是针对窗口的宽），同理，`vh`则为窗口的高度\n\n这里的窗口分成几种情况：\n\n- 在桌面端，指的是浏览器的可视区域\n- 移动端指的就是布局视口\n\n像`vw`、`vh`，比较容易混淆的一个单位是`%`，不过百分比宽泛的讲是相对于父元素：\n\n对于普通定位元素就是我们理解的父元素\n- 对于position: absolute;的元素是相对于已定位的父元素\n- 对于position: fixed;的元素是相对于 ViewPort（可视窗口）\n\n## 三、总结\n\n**px**：绝对单位，页面按精确像素展示\n\n**em**：相对单位，基准点为父节点字体的大小，如果自身定义了`font-size`按自身来计算，整个页面内`1em`不是一个固定的值\n\n**rem**：相对单位，可理解为`root em`, 相对根节点`html`的字体大小来计算\n\n**vh、vw**：主要用于页面视口大小布局，在页面布局上更加方便简单",
    "level": 2,
    "status": 2,
    "appId": 7,
    "createAt": "2021-07-03T09:55:34.000Z",
    "updateAt": "2023-09-24T09:55:05.000Z",
    "updateUserId": 11,
    "isCollected": false,
    "currentIndex": 288,
    "prev": "2ed6f1f7-b974-475a-b314-f1962c744faf",
    "next": "5b612b6a-3828-4cd9-9de4-b05bb36a4e3d"
  },
  "post": {
    "exerciseKey": "394b6918-4c26-4e70-89b8-6bf1751f33ca",
    "category": "QA",
    "title": "em/px/rem/vh/vw 这些单位有什么区别？",
    "level": 2,
    "updateAt": "2023-09-24T09:55:05+00:00"
  },
  "tag": {
    "id": 11,
    "tagName": "CSS",
    "type": "1",
    "exerciseCount": 90
  }
}
