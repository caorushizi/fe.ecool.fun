{
  "data": {
    "id": 2424,
    "exerciseKey": "212e760b-fb9a-4dc6-9175-c2053e96cd16",
    "category": "QA",
    "renderType": "md",
    "title": "如何冻结一个 JS 对象？",
    "desc": "",
    "options": "",
    "explanation": "可以使用 `Object.freeze()` 方法冻结一个 JavaScript 对象。\n\n冻结对象会阻止对对象的修改，包括添加新属性、删除现有属性以及修改现有属性的值。\n\n### 使用 `Object.freeze()`\n\n```javascript\n// 创建一个对象\nconst person = {\n    name: 'Alice',\n    age: 25\n};\n\n// 冻结对象\nObject.freeze(person);\n\n// 尝试修改对象的属性\nperson.name = 'Bob'; // 不会改变，因为对象已被冻结\nperson.gender = 'female'; // 不会添加，因为对象已被冻结\ndelete person.age; // 不会删除属性，因为对象已被冻结\n\nconsole.log(person); // 输出: { name: 'Alice', age: 25 }\n```\n\n### `Object.freeze()` 方法的特性\n\n1. **不可变性**：\n   - 对象被冻结后，现有的属性变得不可修改。\n   - 新属性不能被添加。\n   - 现有属性不能被删除。\n\n2. **嵌套对象**：\n   - `Object.freeze()` 只会冻结对象的第一层。嵌套的对象属性不会被递归冻结。\n\n   ```javascript\n   const person = {\n       name: 'Alice',\n       address: {\n           city: 'Wonderland'\n       }\n   };\n\n   Object.freeze(person);\n\n   // 修改嵌套对象的属性不会被阻止\n   person.address.city = 'New Wonderland';\n   console.log(person.address.city); // 输出: 'New Wonderland'\n   ```\n\n### 深度冻结\n\n要完全冻结对象及其所有嵌套属性，可以编写一个递归函数来实现深度冻结：\n\n```javascript\nfunction deepFreeze(obj) {\n    // 获取对象的所有属性名\n    const propNames = Object.getOwnPropertyNames(obj);\n\n    // 遍历所有属性\n    propNames.forEach(name => {\n        const value = obj[name];\n\n        // 如果属性值是对象，则递归冻结\n        if (typeof value === 'object' && value !== null) {\n            deepFreeze(value);\n        }\n    });\n\n    // 冻结对象本身\n    return Object.freeze(obj);\n}\n\nconst person = {\n    name: 'Alice',\n    address: {\n        city: 'Wonderland'\n    }\n};\n\ndeepFreeze(person);\n\n// 尝试修改嵌套对象的属性\nperson.address.city = 'New Wonderland'; // 不会改变，因为对象及其嵌套对象已被冻结\n\nconsole.log(person.address.city); // 输出: 'Wonderland'\n```",
    "pivot": "",
    "vipLimit": 1,
    "level": 2,
    "appId": 7,
    "createAt": "2024-08-13T08:30:26.000Z",
    "updateAt": "2024-09-02T01:14:03.000Z",
    "isCollected": false,
    "currentIndex": 218,
    "filterTotalNum": 1487,
    "prev": "87b1f0a2-a058-4f00-ae03-7d85bd19cbf5",
    "next": "2e9b8935-fd13-4625-9934-c5f91d39b400"
  },
  "post": {
    "exerciseKey": "212e760b-fb9a-4dc6-9175-c2053e96cd16",
    "category": "QA",
    "title": "如何冻结一个 JS 对象？",
    "level": 2,
    "createAt": "2024-08-13T08:30:26+00:00",
    "updateAt": "2024-09-02T01:14:03+00:00"
  },
  "tag": {
    "id": 10,
    "tagName": "JavaScript",
    "type": "1",
    "exerciseCount": 379
  }
}