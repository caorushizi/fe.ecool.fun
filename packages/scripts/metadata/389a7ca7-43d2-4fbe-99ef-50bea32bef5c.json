{
  "data": {
    "id": 1675,
    "exerciseKey": "389a7ca7-43d2-4fbe-99ef-50bea32bef5c",
    "category": "QA",
    "renderType": "md",
    "title": "怎么让CSS flex布局最后一行列表左对齐？",
    "desc": "## justify-content对齐问题描述\n\n在CSS flex布局中，justify-content属性可以控制列表的水平对齐方式，例如space-between值可以实现两端对齐。\n\n但是，如果最后一行的列表的个数不满，则就会出现最后一行没有完全垂直对齐的问题。\n\n如下代码：\n\n```css\n.container {\n    display: flex;\n    justify-content: space-between;\n    flex-wrap: wrap;\n}\n.list {\n    width: 24%; height: 100px;\n    background-color: skyblue;\n    margin-top: 15px;\n}\n```\n\n```html\n<div class=\"container\">\n    <div class=\"list\"></div>\n    <div class=\"list\"></div>\n    <div class=\"list\"></div>\n    <div class=\"list\"></div>\n    <div class=\"list\"></div>\n    <div class=\"list\"></div>\n    <div class=\"list\"></div>\n</div>\n```\n\n![image.png](https://ae04.alicdn.com/kf/Hf1a4fff1d2894f1e9abe1106afa1ebd9R.png)\n\n怎么让最后一行左对齐呢？",
    "options": null,
    "explanation": "### 如果每一行列数是固定的\n\n如果每一行列数是固定的，则下面两种方法可以实现最后一行左对齐。\n\n#### 方法一：模拟space-between和间隙\n\n也就是我们不使用`justify-content:space-between`声明在模拟两端对齐效果。中间的gap间隙我们使用margin进行控制。\n\n例如：\n\n```css\n.container {\n    display: flex;\n    flex-wrap: wrap;\n}\n.list {\n    width: 24%; height: 100px;\n    background-color: skyblue;\n    margin-top: 15px;\n}\n.list:not(:nth-child(4n)) {\n    margin-right: calc(4% / 3);\n}\n```\n\n#### 方法二：根据个数最后一个元素动态margin\n\n由于每一列的数目都是固定的，因此，我们可以计算出不同个数列表应当多大的`margin`值才能保证完全左对齐。\n\n例如，假设每行4个元素，结果最后一行只有3个元素，则最后一个元素的`margin-right`大小是“列表宽度+间隙大小”的话，那最后3个元素也是可以完美左对齐的。\n\n然后，借助树结构伪类数量匹配技术，我们可以知道最后一行有几个元素。\n\n例如：\n\n*   `.list:last-child:nth-child(4n - 1)`说明最后一行，要么3个元素，要么7个元素……\n*   `.list:last-child:nth-child(4n - 2)`说明最后一行，要么2个元素，要么6个元素……\n\n在本例中，一行就4个元素，因此，我们可以有如下CSS设置：\n\n```css\n.container {\n    display: flex;\n    /* 两端对齐 */\n    justify-content: space-between;\n    flex-wrap: wrap;\n}\n.list {\n    width: 24%; height: 100px;\n    background-color: skyblue;\n    margin-top: 15px;\n}\n/* 如果最后一行是3个元素 */\n.list:last-child:nth-child(4n - 1) {\n    margin-right: calc(24% + 4% / 3);\n}\n/* 如果最后一行是2个元素 */\n.list:last-child:nth-child(4n - 2) {\n    margin-right: calc(48% + 8% / 3);\n}\n```\n\n### 如果每一子项宽度不固定\n\n有时候，每一个flex子项的宽度都是不固定的，这个时候希望最后一行左对齐该如何实现呢？\n\n由于此时间隙的大小不固定，对齐不严格，因此，我们可以直接让最后一行左对齐即可。具体方法有两个：\n\n#### 方法一：最后一项margin-right:auto\n\nCSS代码如下：\n\n```css\n.container {\n    display: flex;\n    justify-content: space-between;\n    flex-wrap: wrap;\n}\n.list {\n    background-color: skyblue;\n    margin: 10px;\n}\n/* 最后一项margin-right:auto */\n.list:last-child {\n    margin-right: auto;\n}\n```\n\n#### 方法二：创建伪元素并设置flex:auto或flex:1\n\nCSS代码如下：\n\n```css\n.container {\n    display: flex;\n    justify-content: space-between;\n    flex-wrap: wrap;\n}\n.list {\n    background-color: skyblue;\n    margin: 10px;\n}\n/* 使用伪元素辅助左对齐 */\n.container::after {\n    content: '';\n    flex: auto;    /* 或者flex: 1 */\n}\n```\n\n### 如果每一行列数不固定\n\n如果每一行的列数不固定，则上面的这些方法均不适用，需要使用其他技巧来实现最后一行左对齐。\n\n这个方法其实很简单，也很好理解，就是使用足够的空白标签进行填充占位，具体的占位数量是由最多列数的个数决定的，例如这个布局最多7列，那我们可以使用7个空白标签进行填充占位，最多10列，那我们需要使用10个空白标签。\n\n如下HTML示意：\n\n```html\n<div class=\"container\">\n    <div class=\"list\"></div>\n    <div class=\"list\"></div>\n    <div class=\"list\"></div>\n    <div class=\"list\"></div>\n    <div class=\"list\"></div>\n    <div class=\"list\"></div>\n    <div class=\"list\"></div>\n    <i></i><i></i><i></i><i></i><i></i>\n</div>\n```\n\n相关CSS如下，实现的关键就是占位的`&lt;i&gt;`元素宽度和`margin`大小设置得和`.list`列表元素一样即可，其他样式都不需要写。\n\n```css\n.container {\n    display: flex;\n    justify-content: space-between;\n    flex-wrap: wrap;\n    margin-right: -10px;\n}\n.list {\n    width: 100px; height:100px;\n    background-color: skyblue;\n    margin: 15px 10px 0 0;\n}\n/* 和列表一样的宽度和margin值 */\n.container > i {\n    width: 100px;\n    margin-right: 10px;\n}\n```\n\n由于`<i>`元素高度为0，因此，并不会影响垂直方向上的布局呈现。\n\n### 如果列数不固定HTML又不能调整\n\n然而有时候，由于客观原因，前端重构人员没有办法去调整html结构，同时布局的列表个数又不固定，这个时候该如何实现我们最后一行左对齐效果呢？\n\n我们不妨可以试试使用Grid布局。\n\nGrid布局天然有gap间隙，且天然格子对齐排布，因此，实现最后一行左对齐可以认为是天生的效果。\n\nCSS代码如下：\n\n```css\n.container {\n    display: grid;\n    justify-content: space-between;\n    grid-template-columns: repeat(auto-fill, 100px);\n    grid-gap: 10px;\n}\n.list {\n    width: 100px; height:100px;\n    background-color: skyblue;\n    margin-top: 5px;\n}\n```\n\n可以看到CSS代码非常简洁。\n\nHTML代码就是非常规整非常普通的代码片段：\n\n```html\n<div class=\"container\">\n    <div class=\"list\"></div>\n    <div class=\"list\"></div>\n    <div class=\"list\"></div>\n    <div class=\"list\"></div>\n    <div class=\"list\"></div>\n    <div class=\"list\"></div>\n    <div class=\"list\"></div>\n</div>\n```\n\n### 这几种实现方法点评\n\n首先最后一行需要左对齐的布局更适合使用CSS grid布局实现，但是，`repeat()`函数兼容性有些要求，IE浏览器并不支持。如果项目需要兼容IE，则此方法需要斟酌。\n\n然后，适用范围最广的方法是使用空的元素进行占位，此方法不仅适用于列表个数不固定的场景，对于列表个数固定的场景也可以使用这个方法。但是有些人代码洁癖，看不惯这种空的占位的html标签，则可以试试一开始的两个方法，一是动态计算margin，模拟两端对齐，另外一个是根据列表的个数，动态控制最后一个列表元素的margin值实现左对齐。\n\n> by zhangxinxu\n>\n> 原文地址： https://www.zhangxinxu.com/wordpress/?p=8855",
    "pivot": "",
    "vipLimit": 0,
    "level": 3,
    "appId": 7,
    "createAt": "2022-02-27T02:57:47.000Z",
    "updateAt": "2024-07-19T15:55:03.000Z",
    "isCollected": false,
    "currentIndex": 694,
    "filterTotalNum": 1487,
    "prev": "e797a169-0044-43d1-8fe6-4bad6e7372f9",
    "next": "afe26637-d92a-43be-a4e4-e55b1a6d3d02"
  },
  "post": {
    "exerciseKey": "389a7ca7-43d2-4fbe-99ef-50bea32bef5c",
    "category": "QA",
    "title": "怎么让CSS flex布局最后一行列表左对齐？",
    "level": 3,
    "createAt": "2022-02-27T02:57:47+00:00",
    "updateAt": "2024-07-19T15:55:03+00:00"
  },
  "tag": {
    "id": 11,
    "tagName": "CSS",
    "type": "1",
    "exerciseCount": 101
  }
}