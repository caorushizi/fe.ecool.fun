{
  "data": {
    "id": 473,
    "exerciseKey": "6f210355-da14-479e-86bc-7602839e7f42",
    "category": "QA",
    "renderType": "md",
    "title": "TypeScript中的方法重写是什么?",
    "desc": null,
    "options": null,
    "explanation": "如果子类(子类)具有与父类中声明的相同的方法，则称为方法覆盖。换句话说，在派生类或子类中重新定义基类方法。\n\n方法重写的规则\n\n* 该方法必须具有与父类相同的名称\n* 该方法必须具有与父类相同的参数。\n* 必须有一个IS-A关系(继承)。\n\n例子\n```\nclass NewPrinter extends Printer {  \n    doPrint(): any {  \n        super.doPrint();  \n        console.log(\"Called Child class.\");  \n    }  \n    doInkJetPrint(): any {  \n        console.log(\"Called doInkJetPrint().\");  \n    }  \n}  \nlet printer: new () => NewPrinter;  \nprinter.doPrint();  \nprinter.doInkJetPrint();  \n```",
    "pivot": "",
    "vipLimit": 0,
    "level": 3,
    "appId": 7,
    "createAt": "2021-07-08T15:10:35.000Z",
    "updateAt": "2024-08-10T17:05:20.000Z",
    "isCollected": false,
    "currentIndex": 1027,
    "filterTotalNum": 1487,
    "prev": "041f15e1-e0a7-450b-846c-a3078bc791c1",
    "next": "614de7f3-ce19-4359-aeb5-e63f64c8b48e"
  },
  "post": {
    "exerciseKey": "6f210355-da14-479e-86bc-7602839e7f42",
    "category": "QA",
    "title": "TypeScript中的方法重写是什么?",
    "level": 3,
    "createAt": "2021-07-08T15:10:35+00:00",
    "updateAt": "2024-08-10T17:05:20+00:00"
  },
  "tag": {
    "id": 19,
    "tagName": "Typescript",
    "type": "1",
    "exerciseCount": 55
  }
}