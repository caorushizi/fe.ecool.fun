{
  "data": {
    "id": 2456,
    "exerciseKey": "55beb2ca-b7a6-4c28-8f75-14d43e2bda4a",
    "category": "QA",
    "renderType": "md",
    "title": "hasOwnProperty 与 instanceof 有什么区别",
    "desc": "",
    "options": "",
    "explanation": "`hasOwnProperty` 和 `instanceof` 是 JavaScript 中两个用于处理对象的不同方法，它们用于不同的目的。以下是它们的主要区别和使用场景：\n\n### 1. **`hasOwnProperty`**\n\n- **定义**：`hasOwnProperty` 是所有 JavaScript 对象继承自 `Object` 的一个方法，用于检查对象自身是否具有特定的属性（即，该属性是否是对象本身的属性，而不是继承自原型链上的属性）。\n\n- **用法**：\n  ```javascript\n  const obj = {\n      name: 'John'\n  };\n\n  console.log(obj.hasOwnProperty('name')); // 输出: true\n  console.log(obj.hasOwnProperty('toString')); // 输出: false\n  ```\n\n- **特点**：\n  - **检查自身属性**：只检查对象自身的属性，不检查原型链上的属性。\n  - **参数**：接受一个字符串作为参数，表示要检查的属性名。\n  - **返回值**：返回布尔值 `true` 或 `false`。\n  - **通用性**：可以用于所有继承自 `Object` 的对象，包括自定义对象和内置对象。\n\n- **注意**：`hasOwnProperty` 可以被对象的原型链上的属性覆盖，因此在实际使用中，可能需要使用 `Object.prototype.hasOwnProperty.call` 来确保不受覆盖影响：\n  ```javascript\n  Object.prototype.hasOwnProperty.call(obj, 'name');\n  ```\n\n### 2. **`instanceof`**\n\n- **定义**：`instanceof` 是一个操作符，用于检查对象是否是某个构造函数的实例，或者说对象是否通过指定的构造函数创建。\n\n- **用法**：\n  ```javascript\n  class Person {\n      constructor(name) {\n          this.name = name;\n      }\n  }\n\n  const john = new Person('John');\n\n  console.log(john instanceof Person); // 输出: true\n  console.log(john instanceof Object); // 输出: true\n  console.log(john instanceof Array); // 输出: false\n  ```\n\n- **特点**：\n  - **检查原型链**：检查对象是否在构造函数的原型链上。如果对象是通过指定构造函数创建的实例，则返回 `true`。\n  - **参数**：`instanceof` 右侧是一个构造函数（或类），左侧是要检查的对象。\n  - **返回值**：返回布尔值 `true` 或 `false`。\n  - **用途**：用于确定对象的类型或构造函数。\n\n- **注意**：\n  - `instanceof` 可以用于检测对象的原型链中是否包含指定构造函数的 `prototype` 对象。\n  - `instanceof` 可以与类和构造函数一起使用，但不能直接用于检测对象是否包含特定属性。",
    "pivot": "",
    "vipLimit": 1,
    "level": 1.5,
    "appId": 7,
    "createAt": "2024-08-13T08:30:26.000Z",
    "updateAt": "2024-08-23T05:15:58.000Z",
    "isCollected": false,
    "currentIndex": 206,
    "filterTotalNum": 1487,
    "prev": "b4fc9495-91fc-4903-aab7-66a563637c1d",
    "next": "32a74e6c-fc06-4f61-b3c4-95a7760157a6"
  },
  "post": {
    "exerciseKey": "55beb2ca-b7a6-4c28-8f75-14d43e2bda4a",
    "category": "QA",
    "title": "hasOwnProperty 与 instanceof 有什么区别",
    "level": 1.5,
    "createAt": "2024-08-13T08:30:26+00:00",
    "updateAt": "2024-08-23T05:15:58+00:00"
  },
  "tag": {
    "id": 10,
    "tagName": "JavaScript",
    "type": "1",
    "exerciseCount": 379
  }
}