{
  "data": {
    "id": 598,
    "exerciseKey": "13d7618b-87b1-41c1-9dbe-dbc9991d71c5",
    "category": "QA",
    "renderType": "md",
    "title": "null 和 undefined 有什么区别？",
    "desc": null,
    "options": null,
    "explanation": "首先 Undefined 和 Null 都是基本数据类型，这两个基本数据类型分别都只有一个值，就是 undefined 和 null。\n\nundefined 代表的含义是未定义，null 代表的含义是空对象。一般变量声明了但还没有定义的时候会返回 undefined，null主要用于赋值给一些可能会返回对象的变量，作为初始化。\n\nundefined 在 JavaScript 中不是一个保留字，这意味着可以使用 undefined 来作为一个变量名，但是这样的做法是非常危险的，它会影响对 undefined 值的判断。我们可以通过一些方法获得安全的 undefined 值，比如说 void 0。\n\n当对这两种类型使用 typeof 进行判断时，Null 类型化会返回 “object”，这是一个历史遗留的问题。当使用双等号对两种类型的值进行比较时会返回 true，使用三个等号时会返回 false。\n\n```js\ntypeof null; // \"object\" (not \"null\" for legacy reasons)\ntypeof undefined; // \"undefined\"\nnull === undefined; // false\nnull == undefined; // true\nnull === null; // true\nnull == null; // true\n!null; // true\nNumber.isNaN(1 + null); // false\nNumber.isNaN(1 + undefined); // true\n```\n",
    "level": 1,
    "status": 2,
    "appId": 7,
    "createAt": "2021-08-22T10:17:39.000Z",
    "updateAt": "2023-03-26T09:22:57.000Z",
    "updateUserId": 11,
    "isCollected": false,
    "currentIndex": 408,
    "prev": "718abe6b-08ab-4669-bc33-187fabad8fec",
    "next": "32135204-0c1c-459c-977b-d12895bd5a70"
  },
  "post": {
    "exerciseKey": "13d7618b-87b1-41c1-9dbe-dbc9991d71c5",
    "category": "QA",
    "title": "null 和 undefined 有什么区别？",
    "level": 1,
    "updateAt": "2023-03-26T09:22:57+00:00"
  },
  "tag": {
    "id": 10,
    "tagName": "JavaScript",
    "type": "1",
    "exerciseCount": 322
  }
}
