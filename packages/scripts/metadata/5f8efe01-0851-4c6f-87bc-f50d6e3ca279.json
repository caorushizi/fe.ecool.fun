{
  "data": {
    "id": 1672,
    "exerciseKey": "5f8efe01-0851-4c6f-87bc-f50d6e3ca279",
    "category": "QA",
    "renderType": "md",
    "title": "相邻的两个inline-block节点为什么会出现间隔，该如何解决？",
    "desc": null,
    "options": null,
    "explanation": "\n### 一、现象描述\n\n真正意义上的inline-block水平呈现的元素间，换行显示或空格分隔的情况下会有间距，很简单的个例子：\n\n```html\n<input /> <input type=\"submit\" />\n```\n\n间距就来了~~\n\n![image.png](https://static.ecool.fun//article/b1a50051-8bf5-4e14-9460-cbe4ff2ee78d.png)\n\n我们使用CSS更改非inline-block水平元素为inline-block水平，也会有该问题：\n\n```css\n.space a {\n    display: inline-block;\n    padding: .5em 1em;\n    background-color: #cad5eb;\n}\n```\n\n```html\n<div class=\"space\">\n    <a href=\"##\">惆怅</a>\n    <a href=\"##\">淡定</a>\n    <a href=\"##\">热血</a>\n</div>\n```\n\n![image.png](https://static.ecool.fun//article/5f3fa381-ccb2-43c3-b5ba-58c5ad161abe.png)\n\n\n这种表现是符合规范的应该有的表现。\n\n元素被当成行内元素排版的时候，元素之间的空白符（空格、回车换行等）都会被浏览器处理，根据white-space的处理方式（默认是normal，合并多余空白），原来HTML代码中的回车换行被转成一个空白符，在字体不为0的情况下，空白符占据一定宽度，所以inline-block的元素之间就出现了空隙。这些元素之间的间距会随着字体的大小而变化，当行内元素font-size:16px时，间距为8px。\n\n不过，这类间距有时会对我们布局，或是兼容性处理产生影响，以下展示N种方法去掉。\n\n### 二、方法之移除空格\n\n元素间留白间距出现的原因就是标签段之间的空格，因此，去掉HTML中的空格，自然间距就木有了。考虑到代码可读性，显然连成一行的写法是不可取的，我们可以：\n\n```html\n<div class=\"space\">\n    <a href=\"##\">\n    惆怅</a><a href=\"##\">\n    淡定</a><a href=\"##\">\n    热血</a>\n</div>\n```\n\n或者是：\n\n```html\n<div class=\"space\">\n    <a href=\"##\">惆怅</a\n    ><a href=\"##\">淡定</a\n    ><a href=\"##\">热血</a>\n</div>\n```\n\n或者是借助HTML注释：\n\n```html\n<div class=\"space\">\n    <a href=\"##\">惆怅</a><!--\n    --><a href=\"##\">淡定</a><!--\n    --><a href=\"##\">热血</a>\n</div>\n```\n\n等。\n\n### 三、使用margin负值\n\n```css\n.space a {\n    display: inline-block;\n    margin-right: -3px;\n}\n```\n\nmargin负值的大小与上下文的字体和文字大小相关：\n\n![image.png](https://static.ecool.fun//article/4d07ee09-ad17-41a8-9dd6-01eab25e0e8a.png)\n\n例如，对于12像素大小的上下文，Arial字体的`margin`负值为`-3`像素，Tahoma和Verdana就是`-4`像素，而Geneva为`-6`像素。\n\n由于外部环境的不确定性，以及最后一个元素多出的父margin值等问题，这个方法不适合大规模使用。\n\n### 四、让闭合标签吃胶囊\n\n如下处理：\n\n```html\n<div class=\"space\">\n    <a href=\"##\">惆怅\n    <a href=\"##\">淡定\n    <a href=\"##\">热血</a>\n</div>\n```\n\n注意，为了向下兼容IE6/IE7等喝蒙牛长大的浏览器，最后一个列表的标签的结束（闭合）标签不能丢。\n\n在HTML5中，我们直接：\n\n```html\n<div class=\"space\">\n    <a href=\"##\">惆怅\n    <a href=\"##\">淡定\n    <a href=\"##\">热血\n</div>\n```\n\n好吧，虽然感觉上有点怪怪的，但是，这是OK的。\n\n![image.png](https://static.ecool.fun//article/71ea9156-22a7-43a1-9a29-b04cd6ed9280.png)\n\n### 五、使用font-size:0\n\n类似下面的代码：\n\n```css\n.space {\n    font-size: 0;\n}\n.space a {\n    font-size: 12px;\n}\n```\n\n这个方法，基本上可以解决大部分浏览器下inline-block元素之间的间距(IE7等浏览器有时候会有1像素的间距)。\n\n### 六、使用letter-spacing\n\n类似下面的代码：\n\n```css\n.space {\n    letter-spacing: -3px;\n}\n.space a {\n    letter-spacing: 0;\n}\n```\n\n根据我去年的测试，该方法可以搞定基本上所有浏览器。\n\n### 七、使用word-spacing\n\n类似下面代码：\n\n```css\n.space {\n    word-spacing: -6px;\n}\n.space a {\n    word-spacing: 0;\n}\n```\n\n一个是字符间距(`letter-spacing`)一个是单词间距(`word-spacing`)，大同小异。据我测试，`word-spacing`的负值只要大到一定程度，其兼容性上的差异就可以被忽略。因为，貌似，`word-spacing`即使负值很大，也不会发生重叠。\n\n与上面demo一样的效果，这里就不截图展示了。如果您使用Chrome浏览器，可能看到的是间距依旧存在。确实是有该问题，原因我是不清楚，不过我知道，可以添加`display: table;`或`display:inline-table;`让Chrome浏览器也变得乖巧。\n\n```css\n.space {\n    display: inline-table;\n    word-spacing: -6px;\n}\n```\n\n### 八、其他成品方法\n\n下面展示的是YUI 3 CSS Grids 使用`letter-spacing`和`word-spacing`去除格栅单元见间隔方法（注意，其针对的是block水平的元素，因此对IE8-浏览器做了hack处理）：\n\n```css\n.yui3-g {\n    letter-spacing: -0.31em; /* webkit */\n    *letter-spacing: normal; /* IE < 8 重置 */\n    word-spacing: -0.43em; /* IE < 8 && gecko */\n}\n\n.yui3-u {\n    display: inline-block;\n    zoom: 1; *display: inline; /* IE < 8: 伪造 inline-block */\n    letter-spacing: normal;\n    word-spacing: normal;\n    vertical-align: top;\n}\n```\n\n以下是一个名叫RayM的人提供的方法：\n\n```css\nli {\n    display:inline-block;\n    background: orange;\n    padding:10px;\n    word-spacing:0;\n    }\nul {\n    width:100%;\n    display:table;  /* 调教webkit*/\n    word-spacing:-1em;\n}\n\n.nav li { *display:inline;}\n```\n\n也就是上面一系列CSS方法的组组合合。\n\n",
    "pivot": "",
    "vipLimit": 0,
    "level": 2,
    "appId": 7,
    "createAt": "2022-02-15T15:00:58.000Z",
    "updateAt": "2024-08-10T17:06:11.000Z",
    "isCollected": false,
    "currentIndex": 697,
    "filterTotalNum": 1487,
    "prev": "207b117b-2e93-4760-91ed-8e618a85a50e",
    "next": "88d1350b-5dce-48f8-974d-9115b0d270d0"
  },
  "post": {
    "exerciseKey": "5f8efe01-0851-4c6f-87bc-f50d6e3ca279",
    "category": "QA",
    "title": "相邻的两个inline-block节点为什么会出现间隔，该如何解决？",
    "level": 2,
    "createAt": "2022-02-15T15:00:58+00:00",
    "updateAt": "2024-08-10T17:06:11+00:00"
  },
  "tag": {
    "id": 11,
    "tagName": "CSS",
    "type": "1",
    "exerciseCount": 101
  }
}