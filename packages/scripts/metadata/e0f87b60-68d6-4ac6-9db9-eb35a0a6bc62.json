{
  "data": {
    "id": 1957,
    "exerciseKey": "e0f87b60-68d6-4ac6-9db9-eb35a0a6bc62",
    "category": "QA",
    "renderType": "md",
    "title": "说说你对轮询的理解",
    "desc": null,
    "options": null,
    "explanation": "## 什么是轮询？\n\n轮询是指在一定的时间间隔内，定时向服务器发送请求，获取最新数据的过程。轮询通常用于从服务器获取实时更新的数据。\n\n## 轮询和长轮询有什么区别？\n\n轮询是在固定的时间间隔内向服务器发送请求，即使服务器没有数据更新也会继续发送请求。而长轮询是先发送一个请求，服务器如果没有数据更新，则不会立即返回，而是将请求挂起，直到有数据更新时再返回结果。\n\n## 前端轮询的实现方式有哪些？\n\n前端轮询的实现方式有两种：基于定时器的轮询和基于递归的轮询。基于定时器的轮询使用 setInterval() 方法来定时发送请求，而基于递归的轮询则使用 setTimeout() 方法来控制下一次请求的时间。\n\n## 轮询有什么缺点？\n\n轮询会产生大量的无效请求，浪费带宽和服务器资源，并且对服务器的压力比较大。同时，在短时间内频繁地发送请求可能会被服务器视为恶意行为，导致 IP 被封禁等问题。\n\n## 如何避免轮询的缺点？\n\n为了避免轮询的缺点，可以使用 WebSocket、SSE（Server-Sent Events）等技术来实现实时数据更新。\n\nWebSocket 是一种双向通信协议，能够实现服务器与客户端之间的实时通信；而 SSE 则是一种基于 HTTP 的单向通信协议，可以实现服务器向客户端推送实时数据。\n\n这些技术都能够减少无效请求，提高数据传输效率，并且对服务器资源的消耗也比较小。",
    "level": 1,
    "status": 2,
    "appId": 7,
    "createAt": "2023-04-23T12:20:31.000Z",
    "updateAt": "2023-04-23T20:23:44.000Z",
    "updateUserId": 11,
    "isCollected": false,
    "currentIndex": 398,
    "prev": "c843a307-4934-4fa2-9c16-9f06484b0021",
    "next": "1199c5d8-034c-4cb0-a3c7-55ef5f6ec56f"
  },
  "post": {
    "exerciseKey": "e0f87b60-68d6-4ac6-9db9-eb35a0a6bc62",
    "category": "QA",
    "title": "说说你对轮询的理解",
    "level": 1,
    "updateAt": "2023-04-23T20:23:44+00:00"
  },
  "tag": {
    "id": 10,
    "tagName": "JavaScript",
    "type": "1",
    "exerciseCount": 322
  }
}
