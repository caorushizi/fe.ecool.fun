{
  "data": {
    "id": 2753,
    "exerciseKey": "490221f4-ebf9-4d40-a2d2-254ab02c70f1",
    "category": "QA",
    "renderType": "md",
    "title": "es5 和 es6 使用 new 关键字实例化对象的流程是一样的吗？",
    "desc": "",
    "options": "",
    "explanation": "`ES5` 和 `ES6` 在使用 `new` 关键字实例化对象时，整体流程类似，但在细节上有一些关键区别。下面是详细的对比：\n\n### **1. `ES5` 的 `new` 实例化流程**\n\n1. **创建新对象**：`new` 关键字会创建一个新对象。\n2. **设置原型**：新对象的 `[[Prototype]]` 被设置为构造函数的 `prototype` 属性。\n3. **绑定 `this`**：构造函数内部的 `this` 被绑定到新创建的对象上。\n4. **执行构造函数**：构造函数会被执行，其内部代码会初始化新对象的属性。\n5. **返回对象**：如果构造函数返回一个对象，则返回这个对象；如果返回的是基本类型（如 `string`、`number`、`boolean`），则返回新创建的对象。\n\n#### **示例**\n\n```javascript\nfunction Person(name) {\n  this.name = name;\n}\n\nvar person = new Person('Alice');\nconsole.log(person.name); // Alice\n```\n\n### **2. `ES6` 的 `new` 实例化流程**\n\n`ES6` 中的 `class` 语法是基于 `ES5` 的构造函数语法封装的，`new` 的基本流程与 `ES5` 类似，但有一些新特性和要求：\n\n1. **创建新对象**：`new` 关键字会创建一个新对象。\n2. **设置原型**：新对象的 `[[Prototype]]` 被设置为类的 `prototype` 属性。\n3. **绑定 `this`**：类的构造函数中的 `this` 被绑定到新创建的对象上。\n4. **执行构造函数**：构造函数会被执行，用于初始化新对象的属性。\n5. **返回对象**：如果构造函数返回一个对象，则返回这个对象；如果构造函数返回的是基本类型，返回新创建的对象。\n\n#### **示例**\n\n```javascript\nclass Person {\n  constructor(name) {\n    this.name = name;\n  }\n}\n\nconst person = new Person('Alice');\nconsole.log(person.name); // Alice\n```\n\n### **主要区别**\n\n1. **语法**：\n   - `ES5` 使用函数和 `prototype` 来定义构造函数。\n   - `ES6` 引入了 `class` 语法，使得构造函数的定义更简洁和直观。\n\n2. **继承**：\n   - `ES5` 使用原型链和构造函数实现继承。\n   - `ES6` 使用 `extends` 关键字实现继承，语法更清晰。\n\n3. **静态方法**：\n   - `ES5` 中静态方法是直接定义在构造函数上。\n   - `ES6` `class` 语法支持使用 `static` 关键字定义静态方法。\n\n4. **类和构造函数**：\n   - `ES6` 中的类构造函数必须使用 `new` 调用，否则会抛出错误。而 `ES5` 中的构造函数如果没有使用 `new` 调用，也不会抛出错误（`this` 可能会不正确）。\n",
    "pivot": "",
    "vipLimit": 1,
    "level": 1,
    "appId": 7,
    "createAt": "2024-08-13T08:30:41.000Z",
    "updateAt": "2024-08-14T20:14:28.000Z",
    "isCollected": false,
    "currentIndex": 60,
    "filterTotalNum": 1487,
    "prev": "e33db22c-e826-41f0-b5a9-33b9a03091bc",
    "next": "ec9fd724-c3ab-453f-818c-a4909155c5f6"
  },
  "post": {
    "exerciseKey": "490221f4-ebf9-4d40-a2d2-254ab02c70f1",
    "category": "QA",
    "title": "es5 和 es6 使用 new 关键字实例化对象的流程是一样的吗？",
    "level": 1,
    "createAt": "2024-08-13T08:30:41+00:00",
    "updateAt": "2024-08-14T20:14:28+00:00"
  },
  "tag": {
    "id": 24,
    "tagName": "ES6",
    "type": "1",
    "exerciseCount": 40
  }
}