{
  "data": {
    "id": 2664,
    "exerciseKey": "ecfdaa1a-2747-4fc1-8b33-6bd338c84097",
    "category": "QA",
    "renderType": "md",
    "title": "对象取值中 a.b.c.d 和 a['b']['c']['d'] 有何区别？",
    "desc": "",
    "options": "",
    "explanation": "### 使用区别\n\n在 JavaScript 中，对象的取值可以使用两种方式，即使用点号（.）和使用方括号（\\[\\]）。对于对象的多层嵌套属性，可以使用两种方式分别取值，例如：\n\n```css\ncssCopy codevar obj = {a: {b: {c: {d: 123}}}};\nvar d1 = obj.a.b.c.d;\nvar d2 = obj['a']['b']['c']['d'];\n```\n\n这两种方式获取的结果是相同的，都是 123。其中，使用点号取值的方式称为“点操作符”，使用方括号取值的方式称为“方括号操作符”。\n\n两种方式的区别在于：\n\n1. 点操作符必须使用标识符作为属性名，而方括号操作符可以使用任何字符串作为属性名。\n2. 点操作符在代码书写上更加简洁直观，而方括号操作符可以动态地构造属性名。\n\n因此，在使用时应根据具体的情况选择合适的方式。例如，如果属性名是固定的，建议使用点操作符；如果属性名需要根据变量或其他动态条件构造，则需要使用方括号操作符。\n\n### 性能区别\n\n在对象属性的取值操作中，使用点号`.`和中括号`[]`两种方式都能取到相应的属性值，它们在性能上也有些许的差别。\n\n一般情况下，使用点号`.`来获取属性的性能要高于中括号`[]`，因为在解析的过程中使用点号`.`可以直接根据属性名获取到对应的属性值，而中括号`[]`需要先进行解析里面的属性名，然后再去查找相应的属性值，因此多了一个解析的过程。\n\n但是在以下两种情况下，只能使用中括号`[]`来获取属性值：\n\n1. 属性名包含特殊字符或者是关键字，比如 a\\['class'\\]。\n2. 属性名是动态生成的，比如 a\\[`${name}`\\]。\n\n在这两种情况下，使用点号`.`将会出现语法错误，只能使用中括号`[]`来获取属性值。",
    "pivot": "",
    "vipLimit": 1,
    "level": 1,
    "appId": 7,
    "createAt": "2024-08-13T08:30:36.000Z",
    "updateAt": "2024-08-15T00:01:38.000Z",
    "isCollected": false,
    "currentIndex": 100,
    "filterTotalNum": 1487,
    "prev": "832f41cd-27bb-4fae-bf8d-b63b52d7086a",
    "next": "89bdfa55-0b7d-405a-83d7-37ff36473697"
  },
  "post": {
    "exerciseKey": "ecfdaa1a-2747-4fc1-8b33-6bd338c84097",
    "category": "QA",
    "title": "对象取值中 a.b.c.d 和 a['b']['c']['d'] 有何区别？",
    "level": 1,
    "createAt": "2024-08-13T08:30:36+00:00",
    "updateAt": "2024-08-15T00:01:38+00:00"
  },
  "tag": {
    "id": 10,
    "tagName": "JavaScript",
    "type": "1",
    "exerciseCount": 379
  }
}