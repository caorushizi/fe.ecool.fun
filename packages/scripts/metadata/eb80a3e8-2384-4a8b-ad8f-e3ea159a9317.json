{
  "data": {
    "id": 2100,
    "exerciseKey": "eb80a3e8-2384-4a8b-ad8f-e3ea159a9317",
    "category": "QA",
    "renderType": "md",
    "title": "怎么在 Vue 中定义全局方法？\n",
    "desc": null,
    "options": null,
    "explanation": "在 Vue.js 中定义全局方法，可以通过多种方式实现，包括直接在 Vue 的原型对象上添加方法、使用 Vue 3 的全局 API (`app.config.globalProperties`)、以及通过混入 (mixin) 等方法。\n\n以下是几种常见的方法：\n\n### 方法一：在 Vue 2 中通过 Vue.prototype 定义全局方法\n\n```javascript\n// main.js\nimport Vue from 'vue';\nimport App from './App.vue';\n\nVue.config.productionTip = false;\n\n// 定义全局方法\nVue.prototype.$myGlobalMethod = function () {\n  console.log('这是一个全局方法');\n};\n\nnew Vue({\n  render: h => h(App),\n}).$mount('#app');\n```\n\n#### 在组件中使用\n\n```javascript\n<template>\n  <div>\n    <button @click=\"useGlobalMethod\">调用全局方法</button>\n  </div>\n</template>\n\n<script>\nexport default {\n  methods: {\n    useGlobalMethod() {\n      this.$myGlobalMethod();\n    }\n  }\n}\n</script>\n```\n\n### 方法二：在 Vue 3 中通过 `app.config.globalProperties` 定义全局方法\n\n```javascript\n// main.js\nimport { createApp } from 'vue';\nimport App from './App.vue';\n\nconst app = createApp(App);\n\n// 定义全局方法\napp.config.globalProperties.$myGlobalMethod = function () {\n  console.log('这是一个全局方法');\n};\n\napp.mount('#app');\n```\n\n#### 在组件中使用\n\n```vue\n<template>\n  <div>\n    <button @click=\"useGlobalMethod\">调用全局方法</button>\n  </div>\n</template>\n\n<script>\nexport default {\n  methods: {\n    useGlobalMethod() {\n      this.$myGlobalMethod();\n    }\n  }\n}\n</script>\n```\n\n### 方法三：使用混入（Mixin）\n\n你可以创建一个混入对象并将其全局注册，从而在所有组件中使用这个混入对象定义的方法。\n\n```javascript\n// globalMixin.js\nexport const globalMixin = {\n  methods: {\n    $myGlobalMethod() {\n      console.log('这是一个全局方法');\n    }\n  }\n};\n```\n\n```javascript\n// main.js\nimport Vue from 'vue';\nimport App from './App.vue';\nimport { globalMixin } from './globalMixin';\n\nVue.config.productionTip = false;\n\n// 全局混入\nVue.mixin(globalMixin);\n\nnew Vue({\n  render: h => h(App),\n}).$mount('#app');\n```\n\n#### 在组件中使用\n\n```vue\n<template>\n  <div>\n    <button @click=\"useGlobalMethod\">调用全局方法</button>\n  </div>\n</template>\n\n<script>\nexport default {\n  methods: {\n    useGlobalMethod() {\n      this.$myGlobalMethod();\n    }\n  }\n}\n</script>\n```\n\n### 方法四：创建插件\n\n你可以创建一个 Vue 插件来封装全局方法，并在 `main.js` 中安装插件。\n\n```javascript\n// myPlugin.js\nexport default {\n  install(Vue) {\n    Vue.prototype.$myGlobalMethod = function () {\n      console.log('这是一个全局方法');\n    }\n  }\n};\n```\n\n```javascript\n// main.js\nimport Vue from 'vue';\nimport App from './App.vue';\nimport myPlugin from './myPlugin';\n\nVue.config.productionTip = false;\n\n// 安装插件\nVue.use(myPlugin);\n\nnew Vue({\n  render: h => h(App),\n}).$mount('#app');\n```\n\n#### 在组件中使用\n\n```vue\n<template>\n  <div>\n    <button @click=\"useGlobalMethod\">调用全局方法</button>\n  </div>\n</template>\n\n<script>\nexport default {\n  methods: {\n    useGlobalMethod() {\n      this.$myGlobalMethod();\n    }\n  }\n}\n</script>\n```",
    "pivot": "",
    "vipLimit": 0,
    "level": 3,
    "appId": 7,
    "createAt": "2024-06-06T01:31:49.000Z",
    "updateAt": "2024-08-10T17:07:43.000Z",
    "isCollected": false,
    "currentIndex": 292,
    "filterTotalNum": 1487,
    "prev": "3622c49b-aa21-46f9-8818-b03eb41b0745",
    "next": "126917b6-56bc-4c94-81b7-f39263395546"
  },
  "post": {
    "exerciseKey": "eb80a3e8-2384-4a8b-ad8f-e3ea159a9317",
    "category": "QA",
    "title": "怎么在 Vue 中定义全局方法？\n",
    "level": 3,
    "createAt": "2024-06-06T01:31:49+00:00",
    "updateAt": "2024-08-10T17:07:43+00:00"
  },
  "tag": {
    "id": 14,
    "tagName": "Vue.js",
    "type": "1",
    "exerciseCount": 97
  }
}