{
  "data": {
    "id": 2102,
    "exerciseKey": "b5d40614-89d3-42c7-823a-2102ef8006b1",
    "category": "QA",
    "renderType": "md",
    "title": "computed 计算值为什么还可以依赖另外一个 computed 计算值？\n",
    "desc": null,
    "options": null,
    "explanation": "在 Vue 中，`computed` 计算属性可以依赖其他 `computed` 计算属性，因为 Vue 的响应式系统能够正确地追踪依赖关系。\n\n以下是具体的原理和机制：\n\n### 响应式系统的依赖追踪\n\nVue 的响应式系统通过依赖收集和依赖追踪来实现。当一个响应式属性被读取时，Vue 会记录下当前的依赖（即哪个组件或者计算属性正在读取这个值）。当这个属性发生变化时，Vue 会通知这些依赖进行更新。\n\n### `computed` 计算属性的实现\n\n`computed` 计算属性本质上是具有缓存功能的特殊方法。它们只有在其依赖的响应式属性发生变化时才会重新计算，否则返回缓存的值。\n\n### 依赖其他计算属性\n\n当一个 `computed` 计算属性依赖于另一个 `computed` 计算属性时，Vue 能够正确地追踪这些依赖关系。这是因为：\n\n1. **依赖收集**：\n   当第一个计算属性被访问时，它的 getter 会被调用，并且 Vue 会记录下这个依赖关系。这个过程包括记录依赖的其他计算属性。\n\n2. **缓存机制**：\n   如果另一个计算属性的值没有改变，Vue 不会重复计算它，而是直接使用缓存值。这保证了性能优化。\n\n3. **更新机制**：\n   当基础的响应式属性发生变化时，所有依赖它的计算属性都会被重新计算，并且最终更新到组件的渲染中。\n\n### 示例\n\n下面是一个具体的例子来说明这个过程：\n\n```javascript\nnew Vue({\n  data() {\n    return {\n      a: 1,\n      b: 2\n    };\n  },\n  computed: {\n    sum() {\n      return this.a + this.b;\n    },\n    doubleSum() {\n      return this.sum * 2;\n    }\n  }\n});\n```\n\n在这个例子中：\n\n1. **依赖收集**：\n   - 当 `doubleSum` 被访问时，Vue 会调用其 getter，发现它依赖于 `sum`。\n   - 然后 Vue 会访问 `sum`，记录下 `sum` 依赖于 `a` 和 `b`。\n\n2. **缓存机制**：\n   - 如果 `a` 和 `b` 没有改变，再次访问 `doubleSum` 时，Vue 直接返回缓存的值，不会重复计算 `sum`。\n\n3. **更新机制**：\n   - 如果 `a` 或 `b` 发生改变，Vue 会重新计算 `sum`，然后更新 `doubleSum`。\n\n### 总结\n\nVue 的响应式系统能够正确地追踪 `computed` 计算属性之间的依赖关系，因为它使用了依赖收集和缓存机制。当基础的响应式属性发生变化时，所有依赖关系都会被重新计算并更新，从而保持应用状态的一致性。",
    "pivot": "",
    "vipLimit": 0,
    "level": 3,
    "appId": 7,
    "createAt": "2024-06-06T01:35:25.000Z",
    "updateAt": "2024-08-10T19:07:04.000Z",
    "isCollected": false,
    "currentIndex": 290,
    "filterTotalNum": 1487,
    "prev": "b63832ef-77c7-4507-baf5-1134957368c0",
    "next": "3622c49b-aa21-46f9-8818-b03eb41b0745"
  },
  "post": {
    "exerciseKey": "b5d40614-89d3-42c7-823a-2102ef8006b1",
    "category": "QA",
    "title": "computed 计算值为什么还可以依赖另外一个 computed 计算值？\n",
    "level": 3,
    "createAt": "2024-06-06T01:35:25+00:00",
    "updateAt": "2024-08-10T19:07:04+00:00"
  },
  "tag": {
    "id": 14,
    "tagName": "Vue.js",
    "type": "1",
    "exerciseCount": 97
  }
}