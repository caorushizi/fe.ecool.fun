{
  "data": {
    "id": 2881,
    "exerciseKey": "f8da672c-4231-4dff-990d-9a4a6daebe2c",
    "category": "QA",
    "renderType": "md",
    "title": "怎么理解 Vue3 提供的 markRaw ？",
    "desc": null,
    "options": null,
    "explanation": " 在 Vue 3 中，`markRaw` 是一个用于标记对象的 API，主要用于优化性能和防止 Vue 的响应式系统对某些对象的处理。以下是对 `markRaw` 的详细理解：\n\n### **1. 功能**\n\n- **标记为非响应式**：`markRaw` 可以将一个对象标记为非响应式对象。使用该 API 后，Vue 不会将这个对象转换为响应式对象，任何对其属性的修改都不会触发 Vue 的响应式系统。\n\n### **2. 用法场景**\n\n- **性能优化**：在某些情况下，某些对象（如大型库的实例、第三方插件等）不需要响应式特性，因为它们的属性变化不需要 Vue 进行监测。这时可以使用 `markRaw` 来优化性能。\n- **避免不必要的代理**：使用 `markRaw` 可以避免 Vue 对某些对象的代理开销，尤其是当这些对象不会被 Vue 观察或更新时。\n\n### **3. 例子**\n\n```javascript\nimport { markRaw } from 'vue';\n\n// 一个非响应式的对象\nconst nonReactiveObj = markRaw({ someProperty: 'value' });\n\n// 使用这个对象\nconsole.log(nonReactiveObj.someProperty); // 'value'\n\n// 修改属性不会触发 Vue 的响应式系统\nnonReactiveObj.someProperty = 'new value';\n```\n\n### **4. 结合其他 API 使用**\n\n- `markRaw` 通常与 Vue 的响应式 API（如 `reactive`、`ref`）结合使用，用于明确哪些对象需要被监测，哪些对象不需要。",
    "pivot": "",
    "vipLimit": 1,
    "level": 3,
    "appId": 7,
    "createAt": "2024-09-25T09:20:10.000Z",
    "updateAt": "2024-09-27T06:25:55.000Z",
    "isCollected": false,
    "currentIndex": 5,
    "filterTotalNum": 1487,
    "prev": "d95319f5-e060-4727-a7a4-d4996c00a6c7",
    "next": "ead2f5e6-525a-4faf-956f-d97d90e933fe"
  },
  "post": {
    "exerciseKey": "f8da672c-4231-4dff-990d-9a4a6daebe2c",
    "category": "QA",
    "title": "怎么理解 Vue3 提供的 markRaw ？",
    "level": 3,
    "createAt": "2024-09-25T09:20:10+00:00",
    "updateAt": "2024-09-27T06:25:55+00:00"
  },
  "tag": {
    "id": 14,
    "tagName": "Vue.js",
    "type": "1",
    "exerciseCount": 97
  }
}