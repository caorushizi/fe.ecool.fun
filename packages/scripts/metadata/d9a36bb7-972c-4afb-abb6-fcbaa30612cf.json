{
  "data": {
    "id": 1603,
    "exerciseKey": "d9a36bb7-972c-4afb-abb6-fcbaa30612cf",
    "category": "QA",
    "renderType": "md",
    "title": "【Promise第11题】下面代码的输出是什么？",
    "desc": "```js\nconst promise1 = new Promise((resolve, reject) => {\n  setTimeout(() => {\n    resolve('success')\n  }, 1000)\n})\nconst promise2 = promise1.then(() => {\n  throw new Error('error!!!')\n})\nconsole.log('promise1', promise1)\nconsole.log('promise2', promise2)\nsetTimeout(() => {\n  console.log('promise1', promise1)\n  console.log('promise2', promise2)\n}, 2000)\n```",
    "options": null,
    "explanation": "## 过程分析\n\n* 从上至下，先执行第一个new Promise中的函数，碰到setTimeout将它加入下一个宏任务列表\n* 跳出new Promise，碰到promise1.then这个微任务，但其状态还是为pending，这里理解为先不执行\n* promise2是一个新的状态为pending的Promise\n* 执行同步代码console.log('promise1')，且打印出的promise1的状态为pending\n* 执行同步代码console.log('promise2')，且打印出的promise2的状态为pending\n* 碰到第二个定时器，将其放入下一个宏任务列表\n* 第一轮宏任务执行结束，并且没有微任务需要执行，因此执行第二轮宏任务\n* 先执行第一个定时器里的内容，将promise1的状态改为resolved且保存结果并将之前的promise1.then推入微任务队列\n* 该定时器中没有其它的同步代码可执行，因此执行本轮的微任务队列，也就是promise1.then，它抛出了一个错误，且将promise2的状态设置为了rejected\n* 第一个定时器执行完毕，开始执行第二个定时器中的内容\n* 打印出'promise1'，且此时promise1的状态为resolved\n* 打印出'promise2'，且此时promise2的状态为rejected\n\n## 结果\n\n```\n'promise1' Promise{<pending>}\n'promise2' Promise{<pending>}\ntest5.html:102 Uncaught (in promise) Error: error!!! at test.html:102\n'promise1' Promise{<resolved>: \"success\"}\n'promise2' Promise{<rejected>: Error: error!!!}\n```",
    "level": 3,
    "status": 2,
    "appId": 7,
    "createAt": "2022-01-09T14:38:08.000Z",
    "updateAt": "2022-01-09T23:01:15.000Z",
    "updateUserId": 11,
    "isCollected": false,
    "currentIndex": 670,
    "prev": "37a4ad10-3819-4ab3-bb5f-26a6bf1ca07a",
    "next": "fa6c1ad8-274c-4830-aee9-6799d6a7fdc1"
  },
  "post": {
    "exerciseKey": "d9a36bb7-972c-4afb-abb6-fcbaa30612cf",
    "category": "QA",
    "title": "【Promise第11题】下面代码的输出是什么？",
    "level": 3,
    "updateAt": "2022-01-09T23:01:15+00:00"
  },
  "tag": {
    "id": 10,
    "tagName": "JavaScript",
    "type": "1",
    "exerciseCount": 322
  }
}
