{
  "data": {
    "id": 171,
    "exerciseKey": "fad85622-728a-4c93-bf22-d91f8902837d",
    "category": "QA",
    "renderType": "md",
    "title": "如何使用css完成视差滚动效果?",
    "desc": null,
    "options": null,
    "explanation": "## 一、是什么\n\n视差滚动（Parallax Scrolling）是指多层背景以不同的速度移动，形成立体的运动效果，带来非常出色的视觉体验\n\n我们可以把网页解刨成：背景层、内容层、悬浮层\n\n ![](https://static.ecool.fun//article/90b49aad-edf4-4c9a-80c0-d4108befbc9e.png)\n\n当滚动鼠标滑轮的时候，各个图层以不同的速度移动，形成视觉差的效果\n\n ![image.png](https://static.ecool.fun//article/b559ab16-e004-4202-9216-ed4137ff23af.png)\n\n\n## 二、实现方式\n\n\n使用`css`形式实现视觉差滚动效果的方式有：\n\n- background-attachment\n- transform:translate3D\n\n\n### background-attachment\n\n作用是设置背景图像是否固定或者随着页面的其余部分滚动\n\n值分别有如下：\n\n- scroll：默认值，背景图像会随着页面其余部分的滚动而移动\n- fixed：当页面的其余部分滚动时，背景图像不会移动\n- inherit：继承父元素background-attachment属性的值\n\n完成滚动视觉差就需要将`background-attachment`属性设置为`fixed`，让背景相对于视口固定。及时一个元素有滚动机制，背景也不会随着元素的内容而滚动\n\n也就是说，背景一开始就已经被固定在初始的位置\n\n核心的`css`代码如下：\n\n```css\nsection {\n    height: 100vh;\n}\n\n.g-img {\n    background-image: url(...);\n    background-attachment: fixed;\n    background-size: cover;\n    background-position: center center;\n}\n```\n\n整体例子如下：\n\n```html\n<style>\ndiv {\n            height: 100vh;\n            background: rgba(0, 0, 0, .7);\n            color: #fff;\n            line-height: 100vh;\n            text-align: center;\n            font-size: 20vh;\n        }\n\n        .a-img1 {\n            background-image: url(https://images.pexels.com/photos/1097491/pexels-photo-1097491.jpeg);\n            background-attachment: fixed;\n            background-size: cover;\n            background-position: center center;\n        }\n\n        .a-img2 {\n            background-image: url(https://images.pexels.com/photos/2437299/pexels-photo-2437299.jpeg);\n            background-attachment: fixed;\n            background-size: cover;\n            background-position: center center;\n        }\n\n        .a-img3 {\n            background-image: url(https://images.pexels.com/photos/1005417/pexels-photo-1005417.jpeg);\n            background-attachment: fixed;\n            background-size: cover;\n            background-position: center center;\n        }\n</style>\n <div class=\"a-text\">1</div>\n    <div class=\"a-img1\">2</div>\n    <div class=\"a-text\">3</div>\n    <div class=\"a-img2\">4</div>\n    <div class=\"a-text\">5</div>\n    <div class=\"a-img3\">6</div>\n    <div class=\"a-text\">7</div>\n```\n\n\n\n\n\n### transform:translate3D\n\n同样，让我们先来看一下两个概念`transform`和`perspective`：\n\n- transform: css3 属性，可以对元素进行变换(2d/3d)，包括平移 translate,旋转 rotate,缩放 scale,等等\n- perspective: css3 属性，当元素涉及 3d 变换时，perspective 可以定义我们眼睛看到的 3d 立体效果，即空间感\n\n`3D`视角示意图如下所示：\n\n ![](https://static.ecool.fun//article/54934f1f-3ae6-4655-8b01-b345b0f88d2b.png)\n\n\n举个例子：\n\n```html\n<style>\n    html {\n        overflow: hidden;\n        height: 100%\n    }\n\n    body {\n        /* 视差元素的父级需要3D视角 */\n        perspective: 1px;\n        transform-style: preserve-3d; \n        height: 100%;\n        overflow-y: scroll;\n        overflow-x: hidden;\n    }\n    #app{\n        width: 100vw;\n        height:200vh;\n        background:skyblue;\n        padding-top:100px;\n    }\n    .one{\n        width:500px;\n        height:200px;\n        background:#409eff;\n        transform: translateZ(0px);\n        margin-bottom: 50px;\n    }\n    .two{\n        width:500px;\n        height:200px;\n        background:#67c23a;\n        transform: translateZ(-1px);\n        margin-bottom: 150px;\n    }\n    .three{\n        width:500px;\n        height:200px;\n        background:#e6a23c;\n        transform: translateZ(-2px);\n        margin-bottom: 150px;\n    }\n</style>\n<div id=\"app\">\n    <div class=\"one\">one</div>\n    <div class=\"two\">two</div>\n    <div class=\"three\">three</div>\n</div>\n```\n\n\n而这种方式实现视觉差动的原理如下：\n\n- 容器设置上 transform-style: preserve-3d 和 perspective: xpx，那么处于这个容器的子元素就将位于3D空间中，\n\n- 子元素设置不同的 transform: translateZ()，这个时候，不同元素在 3D Z轴方向距离屏幕（我们的眼睛）的距离也就不一样\n\n- 滚动滚动条，由于子元素设置了不同的 transform: translateZ()，那么他们滚动的上下距离 translateY 相对屏幕（我们的眼睛），也是不一样的，这就达到了滚动视差的效果\n",
    "level": 2.5,
    "status": 2,
    "appId": 7,
    "createAt": "2021-07-03T13:27:08.000Z",
    "updateAt": "2024-01-24T17:27:02.000Z",
    "updateUserId": 11,
    "isCollected": false,
    "currentIndex": 186,
    "prev": "cae03999-2c1e-4ecc-9c66-10c0714c61d6",
    "next": "f2e90e32-83d2-4ba4-8a57-033160fac9c4"
  },
  "post": {
    "exerciseKey": "fad85622-728a-4c93-bf22-d91f8902837d",
    "category": "QA",
    "title": "如何使用css完成视差滚动效果?",
    "level": 2.5,
    "updateAt": "2024-01-24T17:27:02+00:00"
  },
  "tag": {
    "id": 11,
    "tagName": "CSS",
    "type": "1",
    "exerciseCount": 90
  }
}
