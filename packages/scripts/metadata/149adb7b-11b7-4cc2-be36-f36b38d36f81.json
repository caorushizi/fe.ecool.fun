{
  "data": {
    "id": 454,
    "exerciseKey": "149adb7b-11b7-4cc2-be36-f36b38d36f81",
    "category": "QA",
    "renderType": "md",
    "title": "TypeScript 的内置数据类型有哪些？",
    "desc": null,
    "options": null,
    "explanation": "* boolean：表示布尔值，可以是 true 或 false。 \n* number：表示数字，包括整数和浮点数。 \n* string：表示字符串。可以使用单引号或双引号来表示字符串。 \n* void：表示没有任何返回值的函数的返回类型。 \n* null 和 undefined：这两个类型是所有类型的子类型。 symbol：表示独特的值，类似于数字或字符串。\n\n除此之外，TypeScript 还支持以下复合类型：\n\n* array：表示一个元素类型为 T 的数组。例如，number[] 表示一个数字数组。 \n* tuple：表示已知元素数量和类型的数组。例如，[string, number] 表示一个字符串和数字组成的元组。 \n* enum：表示一个命名的常量枚举。 \n* any：表示任意类型。 \n* unknown：与 any 类似，但是在更严格的类型检查下使用。 \n* object：表示非原始类型的对象。 \n* 还有一些其他的类型，例如 never、union 和 intersection，它们可以用于描述更复杂的类型。",
    "pivot": "",
    "vipLimit": 0,
    "level": 1,
    "appId": 7,
    "createAt": "2021-07-07T15:18:19.000Z",
    "updateAt": "2024-08-10T17:05:16.000Z",
    "isCollected": false,
    "currentIndex": 1046,
    "filterTotalNum": 1487,
    "prev": "70b0b59f-d4d7-41c2-be2b-94ffcbedb717",
    "next": "aa95a786-7e51-4769-ab64-80f1adaf3580"
  },
  "post": {
    "exerciseKey": "149adb7b-11b7-4cc2-be36-f36b38d36f81",
    "category": "QA",
    "title": "TypeScript 的内置数据类型有哪些？",
    "level": 1,
    "createAt": "2021-07-07T15:18:19+00:00",
    "updateAt": "2024-08-10T17:05:16+00:00"
  },
  "tag": {
    "id": 19,
    "tagName": "Typescript",
    "type": "1",
    "exerciseCount": 55
  }
}