{
  "data": {
    "id": 2080,
    "exerciseKey": "4c0c461d-35da-4944-be7a-88e75e861d62",
    "category": "QA",
    "renderType": "md",
    "title": "说说你对渐进式框架的理解",
    "desc": null,
    "options": null,
    "explanation": "渐进式的含义：没有多做职责之外的事，只做了自己该做的事，没有做不该做的事，仅此而已。\n\n更直白一点就是，用你想用或者能用的功能特性，你不想用的部分功能可以先不用。VUE不强求你一次性接受并使用它的全部功能特性。\n\n比如以下两种场景，Vue 发挥了很大的优点：\n\n* 场景一：公司刚开始一个项目，技术人员对Vue的掌握也不足够。那么我们就不能使用VUE了么？当然不是，如果你只是使用VUE做些基础操作，如：页面渲染、表单处理提交功能，那还是非常简单的，成熟技术人员上手也就一两天。完全可以用它去代替jquery。并不需要你去引入其他复杂特性功能。\n\n* 场景二：我们的项目规模逐渐的变大了，我们可能会逐渐用到前端路由、状态集中管理、并最终实现一个高度工程化的前端项目。这些功能特性我们可以逐步引入，当然不用也可以。\n\nVue 的适用面很广，你可以用它代替老项目中的JQuery。也可以在新项目启动初期，有限的使用VUE的功能特性，从而降低上手的成本。",
    "pivot": "",
    "vipLimit": 0,
    "level": 1,
    "appId": 7,
    "createAt": "2024-01-08T03:49:55.000Z",
    "updateAt": "2024-08-10T19:30:39.000Z",
    "isCollected": false,
    "currentIndex": 311,
    "filterTotalNum": 1487,
    "prev": "d17cf190-40d8-4405-bc82-eb54480ca38c",
    "next": "e492260e-4dc9-43cf-a2ee-315edadeb931"
  },
  "post": {
    "exerciseKey": "4c0c461d-35da-4944-be7a-88e75e861d62",
    "category": "QA",
    "title": "说说你对渐进式框架的理解",
    "level": 1,
    "createAt": "2024-01-08T03:49:55+00:00",
    "updateAt": "2024-08-10T19:30:39+00:00"
  },
  "tag": {
    "id": 14,
    "tagName": "Vue.js",
    "type": "1",
    "exerciseCount": 97
  }
}