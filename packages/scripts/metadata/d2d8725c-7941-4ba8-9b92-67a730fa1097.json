{
  "data": {
    "id": 1835,
    "exerciseKey": "d2d8725c-7941-4ba8-9b92-67a730fa1097",
    "category": "QA",
    "renderType": "md",
    "title": "HTML5的离线储存怎么使用，它的工作原理是什么",
    "desc": null,
    "options": null,
    "explanation": "\n离线存储指的是：在用户没有与因特网连接时，可以正常访问站点或应用，在用户与因特网连接时，更新用户机器上的缓存文件。\n\n\n**原理：**HTML5的离线存储是基于一个新建的 `.appcache` 文件的缓存机制(不是存储技术)，通过这个文件上的解析清单离线存储资源，这些资源就会像cookie一样被存储了下来。之后当网络在处于离线状态下时，浏览器会通过被离线存储的数据进行页面展示\n\n\n**使用方法：**\n（1）创建一个和 html 同名的 manifest 文件，然后在页面头部加入 manifest 属性：\n\n```html\n<html lang=\"en\" manifest=\"index.manifest\">\n```\n\n（2）在 `cache.manifest` 文件中编写需要离线存储的资源：\n\n```html\nCACHE MANIFEST\n    #v0.11\n    CACHE:\n    js/app.js\n    css/style.css\n    NETWORK:\n    resourse/logo.png\n    FALLBACK:\n    / /offline.html\n```\n\n- **CACHE**: 表示需要离线存储的资源列表，由于包含 manifest 文件的页面将被自动离线存储，所以不需要把页面自身也列出来。\n- **NETWORK**: 表示在它下面列出来的资源只有在在线的情况下才能访问，他们不会被离线存储，所以在离线情况下无法使用这些资源。不过，如果在 CACHE 和 NETWORK 中有一个相同的资源，那么这个资源还是会被离线存储，也就是说 CACHE 的优先级更高。\n- **FALLBACK**: 表示如果访问第一个资源失败，那么就使用第二个资源来替换他，比如上面这个文件表示的就是如果访问根目录下任何一个资源失败了，那么就去访问 offline.html 。\n\n（3）在离线状态时，操作 `window.applicationCache` 进行离线缓存的操作。\n\n\n**如何更新缓存：**\n\n（1）更新 manifest 文件\n \n （2）通过 javascript 操作\n \n （3）清除浏览器缓存\n\n\n**注意事项：**\n \n （1）浏览器对缓存数据的容量限制可能不太一样（某些浏览器设置的限制是每个站点 5MB）。\n \n （2）如果 manifest 文件，或者内部列举的某一个文件不能正常下载，整个更新过程都将失败，浏览器继续全部使用老的缓存。\n \n （3）引用 manifest 的 html 必须与 manifest 文件同源，在同一个域下。\n \n （4）FALLBACK 中的资源必须和 manifest 文件同源。\n \n （5）当一个资源被缓存后，该浏览器直接请求这个绝对路径也会访问缓存中的资源。\n \n （6）站点中的其他页面即使没有设置 manifest 属性，请求的资源如果在缓存中也从缓存中访问。\n\n（7）当 manifest 文件发生改变时，资源请求本身也会触发更新。\n",
    "level": 2.5,
    "status": 2,
    "appId": 7,
    "createAt": "2022-06-25T06:31:05.000Z",
    "updateAt": "2022-06-25T14:36:05.000Z",
    "updateUserId": 11,
    "isCollected": false,
    "currentIndex": 517,
    "prev": "93ffefee-3471-48a5-b60c-1b7adf8edf13",
    "next": "072b9f8d-7383-4823-9508-77e4e9d1744c"
  },
  "post": {
    "exerciseKey": "d2d8725c-7941-4ba8-9b92-67a730fa1097",
    "category": "QA",
    "title": "HTML5的离线储存怎么使用，它的工作原理是什么",
    "level": 2.5,
    "updateAt": "2022-06-25T14:36:05+00:00"
  },
  "tag": {
    "id": 12,
    "tagName": "HTML",
    "type": "1",
    "exerciseCount": 57
  }
}
