{
  "data": {
    "id": 2056,
    "exerciseKey": "37ec6705-eb04-44c9-99eb-4ffda663c7f7",
    "category": "QA",
    "renderType": "md",
    "title": "git 中 rebase、reset、revert 有什么区别？",
    "desc": null,
    "options": null,
    "explanation": "在Git中，`rebase`、`reset`和`revert`是三个常用的操作命令，它们用于处理提交历史、撤销更改或应用更改。它们的主要区别如下：\n\n1. `Rebase`（变基）：`git rebase`命令用于将一个分支的提交应用到另一个分支上，从而重新组织提交历史。它可以用于合并分支或消除分支之间的差异。通过变基，可以使得代码提交历史更加清晰、线性，并且可以避免生成大量的合并提交。\n\n2. `Reset`（重置）：`git reset`命令用于移动HEAD和分支引用以回退或前进到特定的提交。它可以用来撤销提交、取消暂存的更改或者改变工作目录中的文件状态。使用不同的选项，例如`--soft`、`--mixed`和`--hard`，可以控制重置的行为。注意，重置会修改提交历史，因此在与他人共享代码时应谨慎使用。\n\n3. `Revert`（还原）：`git revert`命令用于创建一个新的提交，该提交撤销了指定提交的更改。与重置不同，还原是通过创建新的提交来撤销更改，而不是直接修改提交历史。这种方式能够保持提交历史的完整性，并且是安全的，因为它不会影响其他开发者所使用的分支。\n\n以下是简要总结：\n\n- `Rebase`：重新组织提交历史，合并分支或消除差异。\n- `Reset`：移动HEAD和分支引用以回退或前进到特定的提交，修改提交历史。\n- `Revert`：创建一个新的提交，撤销指定提交的更改，保持提交历史的完整性。",
    "pivot": "",
    "vipLimit": 0,
    "level": 1,
    "appId": 7,
    "createAt": "2023-12-17T09:59:24.000Z",
    "updateAt": "2024-08-10T17:07:31.000Z",
    "isCollected": false,
    "currentIndex": 333,
    "filterTotalNum": 1487,
    "prev": "7053c84f-1316-43f2-a2ba-23fb00318220",
    "next": "a34f9f1b-c1b6-4660-b851-0b610c18e66e"
  },
  "post": {
    "exerciseKey": "37ec6705-eb04-44c9-99eb-4ffda663c7f7",
    "category": "QA",
    "title": "git 中 rebase、reset、revert 有什么区别？",
    "level": 1,
    "createAt": "2023-12-17T09:59:24+00:00",
    "updateAt": "2024-08-10T17:07:31+00:00"
  },
  "tag": {
    "id": 29,
    "tagName": "工具",
    "type": "1",
    "exerciseCount": 33
  }
}