{
  "data": {
    "id": 1991,
    "exerciseKey": "bce3670f-ad2c-4b8f-bd0a-f3448eabc84f",
    "category": "QA",
    "renderType": "md",
    "title": "Electron 中的主进程和渲染进程分别是什么？",
    "desc": null,
    "options": null,
    "explanation": "在 Electron 中，应用程序的架构分为两个主要进程：**主进程**和**渲染进程**。这两个进程分别承担不同的职责，并且有不同的角色和功能。\n\n### **1. 主进程（Main Process）**\n\n- **定义**：主进程是 Electron 应用的核心进程，它负责创建和管理应用窗口，以及控制整个应用的生命周期。\n- **职责**：\n  - **创建窗口**：主进程使用 `BrowserWindow` 类创建和管理应用窗口。\n  - **管理窗口**：处理窗口的创建、关闭、最小化、最大化等操作。\n  - **处理系统事件**：例如，处理应用程序的启动、退出、系统托盘图标等。\n  - **与渲染进程通信**：通过 IPC（进程间通信）与渲染进程进行通信。\n  - **访问 Node.js API**：可以使用 Node.js 的核心模块，如文件系统、网络、进程管理等。\n\n- **示例代码**：\n  ```javascript\n  // main.js\n  const { app, BrowserWindow } = require('electron');\n  \n  function createWindow() {\n    const mainWindow = new BrowserWindow({\n      width: 800,\n      height: 600,\n      webPreferences: {\n        nodeIntegration: true,\n        contextIsolation: false,\n      },\n    });\n    mainWindow.loadFile('index.html');\n  }\n  \n  app.whenReady().then(() => {\n    createWindow();\n    app.on('activate', () => {\n      if (BrowserWindow.getAllWindows().length === 0) createWindow();\n    });\n  });\n\n  app.on('window-all-closed', () => {\n    if (process.platform !== 'darwin') app.quit();\n  });\n  ```\n\n### **2. 渲染进程（Renderer Process）**\n\n- **定义**：渲染进程是为每个应用窗口创建的独立进程，它负责渲染窗口的内容并处理用户界面（UI）的逻辑。\n- **职责**：\n  - **渲染内容**：负责显示 HTML、CSS 和 JavaScript 内容，类似于传统的浏览器渲染页面。\n  - **处理用户交互**：处理用户的输入事件，如点击、键盘输入等。\n  - **与主进程通信**：通过 IPC 与主进程进行通信，实现数据交换和功能调用。\n  - **访问 Web API**：使用浏览器环境提供的 API，如 `document`、`window`、`fetch` 等。\n\n- **示例代码**：\n  ```javascript\n  // renderer.js\n  const { ipcRenderer } = require('electron');\n\n  // 发送消息到主进程\n  ipcRenderer.send('message', 'Hello from renderer');\n\n  // 监听主进程的消息\n  ipcRenderer.on('reply', (event, data) => {\n    console.log(`Received reply: ${data}`);\n  });\n  ```\n\n### **进程间通信（IPC）**\n\n- **主进程与渲染进程通信**：使用 IPC 模块进行进程间通信。主进程和渲染进程通过 `ipcMain` 和 `ipcRenderer` 对象发送和接收消息。\n  - **主进程发送消息**：\n    ```javascript\n    // main.js\n    const { ipcMain } = require('electron');\n\n    ipcMain.on('message', (event, arg) => {\n      console.log(arg); // 'Hello from renderer'\n      event.reply('reply', 'Hello from main');\n    });\n    ```\n  - **渲染进程发送消息**：\n    ```javascript\n    // renderer.js\n    const { ipcRenderer } = require('electron');\n\n    ipcRenderer.send('message', 'Hello from renderer');\n    ipcRenderer.on('reply', (event, arg) => {\n      console.log(arg); // 'Hello from main'\n    });\n    ```",
    "pivot": "",
    "vipLimit": 0,
    "level": 1.5,
    "appId": 7,
    "createAt": "2023-05-20T01:05:37.000Z",
    "updateAt": "2024-08-10T17:07:19.000Z",
    "isCollected": false,
    "currentIndex": 398,
    "filterTotalNum": 1487,
    "prev": "97758079-03f4-40ce-9b71-8c3c4e5db338",
    "next": "073219e8-a8df-4ccd-9fc8-fd0dfd9e7c35"
  },
  "post": {
    "exerciseKey": "bce3670f-ad2c-4b8f-bd0a-f3448eabc84f",
    "category": "QA",
    "title": "Electron 中的主进程和渲染进程分别是什么？",
    "level": 1.5,
    "createAt": "2023-05-20T01:05:37+00:00",
    "updateAt": "2024-08-10T17:07:19+00:00"
  },
  "tag": {
    "id": 74,
    "tagName": "跨端技术",
    "type": "1",
    "exerciseCount": 11
  }
}