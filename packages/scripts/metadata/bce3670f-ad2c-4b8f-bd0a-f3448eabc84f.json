{
  "data": {
    "id": 1991,
    "exerciseKey": "bce3670f-ad2c-4b8f-bd0a-f3448eabc84f",
    "category": "QA",
    "renderType": "md",
    "title": "Electron 中的主进程和渲染进程分别是什么？",
    "desc": null,
    "options": null,
    "explanation": "在 Electron 中，**主进程**和**渲染进程**是两个不同的进程。\n\n* 主进程是 Electron 应用程序的入口，它负责创建和管理应用程序中的所有窗口，并且可以访问底层系统资源。主进程通常是一个 Node.js 进程，可以使用 Node.js 的 API 和第三方模块来实现各种功能，如文件操作、网络通信和数据库连接等。主进程还可以通过 IPC（进程间通信）机制与渲染进程进行通信。\n\n* 渲染进程是 Electron 应用程序中的 Web 页面所在的进程，每个页面都会对应一个渲染进程。渲染进程可以使用 HTML、CSS 和 JavaScript 等技术来构建用户界面，并且可以通过 JavaScript 访问底层系统资源，例如打印机、摄像头和本地存储等。渲染进程通常是一个 Chromium 渲染引擎进程，它提供了一组标准的 Web API，可以与页面进行交互。\n\n在 Electron 应用程序中，主进程和渲染进程之间采用 IPC 机制进行通信。主进程可以向渲染进程发送消息，也可以接收来自渲染进程的消息。渲染进程可以通过 IPC 机制请求主进程执行特定的任务，例如读取文件或访问系统资源。这种分离的设计使得 Electron 应用程序可以充分利用 Web 技术的优势，同时又保持了对底层系统资源的访问能力。",
    "level": 1.5,
    "status": 2,
    "appId": 7,
    "createAt": "2023-05-20T01:05:37.000Z",
    "updateAt": "2023-05-20T20:50:16.000Z",
    "updateUserId": 11,
    "isCollected": false,
    "currentIndex": 380,
    "prev": "073219e8-a8df-4ccd-9fc8-fd0dfd9e7c35",
    "next": "f1502312-3ac7-4089-b306-f64c301b7dd4"
  },
  "post": {
    "exerciseKey": "bce3670f-ad2c-4b8f-bd0a-f3448eabc84f",
    "category": "QA",
    "title": "Electron 中的主进程和渲染进程分别是什么？",
    "level": 1.5,
    "updateAt": "2023-05-20T20:50:16+00:00"
  },
  "tag": {
    "id": 74,
    "tagName": "跨端技术",
    "type": "1",
    "exerciseCount": 11
  }
}