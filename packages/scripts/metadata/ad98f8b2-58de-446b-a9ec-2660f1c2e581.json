{
  "data": {
    "id": 2417,
    "exerciseKey": "ad98f8b2-58de-446b-a9ec-2660f1c2e581",
    "category": "QA",
    "renderType": "md",
    "title": "为什么 SPA 应用都会提供一个 hash 路由，好处是什么？",
    "desc": "",
    "options": "",
    "explanation": "单页应用（SPA）提供 hash 路由的原因主要涉及到历史记录管理和页面状态的保存。\n\n以下是使用 hash 路由的优点：\n\n### **1. **浏览器兼容性**\n\n- **历史记录支持**：Hash 路由利用 URL 中的 `#`（哈希标记）来管理页面状态。这种方法在所有现代浏览器中都得到支持，即使是在旧版浏览器中也能正常工作，因为哈希部分不会引发浏览器的页面重新加载。\n  \n### **2. **无需服务器配置**\n\n- **避免服务器配置问题**：Hash 路由不会发送 HTTP 请求到服务器，只是在客户端进行路由解析，因此不需要额外配置服务器来处理路由。这减少了服务器的复杂性，并避免了在服务器端处理路由相关的配置。\n\n### **3. **页面状态管理**\n\n- **维护状态**：Hash 路由允许在 URL 中嵌入应用状态信息，使得页面在刷新或重新加载时可以恢复到之前的状态。例如，`/page#section` 可以表示应用的不同部分，用户刷新页面时，应用会自动跳转到对应的状态或部分。\n\n### **4. **前进和后退功能**\n\n- **浏览器导航**：使用 hash 路由时，浏览器的前进和后退按钮能够正常工作，用户可以在不同的状态之间进行导航，而不需要页面重新加载。这提供了更好的用户体验和页面流畅性。\n\n### **5. **简化 URL 管理**\n\n- **简化 URL 管理**：通过 hash 路由可以简单地在 URL 中存储状态，而不需要处理复杂的 URL 解析和服务器端重定向。这使得应用程序在开发过程中更容易管理和调试。\n\n### 示例\n\n- **Hash 路由的 URL 示例**：\n  ```plaintext\n  http://example.com/#/home\n  http://example.com/#/profile/123\n  ```\n\n- **相应的 JavaScript 路由处理**：\n  ```javascript\n  window.addEventListener('hashchange', function() {\n    const hash = window.location.hash;\n    // 根据 hash 值更新应用的视图或状态\n  });\n  ```",
    "pivot": "",
    "vipLimit": 1,
    "level": 2.5,
    "appId": 7,
    "createAt": "2024-08-13T08:30:26.000Z",
    "updateAt": "2024-09-02T01:28:41.000Z",
    "isCollected": false,
    "currentIndex": 222,
    "filterTotalNum": 1487,
    "prev": "dad0b661-a4d7-486d-87dd-d17ba262b39b",
    "next": "93c12e43-114e-41b0-9515-5c13e5bf3e0b"
  },
  "post": {
    "exerciseKey": "ad98f8b2-58de-446b-a9ec-2660f1c2e581",
    "category": "QA",
    "title": "为什么 SPA 应用都会提供一个 hash 路由，好处是什么？",
    "level": 2.5,
    "createAt": "2024-08-13T08:30:26+00:00",
    "updateAt": "2024-09-02T01:28:41+00:00"
  },
  "tag": {
    "id": 28,
    "tagName": "工程化",
    "type": "1",
    "exerciseCount": 58
  }
}