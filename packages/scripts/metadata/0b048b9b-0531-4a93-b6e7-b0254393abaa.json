{
  "data": {
    "id": 649,
    "exerciseKey": "0b048b9b-0531-4a93-b6e7-b0254393abaa",
    "category": "QA",
    "renderType": "md",
    "title": "说说你对 typescript 的理解？与 javascript 的区别？",
    "desc": null,
    "options": null,
    "explanation": "## 一、是什么\n\n`TypeScript` 是 `JavaScript` 的类型的超集，支持`ES6`语法，支持面向对象编程的概念，如类、接口、继承、泛型等\n\n> 超集，不得不说另外一个概念，子集，怎么理解这两个呢，举个例子，如果一个集合A里面的的所有元素集合B里面都存在，那么我们可以理解集合B是集合A的超集，集合A为集合B的子集\n\n ![](https://static.ecool.fun//article/f9a27d35-579d-44b5-abd6-7c82021934cc.png)\n\n其是一种静态类型检查的语言，提供了类型注解，在代码编译阶段就可以检查出数据类型的错误\n\n同时扩展了` JavaScript` 的语法，所以任何现有的` JavaScript` 程序可以不加改变的在 `TypeScript` 下工作\n\n为了保证兼容性，`typescript`在编译阶段需要编译器编译成纯`Javascript`来运行，是为大型应用之开发而设计的语言，如下：\n\n`tsx`文件如下：\n\n```tsx\nconst hello : string = \"Hello World!\"\nconsole.log(hello)\n```\n\n编译文件后：\n\n```js\nconst hello = \"Hello World!\"\nconsole.log(hello)\n```\n\n## 二、特性\n\n`typescript`的特性主要有如下：\n\n- **类型批注和编译时类型检查** ：在编译时批注变量类型\n- **类型推断**：ts中没有批注变量类型会自动推断变量的类型\n- **类型擦除**：在编译过程中批注的内容和接口会在运行时利用工具擦除\n- **接口**：ts中用接口来定义对象类型\n- **枚举**：用于取值被限定在一定范围内的场景\n- **Mixin**：可以接受任意类型的值\n- **泛型编程**：写代码时使用一些以后才指定的类型\n- **名字空间**：名字只在该区域内有效，其他区域可重复使用该名字而不冲突\n- **元组**：元组合并了不同类型的对象，相当于一个可以装不同类型数据的数组\n- ...\n\n### 类型批注\n\n通过类型批注提供在编译时启动类型检查的静态类型，这是可选的，而且可以忽略而使用`JavaScript`常规的动态类型\n\n```tsx\nfunction Add(left: number, right: number): number {\n return left + right;\n}\n```\n\n\n对于基本类型的批注是`number`、`bool`和`string`，而弱或动态类型的结构则是`any`类型\n\n\n\n### 类型推断\n\n当类型没有给出时，TypeScript编译器利用类型推断来推断类型，如下：\n\n```ts\nlet str = 'string'\n```\n\n变量`str`被推断为字符串类型，这种推断发生在初始化变量和成员，设置默认参数值和决定函数返回值时\n\n如果由于缺乏声明而不能推断出类型，那么它的类型被视作默认的动态`any`类型\n\n\n\n### 接口\n\n接口简单来说就是用来描述对象的类型 数据的类型有`number`、` null`、` string`等数据格式，对象的类型就是用接口来描述的\n\n```tsx\ninterface Person {\n    name: string;\n    age: number;\n}\n\nlet tom: Person = {\n    name: 'Tom',\n    age: 25\n};\n```\n\n\n\n## 三、区别\n\n- TypeScript 是 JavaScript 的超集，扩展了 JavaScript 的语法\n- TypeScript 可处理已有的 JavaScript 代码，并只对其中的 TypeScript 代码进行编译\n- TypeScript 文件的后缀名 .ts （.ts，.tsx，.dts），JavaScript 文件是 .js\n- 在编写 TypeScript 的文件的时候就会自动编译成 js 文件\n\n更多的区别如下图所示：\n\n ![](https://static.ecool.fun//article/3e1fec86-cc9a-435a-8fe7-a3906042df1b.png)\n",
    "level": 2,
    "status": 2,
    "appId": 7,
    "createAt": "2021-10-24T03:43:31.000Z",
    "updateAt": "2024-01-25T19:24:50.000Z",
    "updateUserId": 11,
    "isCollected": false,
    "currentIndex": 66,
    "prev": "190f1c7f-4fb5-4fb1-bb7c-f2cc977d50d8",
    "next": "cb0fc1b3-29a9-4f1a-b350-ec50276e5bdc"
  },
  "post": {
    "exerciseKey": "0b048b9b-0531-4a93-b6e7-b0254393abaa",
    "category": "QA",
    "title": "说说你对 typescript 的理解？与 javascript 的区别？",
    "level": 2,
    "updateAt": "2024-01-25T19:24:50+00:00"
  },
  "tag": {
    "id": 19,
    "tagName": "Typescript",
    "type": "1",
    "exerciseCount": 46
  }
}