{
  "data": {
    "id": 1631,
    "exerciseKey": "41c2b7e0-3ab2-4a94-8017-1804b0ddf868",
    "category": "QA",
    "renderType": "md",
    "title": "【Promise第39题】下面代码的输出是什么？",
    "desc": "```js\nconst async1 = async () => {\n  console.log('async1');\n  setTimeout(() => {\n    console.log('timer1')\n  }, 2000)\n  await new Promise(resolve => {\n    console.log('promise1')\n  })\n  console.log('async1 end')\n  return 'async1 success'\n} \nconsole.log('script start');\nasync1().then(res => console.log(res));\nconsole.log('script end');\nPromise.resolve(1)\n  .then(2)\n  .then(Promise.resolve(3))\n  .catch(4)\n  .then(res => console.log(res))\nsetTimeout(() => {\n  console.log('timer2')\n}, 1000)\n\n```",
    "options": null,
    "explanation": "## 解析\n\n需要注意的点：\n\n* async函数中await的`new Promise`要是没有返回值的话则不执行后面的内容\n* .then函数中的参数期待的是函数，如果不是函数的话会发生透传\n* 注意定时器的延迟时间\n\n## 结果\n\n```\n'script start'\n'async1'\n'promise1'\n'script end'\n1\n'timer2'\n'timer1'\n\n```",
    "level": 4,
    "status": 2,
    "appId": 7,
    "createAt": "2022-01-09T15:21:20.000Z",
    "updateAt": "2022-01-09T23:24:11.000Z",
    "updateUserId": 11,
    "isCollected": false,
    "currentIndex": 643,
    "prev": "dec780c4-3610-4673-b12f-add388ceec10",
    "next": "570eed0a-2340-4c59-a6c0-967db6a7dc48"
  },
  "post": {
    "exerciseKey": "41c2b7e0-3ab2-4a94-8017-1804b0ddf868",
    "category": "QA",
    "title": "【Promise第39题】下面代码的输出是什么？",
    "level": 4,
    "updateAt": "2022-01-09T23:24:11+00:00"
  },
  "tag": {
    "id": 10,
    "tagName": "JavaScript",
    "type": "1",
    "exerciseCount": 322
  }
}
