{
  "data": {
    "id": 2649,
    "exerciseKey": "cc4f1e33-57aa-487b-9bac-6b16ac8457aa",
    "category": "QA",
    "renderType": "md",
    "title": "webpack 是如何给 web 应用注入环境变量的，说说它的原理",
    "desc": "",
    "options": "",
    "explanation": "Webpack 注入环境变量的原理主要通过插件和内置的定义机制来实现。具体步骤如下：\n\n### **1. 使用 `DefinePlugin` 插件**\n\nWebpack 的 `DefinePlugin` 插件可以用来创建全局常量，这些常量会在编译时替换代码中的变量。这是注入环境变量的常见方式。\n\n#### **配置步骤**\n\n1. **安装 Webpack**：\n   ```bash\n   npm install webpack --save-dev\n   ```\n\n2. **配置 `DefinePlugin`**：\n   在 Webpack 配置文件 (`webpack.config.js`) 中使用 `DefinePlugin` 插件来定义环境变量。\n\n   ```javascript\n   const webpack = require('webpack');\n   \n   module.exports = {\n     // 其他配置\n     plugins: [\n       new webpack.DefinePlugin({\n         'process.env.NODE_ENV': JSON.stringify(process.env.NODE_ENV),\n         'process.env.API_URL': JSON.stringify(process.env.API_URL),\n       })\n     ]\n   };\n   ```\n\n   - `process.env.NODE_ENV` 和 `process.env.API_URL` 在代码中将被替换为对应的环境变量值。\n\n3. **在代码中使用**：\n   ```javascript\n   console.log('API URL:', process.env.API_URL);\n   ```\n\n   在构建时，`process.env.API_URL` 会被替换为配置中的实际值。\n\n### **2. 环境变量的定义**\n\n环境变量通常通过操作系统、CI/CD 环境、或 `.env` 文件进行定义。在开发过程中，可以通过 `cross-env` 等工具来设置环境变量：\n\n#### **设置环境变量**\n\n1. **安装 `cross-env`**：\n   ```bash\n   npm install cross-env --save-dev\n   ```\n\n2. **在 `package.json` 的 `scripts` 部分配置**：\n   ```json\n   \"scripts\": {\n     \"start\": \"cross-env NODE_ENV=development webpack serve\",\n     \"build\": \"cross-env NODE_ENV=production webpack\"\n   }\n   ```\n\n   - `cross-env` 用于在不同操作系统上统一设置环境变量。\n\n### **3. 使用 `dotenv` 插件（可选）**\n\n为了更方便地管理环境变量，特别是在开发环境中，可以使用 `dotenv` 插件将 `.env` 文件中的变量加载到 `process.env` 中。\n\n#### **配置步骤**\n\n1. **安装 `dotenv`**：\n   ```bash\n   npm install dotenv --save\n   ```\n\n2. **在 Webpack 配置中加载环境变量**：\n   ```javascript\n   const path = require('path');\n   const webpack = require('webpack');\n   require('dotenv').config();\n   \n   module.exports = {\n     // 其他配置\n     plugins: [\n       new webpack.DefinePlugin({\n         'process.env.NODE_ENV': JSON.stringify(process.env.NODE_ENV),\n         'process.env.API_URL': JSON.stringify(process.env.API_URL),\n       })\n     ]\n   };\n   ```\n\n3. **创建 `.env` 文件**：\n   ```plaintext\n   NODE_ENV=development\n   API_URL=https://api.example.com\n   ```",
    "pivot": "",
    "vipLimit": 1,
    "level": 3,
    "appId": 7,
    "createAt": "2024-08-13T08:30:36.000Z",
    "updateAt": "2024-08-15T09:23:02.000Z",
    "isCollected": false,
    "currentIndex": 109,
    "filterTotalNum": 1487,
    "prev": "3e97e4b8-dda4-4e5b-8fd9-136fe1e95eb4",
    "next": "6576edd9-ceb6-4871-8e33-008fdad7ef80"
  },
  "post": {
    "exerciseKey": "cc4f1e33-57aa-487b-9bac-6b16ac8457aa",
    "category": "QA",
    "title": "webpack 是如何给 web 应用注入环境变量的，说说它的原理",
    "level": 3,
    "createAt": "2024-08-13T08:30:36+00:00",
    "updateAt": "2024-08-15T09:23:02+00:00"
  },
  "tag": {
    "id": 28,
    "tagName": "工程化",
    "type": "1",
    "exerciseCount": 58
  }
}