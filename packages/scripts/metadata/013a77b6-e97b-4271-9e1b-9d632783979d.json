{
  "data": {
    "id": 373,
    "exerciseKey": "013a77b6-e97b-4271-9e1b-9d632783979d",
    "category": "QA",
    "renderType": "html",
    "title": "介绍下WebSocket",
    "desc": null,
    "options": null,
    "explanation": "<h3 style=\"text-align:left;text-indent:2em;\" data-id=\"heading-82\">1. WebSocket 是什么</h3><p style=\"text-align:left;text-indent:2em;\">WebSocket是HTML5提供的一种浏览器与服务器进行<strong>全双工通讯</strong>的网络技术，属于应用层协议。它基于TCP传输协议，并复用HTTP的握手通道。浏览器和服务器只需要完成一次握手，两者之间就直接可以创建持久性的连接， 并进行双向数据传输。</p><p style=\"text-align:left;text-indent:2em;\">WebSocket 的出现就解决了半双工通信的弊端。它最大的特点是：<strong>服务器可以向客户端主动推动消息，客户端也可以主动向服务器推送消息。</strong></p><p style=\"text-align:left;text-indent:2em;\"><strong>WebSocket原理</strong> ：客户端向 WebSocket 服务器通知（notify）一个带有所有接收者ID（recipients IDs）的事件（event），服务器接收后立即通知所有活跃的（active）客户端，只有ID在接收者ID序列中的客户端才会处理这个事件。</p><p></p><h3 style=\"text-align:left;text-indent:2em;\" data-id=\"heading-83\">2. WebSocket 特点</h3><ul><li>支持双向通信，实时性更强</li><li>可以发送文本，也可以发送二进制数据‘’</li><li>建立在TCP协议之上，服务端的实现比较容易</li><li>数据格式比较轻量，性能开销小，通信高效</li><li>没有同源限制，客户端可以与任意服务器通信</li><li>协议标识符是ws（如果加密，则为wss），服务器网址就是 URL</li><li>与 HTTP 协议有着良好的兼容性。默认端口也是80和443，并且握手阶段采用 HTTP 协议，因此握手时不容易屏蔽，能通过各种 HTTP 代理服务器。</li></ul>",
    "level": 2,
    "status": 2,
    "appId": 7,
    "createAt": "2021-07-04T15:59:38.000Z",
    "updateAt": "2021-07-07T00:09:54.000Z",
    "updateUserId": 11,
    "isCollected": false,
    "currentIndex": 964,
    "prev": "a951563c-7c0f-47bd-9a32-f46a8cfe4585",
    "next": "2ac9dc59-86fe-4c0c-9e5e-93a5d92b8513"
  },
  "post": {
    "exerciseKey": "013a77b6-e97b-4271-9e1b-9d632783979d",
    "category": "QA",
    "title": "介绍下WebSocket",
    "level": 2,
    "updateAt": "2021-07-07T00:09:54+00:00"
  },
  "tag": {
    "id": 16,
    "tagName": "计算机网络",
    "type": "1",
    "exerciseCount": 72
  }
}
