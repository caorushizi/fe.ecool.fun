{
  "data": {
    "id": 2556,
    "exerciseKey": "af29b30f-fe4e-4cbf-99cc-c1886badda2a",
    "category": "QA",
    "renderType": "md",
    "title": "说说对 new Function 的理解",
    "desc": "",
    "options": "",
    "explanation": "`new Function` 是 JavaScript 中创建函数的一种方式，它允许动态地生成和执行函数。与 `eval` 不同，`new Function` 主要用于创建函数，而不是执行任意的 JavaScript 代码。它接受一个或多个参数，最后一个参数是函数体，其余参数是函数的参数列表。\n\n### **基本语法**\n\n```javascript\nnew Function ([arg1, arg2, ..., argN], functionBody)\n```\n\n- **`arg1, arg2, ..., argN`**：函数的参数列表。\n- **`functionBody`**：函数体，是一个包含函数代码的字符串。\n\n### **示例**\n\n```javascript\nconst add = new Function('a', 'b', 'return a + b;');\nconsole.log(add(1, 2));  // 输出: 3\n```\n\n### **特性**\n\n1. **动态函数创建**：\n   - `new Function` 允许在运行时动态生成函数。这对于创建动态代码或在不知道函数具体内容的情况下生成函数可能有用。\n\n2. **作用域**：\n   - 使用 `new Function` 创建的函数不具有访问创建它的上下文中的变量。它们只能访问全局变量。\n\n3. **字符串参数**：\n   - 函数体是作为字符串传递的，这意味着无法在函数体中使用局部作用域内的变量。\n\n4. **安全性**：\n   - 虽然 `new Function` 比 `eval` 更受控制，但仍然存在安全隐患，特别是当函数体包含来自不可信来源的内容时。\n\n5. **性能**：\n   - `new Function` 会影响 JavaScript 引擎的优化，因为它需要解析和执行动态生成的代码。性能可能会受到影响。\n\n### **对比 `eval`**\n\n- **`eval`**：执行任意代码，并可以影响创建它的上下文的作用域。\n- **`new Function`**：创建一个新的函数，它不访问创建它的上下文中的局部变量，只能访问全局变量。\n\n### **例子：**\n\n```javascript\n// 创建一个计算乘积的函数\nconst multiply = new Function('x', 'y', 'return x * y;');\nconsole.log(multiply(4, 5));  // 输出: 20\n\n// 创建一个函数，访问全局变量\nvar globalVar = 10;\nconst addGlobal = new Function('return globalVar + 5;');\nconsole.log(addGlobal());  // 输出: 15\n```",
    "pivot": "",
    "vipLimit": 1,
    "level": 2,
    "appId": 7,
    "createAt": "2024-08-13T08:30:31.000Z",
    "updateAt": "2024-08-15T23:12:15.000Z",
    "isCollected": false,
    "currentIndex": 161,
    "filterTotalNum": 1487,
    "prev": "ca572564-4721-46ed-bc87-680d7ff47044",
    "next": "d50af40c-df41-4601-9935-c6aa3c89e3d7"
  },
  "post": {
    "exerciseKey": "af29b30f-fe4e-4cbf-99cc-c1886badda2a",
    "category": "QA",
    "title": "说说对 new Function 的理解",
    "level": 2,
    "createAt": "2024-08-13T08:30:31+00:00",
    "updateAt": "2024-08-15T23:12:15+00:00"
  },
  "tag": {
    "id": 10,
    "tagName": "JavaScript",
    "type": "1",
    "exerciseCount": 379
  }
}