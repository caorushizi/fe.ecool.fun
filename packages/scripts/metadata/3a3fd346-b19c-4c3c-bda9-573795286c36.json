{
  "data": {
    "id": 2782,
    "exerciseKey": "3a3fd346-b19c-4c3c-bda9-573795286c36",
    "category": "QA",
    "renderType": "md",
    "title": "一个 tcp 连接能发几个 http 请求？",
    "desc": "",
    "options": "",
    "explanation": "一个 TCP 连接可以发多个 HTTP 请求，具体取决于使用的 HTTP 版本：\n\n### **1. HTTP/1.0**\n\n- **每个请求独立**：HTTP/1.0 默认使用非持久连接（每个请求都需要建立新的 TCP 连接）。因此，每个 HTTP 请求需要一个新的 TCP 连接。\n\n### **2. HTTP/1.1**\n\n- **持久连接**：HTTP/1.1 引入了持久连接（Connection: keep-alive），使得一个 TCP 连接可以发送多个 HTTP 请求和响应。在默认情况下，一个 TCP 连接可以支持多个 HTTP 请求，直到连接被关闭。\n- **并发请求**：HTTP/1.1 还支持管道化（pipelining），允许在等待响应的同时发送多个请求。但是，管道化有一些限制，如请求顺序和响应顺序。\n\n### **3. HTTP/2**\n\n- **多路复用**：HTTP/2 使用多路复用（multiplexing）技术，允许多个请求和响应在一个 TCP 连接上并发进行，而不会阻塞彼此。每个请求和响应通过流（stream）进行管理，可以有效地减少延迟和提高性能。\n\n### **4. HTTP/3**\n\n- **基于 QUIC 协议**：HTTP/3 使用 QUIC 协议，它在用户数据报协议（UDP）上实现了类似于 HTTP/2 的多路复用功能。它在一个连接上支持多个请求和响应，进一步优化了网络性能。\n",
    "pivot": "",
    "vipLimit": 1,
    "level": 2,
    "appId": 7,
    "createAt": "2024-08-13T08:30:41.000Z",
    "updateAt": "2024-08-14T20:00:12.000Z",
    "isCollected": false,
    "currentIndex": 53,
    "filterTotalNum": 1487,
    "prev": "ea2fac70-cd8c-47ad-997b-331cac76af38",
    "next": "a0a7f06f-8aa3-4408-8a40-87c33bd3608f"
  },
  "post": {
    "exerciseKey": "3a3fd346-b19c-4c3c-bda9-573795286c36",
    "category": "QA",
    "title": "一个 tcp 连接能发几个 http 请求？",
    "level": 2,
    "createAt": "2024-08-13T08:30:41+00:00",
    "updateAt": "2024-08-14T20:00:12+00:00"
  },
  "tag": {
    "id": 16,
    "tagName": "计算机网络",
    "type": "1",
    "exerciseCount": 95
  }
}