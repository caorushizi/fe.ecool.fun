{
  "data": {
    "id": 1756,
    "exerciseKey": "77ad8b60-34a2-4f8c-8fcf-c86db1a57e3b",
    "category": "QA",
    "renderType": "md",
    "title": "翻转二叉树",
    "desc": "给你一棵二叉树的根节点 `root` ，翻转这棵二叉树，并返回其根节点。\n\n**示例 1：**\n\n![](https://assets.leetcode.com/uploads/2021/03/14/invert1-tree.jpg)\n\n\n**输入：** root = [4,2,7,1,3,6,9]\n\n**输出：** [4,7,2,9,6,3,1]\n\n**示例 2：**\n\n![](https://assets.leetcode.com/uploads/2021/03/14/invert2-tree.jpg)\n\n\n**输入：** root = [2,1,3]\n\n**输出：** [2,3,1]\n\n**示例 3：**\n\n\n**输入：** root = []\n\n**输出：** []\n\n**提示：**\n\n* 树中节点数目范围在 `[0, 100]` 内\n* `-100 <= Node.val <= 100`\n\n```js\n/**\n * Definition for a binary tree node.\n * function TreeNode(val, left, right) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.left = (left===undefined ? null : left)\n *     this.right = (right===undefined ? null : right)\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {TreeNode}\n */\nvar invertTree = function(root) {\n\n};\n```",
    "options": null,
    "explanation": "**思路与算法**\n\n这是一道很经典的二叉树问题。显然，我们从根节点开始，递归地对树进行遍历，并从叶子节点先开始翻转。如果当前遍历到的节点 root 的左右两棵子树都已经翻转，那么我们只需要交换两棵子树的位置，即可完成以 root 为根节点的整棵子树的翻转。\n\n**代码**\n\n```JavaScript\nvar invertTree = function(root) {\n    if (root === null) {\n        return null;\n    }\n    const left = invertTree(root.left);\n    const right = invertTree(root.right);\n    root.left = right;\n    root.right = left;\n    return root;\n};\n```\n\n**复杂度分析**\n\n- 时间复杂度：O(N)，其中 N 为二叉树节点的数目。我们会遍历二叉树中的每一个节点，对每个节点而言，我们在常数时间内交换其两棵子树。\n\n- 空间复杂度：O(N)。使用的空间由递归栈的深度决定，它等于当前节点在二叉树中的高度。在平均情况下，二叉树的高度与节点个数为对数关系，即 O(log N)。而在最坏情况下，树形成链状，空间复杂度为 O(N)。\n\n> 本答案由“前端面试题宝典”收集整理，PC端访问请前往： https://fe.ecool.fun/ ",
    "level": 1,
    "status": 2,
    "appId": 7,
    "createAt": "2022-04-10T02:10:52.000Z",
    "updateAt": "2022-04-10T12:03:30.000Z",
    "updateUserId": 11,
    "isCollected": false,
    "currentIndex": 574,
    "prev": "2022f7f8-f3ec-4f8a-9971-9d5572d3e106",
    "next": "e3a135b5-e6d4-4f1f-8e02-0c977e2ce768"
  },
  "post": {
    "exerciseKey": "77ad8b60-34a2-4f8c-8fcf-c86db1a57e3b",
    "category": "QA",
    "title": "翻转二叉树",
    "level": 1,
    "updateAt": "2022-04-10T12:03:30+00:00"
  },
  "tag": {
    "id": 31,
    "tagName": "leetcode",
    "type": "1",
    "exerciseCount": 37
  }
}
