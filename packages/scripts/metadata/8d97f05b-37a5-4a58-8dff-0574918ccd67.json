{
  "data": {
    "id": 1645,
    "exerciseKey": "8d97f05b-37a5-4a58-8dff-0574918ccd67",
    "category": "QA",
    "renderType": "md",
    "title": "useEffect 与 useLayoutEffect 有什么区别？",
    "desc": null,
    "options": null,
    "explanation": "## 共同点\n\n* 运用效果： useEffect 与 useLayoutEffect 两者都是用于处理副作用，这些副作用包括改变 DOM、设置订阅、操作定时器等。在函数组件内部操作副作用是不被允许的，所以需要使用这两个函数去处理。\n* 使用方式： useEffect 与 useLayoutEffect 两者底层的函数签名是完全一致的，都是调用的 mountEffectImpl方法，在使用上也没什么差异，基本可以直接替换。\n\n## 不同点\n\n* 使用场景： useEffect 在 React 的渲染过程中是被异步调用的，用于绝大多数场景；而 useLayoutEffect 会在所有的 DOM 变更之后同步调用，主要用于处理 DOM 操作、调整样式、避免页面闪烁等问题。也正因为是同步处理，所以需要避免在 useLayoutEffect 做计算量较大的耗时任务从而造成阻塞。\n* 使用效果： useEffect是按照顺序执行代码的，改变屏幕像素之后执行（先渲染，后改变DOM），当改变屏幕内容时可能会产生闪烁；useLayoutEffect是改变屏幕像素之前就执行了（会推迟页面显示的事件，先改变DOM后渲染），不会产生闪烁。useLayoutEffect总是比useEffect先执行。\n\n在未来的趋势上，两个 API 是会长期共存的，暂时没有删减合并的计划，需要开发者根据场景去自行选择。React 团队的建议非常实用，如果实在分不清，先用 useEffect，一般问题不大；如果页面有异常，再直接替换为 useLayoutEffect 即可。",
    "level": 2.5,
    "status": 2,
    "appId": 7,
    "createAt": "2022-01-16T14:58:54.000Z",
    "updateAt": "2022-01-16T23:27:43.000Z",
    "updateUserId": 11,
    "isCollected": false,
    "currentIndex": 633,
    "prev": "321f6c36-eff4-4fc4-8a86-c989bb1a2779",
    "next": "559aab33-1ef2-4fb1-bdba-2233423fb845"
  },
  "post": {
    "exerciseKey": "8d97f05b-37a5-4a58-8dff-0574918ccd67",
    "category": "QA",
    "title": "useEffect 与 useLayoutEffect 有什么区别？",
    "level": 2.5,
    "updateAt": "2022-01-16T23:27:43+00:00"
  },
  "tag": {
    "id": 13,
    "tagName": "React.js",
    "type": "1",
    "exerciseCount": 101
  }
}
