{
  "data": {
    "id": 1552,
    "exerciseKey": "f43ed53b-220f-4583-86fe-974e880090e8",
    "category": "QA",
    "renderType": "md",
    "title": "原码、反码和补码分别是什么？",
    "desc": null,
    "options": null,
    "explanation": "原码是计算机中对数字的二进制的定点表示方法，最高位表示符号位，其余位表示数值位。优点是易于分辨，缺点是不能够直接参与运算。\n\n正数的反码和其原码一样；负数的反码，符号位为1，数值部分按原码取反。\n\n如 [+7]原 = 00000111，[+7]反 = 00000111； [-7]原 = 10000111，[-7]反 = 11111000。\n\n正数的补码和其原码一样；负数的补码为其反码加1。\n\n例如 [+7]原 = 00000111，[+7]反 = 00000111，[+7]补 = 00000111；\n\n[-7]原 = 10000111，[-7]反 = 11111000，[-7]补 = 11111001\n\n之所以在计算机中使用补码来表示负数的原因是，这样可以将加法运算扩展到所有的数值计算上，因此在数字电路中我们只需要考虑加法器的设计就行了，而不用再为减法设置新的数字电路。",
    "level": 1,
    "status": 2,
    "appId": 7,
    "createAt": "2021-11-17T14:27:24.000Z",
    "updateAt": "2021-11-17T22:48:57.000Z",
    "updateUserId": 11,
    "isCollected": false,
    "currentIndex": 727,
    "prev": "aef19252-da7d-447d-a9c5-3eb0d191901d",
    "next": "dc584829-5c57-435d-9276-f971e479bd29"
  },
  "post": {
    "exerciseKey": "f43ed53b-220f-4583-86fe-974e880090e8",
    "category": "QA",
    "title": "原码、反码和补码分别是什么？",
    "level": 1,
    "updateAt": "2021-11-17T22:48:57+00:00"
  },
  "tag": {
    "id": 30,
    "tagName": "计算机基础",
    "type": "1",
    "exerciseCount": 16
  }
}