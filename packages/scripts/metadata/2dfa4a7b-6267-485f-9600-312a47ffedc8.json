{
  "data": {
    "id": 2367,
    "exerciseKey": "2dfa4a7b-6267-485f-9600-312a47ffedc8",
    "category": "QA",
    "renderType": "md",
    "title": "web 网页如何禁止别人移除水印",
    "desc": "",
    "options": "",
    "explanation": "\n## 防止DOM被删除\n\n为了防止水印被删除，可以利用 `MutationObserver API` 监听 DOM 变化。`MutationObserver` 可以监控 DOM 树的变化并触发回调函数。回调函数可以用于检测水印是否被移除，并采取相应的措施进行恢复。\n\n以下是一个示例代码，演示了如何使用 `MutationObserver` 监听 DOM 变化并检测水印的删除：\n\n```javascript\n// 目标节点\nconst targetNode = document.body;\n\n// 创建 MutationObserver 实例\nconst observer = new MutationObserver(mutationsList => {\n    mutationsList.forEach(mutation => {\n        // 检查是否有子节点被删除\n        if (mutation.removedNodes.length > 0) {\n            // 检查被删除的节点是否为水印\n            // 如果是，则重新插入水印元素\n            // targetNode.appendChild(watermarkElement);\n        }\n    });\n});\n\n// 配置 MutationObserver\nconst config = { childList: true, subtree: true };\n\n// 开始观察目标节点\nobserver.observe(targetNode, config);\n```\n\n在上述代码中，我们创建了一个 `MutationObserver` 实例，并通过 `observe` 方法绑定到目标节点。在回调函数中，使用 `mutation.removedNodes` 检测子节点删除情况。如果发现水印被删除，可以在此处重新插入水印元素。\n\n需要注意的是，`MutationObserver` 是现代浏览器的特性，可能不兼容老旧浏览器。因此，实际应用中应考虑浏览器兼容性。\n\n此外，为了确保水印能迅速恢复，可以在检测到水印被删除时立即执行插入操作。\n\n## 防止DOM被隐藏\n\n除了防止DOM被删除，还要考虑DOM被隐藏的情况。\n\n要检测到水印DOM被设置为 `display: none` 隐藏，可以通过 `MutationObserver` 观察元素的属性变化，而不是仅仅关注子节点的删除。监听 `attributes` 类型的变化，以检测到 `display` 样式属性的改变。\n\n以下示例展示了如何监控 `display` 属性的变化：\n\n```javascript\n// 目标节点（假设水印元素是一个特定的节点）\nconst watermarkElement = document.querySelector('.watermark');\n\n// 创建 MutationObserver 实例\nconst observer = new MutationObserver(mutationsList => {\n    mutationsList.forEach(mutation => {\n        if (mutation.type === 'attributes' && mutation.attributeName === 'style') {\n            // 检查水印的 display 属性是否被设置为 none\n            if (getComputedStyle(watermarkElement).display === 'none') {\n                // 如果水印被隐藏，重新显示水印\n                watermarkElement.style.display = 'block';\n            }\n        }\n    });\n});\n\n// 配置 MutationObserver\nconst config = { attributes: true, subtree: true, attributeFilter: ['style'] };\n\n// 开始观察目标节点\nobserver.observe(document.body, config);\n```\n\n### 说明\n1. **目标节点**：在代码中，`watermarkElement` 代表水印元素。请确保选择器正确。\n2. **MutationObserver 实例**：观察属性变化 (`attributes`) 和特定的属性 `style`。\n3. **属性变化检测**：在回调函数中，使用 `getComputedStyle` 检查 `display` 属性的值。如果水印被设置为 `display: none`，则将其恢复为 `display: block`。\n",
    "pivot": "",
    "vipLimit": 1,
    "level": 4,
    "appId": 7,
    "createAt": "2024-08-13T08:30:22.000Z",
    "updateAt": "2024-09-09T13:16:22.000Z",
    "isCollected": false,
    "currentIndex": 249,
    "filterTotalNum": 1487,
    "prev": "cd57a5aa-c239-4cb2-b2b5-d0d6a49f80f3",
    "next": "ea1da4c7-c61e-4fc7-ba82-cf92277f8bdf"
  },
  "post": {
    "exerciseKey": "2dfa4a7b-6267-485f-9600-312a47ffedc8",
    "category": "QA",
    "title": "web 网页如何禁止别人移除水印",
    "level": 4,
    "createAt": "2024-08-13T08:30:22+00:00",
    "updateAt": "2024-09-09T13:16:22+00:00"
  },
  "tag": {
    "id": 75,
    "tagName": "场景题",
    "type": "1",
    "exerciseCount": 39
  }
}