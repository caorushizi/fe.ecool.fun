{
  "data": {
    "id": 1973,
    "exerciseKey": "0003100e-5f40-499e-9e00-8bbbc5e90976",
    "category": "QA",
    "renderType": "md",
    "title": "去除字符串中出现次数最少的字符，不改变原字符串的顺序。",
    "desc": "实现删除字符串中出现次数最少的字符，若出现次数最少的字符有多个，则把出现次数最少的字符都删除。输出删除这些单词后的字符串，字符串中其它字符保持原来的顺序。\n\n```js\n“ababac” —— “ababa”\n“aaabbbcceeff” —— “aaabbb”\n```",
    "options": null,
    "explanation": "可以通过以下步骤使用 JavaScript 去除字符串中出现次数最少的字符，同时不改变原字符串的顺序：\n\n1. 定义一个对象来存储每个字符出现的次数。\n\n2. 遍历字符串，将每个字符出现的次数保存到对象中。\n\n3. 找出出现次数最少的字符，并将其从对象中删除。\n\n4. 遍历字符串并根据存储的次数对象过滤出符合条件的字符。\n\n5. 将符合条件的字符拼接成新的字符串并返回。\n\n下面是代码示例：\n\n```javascript\nfunction removeLeastFrequentChar(str) {\n  // 定义存储每个字符出现次数的对象\n  const charMap = {};\n\n  // 遍历字符串并将每个字符出现的次数保存到对象中\n  for (let i = 0; i < str.length; i++) {\n    const char = str[i];\n    if (!charMap[char]) {\n      charMap[char] = 1;\n    } else {\n      charMap[char]++;\n    }\n  }\n\n  // 找出出现次数最少的字符，并将其从对象中删除\n  const minCount = Math.min(...Object.values(charMap));\n  for (const key in charMap) {\n    if (charMap.hasOwnProperty(key)) {\n      if (charMap[key] === minCount) {\n        delete charMap[key];\n      }\n    }\n  }\n\n  // 遍历字符串并根据存储的次数对象过滤出符合条件的字符\n  const filteredChars = [];\n  for (let i = 0; i < str.length; i++) {\n    const char = str[i];\n    if (charMap[char]) {\n      filteredChars.push(char);\n    }\n  }\n\n  // 将符合条件的字符拼接成新的字符串并返回\n  return filteredChars.join(\"\");\n}\n```",
    "pivot": "",
    "vipLimit": 0,
    "level": 1,
    "appId": 7,
    "createAt": "2023-05-15T13:20:39.000Z",
    "updateAt": "2024-07-22T11:39:49.000Z",
    "isCollected": false,
    "currentIndex": 416,
    "filterTotalNum": 1487,
    "prev": "903ad6ce-2c81-4d82-a356-536e4629cfa3",
    "next": "99dbb991-2615-4a8c-9374-73769803692d"
  },
  "post": {
    "exerciseKey": "0003100e-5f40-499e-9e00-8bbbc5e90976",
    "category": "QA",
    "title": "去除字符串中出现次数最少的字符，不改变原字符串的顺序。",
    "level": 1,
    "createAt": "2023-05-15T13:20:39+00:00",
    "updateAt": "2024-07-22T11:39:49+00:00"
  },
  "tag": {
    "id": 15,
    "tagName": "算法",
    "type": "1",
    "exerciseCount": 21
  }
}