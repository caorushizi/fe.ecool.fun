{
  "data": {
    "id": 1815,
    "exerciseKey": "7621c335-6645-4da0-bd71-cb81fe106f8f",
    "category": "QA",
    "renderType": "md",
    "title": "Object与Map有什么区别？",
    "desc": null,
    "options": null,
    "explanation": "### 概念\n\n*   Object\n\n在ECMAScript中，`Object`是一个特殊的对象。它本身是一个顶级对象，同时还是一个构造函数，可以通过它（如：`new Object()`）来创建一个对象。我们可以认为JavaScript中所有的对象都是`Object`的一个实例，对象可以用字面量的方法const obj = {}即可声明。  \n\n*   Map\n\n`Object`本质上是键值对的集合（Hash 结构），但是传统上只能用字符串当作键，这给它的使用带来了很大的限制。\n\n为了解决这个问题，`ES6` 提供了 `Map` 数据结构。它类似于对象，也是键值对的集合，但是“键”的范围不限于字符串，各种类型的值（包括对象）都可以当作键。\n\n也就是说，Object 结构提供了“字符串—值”的对应，Map 结构提供了“值—值”的对应，是一种更完善的 `Hash` 结构实现。如果你需要“键值对”的数据结构，Map 比 Object 更合适。\n\n通过 `const m = new Map();` 即可得到一个map实例。\n\n### 访问\n\nmap: 通过map.get(key)方法去属性, 不存在则返回undefined\n\nobject: 通过obj.a或者obj\\['a'\\]去访问一个属性, 不存在则返回undefined\n\n### 赋值\n\nmap: 通过map.set去设置一个值，key可以是任意类型\n\nobject: 通过object.a = 1或者object\\['a'\\] = 1，去赋值，key只能是字符串，数字或symbol\n\n### 删除\n\nmap: 通过map.delete去删除一个值，试图删除一个不存在的属性会返回false\n\nobject: 通过delete操作符才能删除对象的一个属性，诡异的是，即使对象不存在该属性，删除也返回true，当然可以通过**Reflect.deleteProperty(target, prop)** 删除不存在的属性还是会返回true。\n\n    var obj = {}; // undefined\n    delete obj.a // true\n\n### 大小\n\nmap: 通过map.size即可快速获取到内部元素的总个数\n\nobject: 需要通过Object.keys的转换才能将其转换为数组，再通过数组的length方法去获得或者使用Reflect.ownKeys(obj)也可以获取到keys的集合\n\n### 迭代\n\nmap: 拥有迭代器，可以通过`for-of`、`forEach`去直接迭代元素，而且遍历顺序是确定的\n\nobject: 并没有实现迭代器，需要自行实现，不实现只能通过for-in循环去迭代，遍历顺序是不确定的\n\n### 使用场景\n\n1.  如果只需要简单的存储key-value的数据，并且key不需要存储复杂类型的，直接用对象\n2.  如果该对象必须通过JSON转换的，则只能用对象，目前暂不支持Map\n3.  map的阅读性更好，所有操作都是通过api形式去调用，更有编程体验",
    "level": 1,
    "status": 2,
    "appId": 7,
    "createAt": "2022-05-18T01:16:32.000Z",
    "updateAt": "2022-10-30T10:53:48.000Z",
    "updateUserId": 11,
    "isCollected": false,
    "currentIndex": 468,
    "prev": "56056900-f049-488c-a973-9788cc708e7b",
    "next": "6100dbed-3600-470f-90b1-b1c6ef213a52"
  },
  "post": {
    "exerciseKey": "7621c335-6645-4da0-bd71-cb81fe106f8f",
    "category": "QA",
    "title": "Object与Map有什么区别？",
    "level": 1,
    "updateAt": "2022-10-30T10:53:48+00:00"
  },
  "tag": {
    "id": 10,
    "tagName": "JavaScript",
    "type": "1",
    "exerciseCount": 322
  }
}
