{
  "data": {
    "id": 12,
    "exerciseKey": "a4b9ded4-e430-4df9-8857-4d870e9c35cc",
    "category": "Choice",
    "renderType": "md",
    "title": "输出是什么？",
    "desc": "```javascript\nfunction sayHi() {\n  console.log(name)\n  console.log(age)\n  var name = 'Lydia'\n  let age = 21\n}\n\nsayHi()\n```",
    "options": "{\"options\":[\"Lydia 和 undefined\",\"Lydia 和 ReferenceError\",\"ReferenceError 和 21\",\"undefined 和 ReferenceError\"],\"isMulti\":false,\"answer\":[3]}",
    "explanation": "在函数内部，我们首先通过 `var` 关键字声明了 `name` 变量。这意味着变量被提升了（内存空间在创建阶段就被设置好了），直到程序运行到定义变量位置之前默认值都是 `undefined`。因为当我们打印 `name` 变量时还没有执行到定义变量的位置，因此变量的值保持为 `undefined`。\n\n通过 `let` 和 `const` 关键字声明的变量也会提升，但是和 `var` 不同，它们**不会被初始化**。在我们声明（初始化）之前是不能访问它们的。这个行为被称之为暂时性死区。当我们试图在声明之前访问它们时，JavaScript 将会抛出一个 `ReferenceError` 错误。",
    "level": 0.5,
    "status": 2,
    "appId": 7,
    "createAt": "2021-07-02T15:33:04.000Z",
    "updateAt": "2021-07-05T23:17:55.000Z",
    "updateUserId": 11,
    "isCollected": false,
    "currentIndex": 974,
    "prev": "5f0460dc-84ca-425e-8629-7aec874d024c",
    "next": "b132d075-c2fe-4b83-8c74-444733612862"
  },
  "post": {
    "exerciseKey": "a4b9ded4-e430-4df9-8857-4d870e9c35cc",
    "category": "Choice",
    "title": "输出是什么？",
    "level": 0.5,
    "updateAt": "2021-07-05T23:17:55+00:00"
  },
  "tag": {
    "id": 32,
    "tagName": "选择题",
    "type": "1",
    "exerciseCount": 151
  }
}