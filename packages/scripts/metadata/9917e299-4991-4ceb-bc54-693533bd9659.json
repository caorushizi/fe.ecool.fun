{
  "data": {
    "id": 2014,
    "exerciseKey": "9917e299-4991-4ceb-bc54-693533bd9659",
    "category": "QA",
    "renderType": "md",
    "title": "如果在 useEffect 的第一个参数中 return 了一个函数，那么第二个参数分别传空数组和传依赖数组，该函数分别是在什么时候执行？",
    "desc": null,
    "options": null,
    "explanation": "在 React 中，当 useEffect 第一个参数中返回一个函数时，这个函数会在组件卸载时执行。当传递空数组 [] 时，useEffect 只会在组件挂载和卸载时调用一次，因此返回的函数也只会在组件卸载时执行一次。\n\n```js\nuseEffect(() => {\n  // 在挂载时执行\n\n  return () => {\n    // 在卸载时执行\n  }\n}, []);\n```\n\n当传递依赖数组时，useEffect 会在组件挂载和依赖项更新时调用，因此返回的函数也会随着组件更新而执行。每次组件重新渲染时都会检查依赖项列表是否有变化，如果有变化则重新执行 useEffect，并在执行新的 useEffect 前先执行上一个 useEffect 返回的函数（如果存在）。\n\n```js\nuseEffect(() => {\n  // 在挂载、依赖列表变化及卸载时执行\n\n  return () => {\n    // 在下一次 useEffect 执行前执行\n  }\n}, [dep1, dep2]);\n```\n\n需要注意，这个函数的作用通常是清除 effect 留下的副作用，例如取消定时器、取消订阅等等。在函数中应该清理掉之前设置的任何 effect，在组件卸载时避免不必要的内存泄漏和资源浪费。",
    "level": 1,
    "status": 2,
    "appId": 7,
    "createAt": "2023-05-28T03:40:01.000Z",
    "updateAt": "2023-05-30T08:52:30.000Z",
    "updateUserId": 11,
    "isCollected": false,
    "currentIndex": 360,
    "prev": "c17d0549-bd85-4202-81d1-8f28db624e5f",
    "next": "9491596e-4423-4426-b300-a31ded121bc1"
  },
  "post": {
    "exerciseKey": "9917e299-4991-4ceb-bc54-693533bd9659",
    "category": "QA",
    "title": "如果在 useEffect 的第一个参数中 return 了一个函数，那么第二个参数分别传空数组和传依赖数组，该函数分别是在什么时候执行？",
    "level": 1,
    "updateAt": "2023-05-30T08:52:30+00:00"
  },
  "tag": {
    "id": 13,
    "tagName": "React.js",
    "type": "1",
    "exerciseCount": 101
  }
}
