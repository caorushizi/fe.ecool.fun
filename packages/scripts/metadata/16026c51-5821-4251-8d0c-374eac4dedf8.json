{
  "data": {
    "id": 643,
    "exerciseKey": "16026c51-5821-4251-8d0c-374eac4dedf8",
    "category": "QA",
    "renderType": "md",
    "title": "说说对git pull 和 git fetch 的理解？有什么区别？",
    "desc": null,
    "options": null,
    "explanation": "## 一、是什么\n先回顾两个命令的定义\n- git fetch 命令用于从另一个存储库下载对象和引用\n- git pull 命令用于从另一个存储库或本地分支获取并集成(整合)\n\n再来看一次`git`的工作流程图，如下所示：\n\n ![](https://static.ecool.fun//article/5d0c6486-de49-41ef-8c47-127effbb4871.png)\n\n可以看到，`git fetch`是将远程主机的最新内容拉到本地，用户在检查了以后决定是否合并到工作本机分支中\n\n而`git pull` 则是将远程主机的最新内容拉下来后直接合并，即：`git pull = git fetch + git merge`，这样可能会产生冲突，需要手动解决\n\n在我们本地的`git`文件中对应也存储了`git`本地仓库分支的`commit ID `和 跟踪的远程分支的`commit ID`，对应文件如下：\n\n-  .git/refs/head/[本地分支]\n-  .git/refs/remotes/[正在跟踪的分支]\n\n使用 `git fetch`更新代码，本地的库中`master`的`commitID`不变\n\n但是与`git`上面关联的那个`orign/master`的`commit ID`发生改变\n\n这时候我们本地相当于存储了两个代码的版本号，我们还要通过`merge`去合并这两个不同的代码版本\n\n ![](https://static.ecool.fun//article/0ac4ead1-f10d-40fd-80fe-02734514900c.png)\n\n也就是`fetch`的时候本地的`master`没有变化，但是与远程仓关联的那个版本号被更新了，接下来就是在本地`merge`合并这两个版本号的代码\n\n相比之下，使用`git pull`就更加简单粗暴，会将本地的代码更新至远程仓库里面最新的代码版本，如下图：\n\n ![](https://static.ecool.fun//article/df8f2046-eeb7-4c47-ad17-faeaa9653771.png)\n\n\n\n\n\n## 二、用法\n\n一般远端仓库里有新的内容更新，当我们需要把新内容下载的时候，就使用到`git pull`或者`git fetch`命令\n\n### fetch\n\n用法如下：\n\n```cmd\ngit fetch <远程主机名> <远程分支名>:<本地分支名>\n```\n\n例如从远程的`origin`仓库的`master`分支下载代码到本地并新建一个`temp`分支\n\n```cmd\ngit fetch origin master:temp\n```\n\n如果上述没有冒号，则表示将远程`origin`仓库的`master`分支拉取下来到本地当前分支\n\n这里`git fetch`不会进行合并，执行后需要手动执行`git merge`合并，如下：\n\n```cmd\ngit merge temp\n```\n\n\n\n### pull\n\n两者的用法十分相似，`pull`用法如下：\n\n```cmd\ngit pull <远程主机名> <远程分支名>:<本地分支名>\n```\n\n例如将远程主机`origin`的`master`分支拉取过来，与本地的`branchtest`分支合并，命令如下：\n\n```cmd\ngit pull origin master:branchtest\n```\n\n同样如果上述没有冒号，则表示将远程`origin`仓库的`master`分支拉取下来与本地当前分支合并\n\n\n\n## 三、区别\n\n相同点：\n\n- 在作用上他们的功能是大致相同的，都是起到了更新代码的作用\n\n不同点：\n\n- git pull是相当于从远程仓库获取最新版本，然后再与本地分支merge，即git pull = git fetch + git merge\n- 相比起来，git fetch 更安全也更符合实际要求，在 merge 前，我们可以查看更新情况，根据实际情况再决定是否合并\n",
    "level": 3,
    "status": 2,
    "appId": 7,
    "createAt": "2021-10-24T03:39:27.000Z",
    "updateAt": "2024-01-25T19:22:21.000Z",
    "updateUserId": 11,
    "isCollected": false,
    "currentIndex": 72,
    "prev": "7aa8fdff-3c1c-423c-8f2d-cd784dfcbac1",
    "next": "51f3a49c-32aa-432a-bc14-eaba466d9d12"
  },
  "post": {
    "exerciseKey": "16026c51-5821-4251-8d0c-374eac4dedf8",
    "category": "QA",
    "title": "说说对git pull 和 git fetch 的理解？有什么区别？",
    "level": 3,
    "updateAt": "2024-01-25T19:22:21+00:00"
  },
  "tag": {
    "id": 29,
    "tagName": "工具",
    "type": "1",
    "exerciseCount": 30
  }
}
