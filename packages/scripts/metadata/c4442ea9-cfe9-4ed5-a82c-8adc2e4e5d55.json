{
  "data": {
    "id": 1890,
    "exerciseKey": "c4442ea9-cfe9-4ed5-a82c-8adc2e4e5d55",
    "category": "QA",
    "renderType": "md",
    "title": "JQuery中的$(​document).ready与window.onload有什么区别？",
    "desc": null,
    "options": null,
    "explanation": "## 定义\n\n再说两者之前先简单说明一下window与document的区别：\n\n* window  \n   1. window对象表示浏览器中打开的窗口。  \n   2. window对象可以省略，如:`window.console.log()`等价于`console.log()`\n* document  \n   1. document对象是window对象的一部分,如：`document.body` 等价于 `window.document.body`  \n   2. 浏览器的html文档成为document对象\n\n### $(document).ready()\n\n从字面的意思上理解，就是文档准备好了，也就是浏览器已经加载并解析完整个html文档，DOM树已经建立起来了,然后执行此函数。\n\n原生的JavaScript写法如下：\n\n```\ndocument.ready=function(){\n alert(\"ready\"); \n}\n\n```\n\njQuery中的写法如下：\n\n```\n$(document).ready(function(){\n alert(\"ready\");\n});\n//或者简写为\n$(function(){\n alert(\"ready\");\n});\n\n```\n\n### $(window).load\n\n在网页中所有元素(包括页面中图片、css文件等所有关联文件)完全加载到浏览器后才执行。\n\n原生JavaScript中的写法如下\n\n```\nwindow.onload = function(){ \n alert(\"onload\"); \n};\n\n```\n\njQuery中的写法如下：\n\n```\n$(window).load(function(){\n alert(\"onload\");\n});\n\n```\n\n## ready与load执行顺序\n\n先来看一下DOM文档加载的步骤：\n\n```\n    1.解析HTML结构\n    2.加载外部脚本和样式表文件\n    3.解析并执行脚本代码\n    4.构造HTML DOM模型 //ready\n    5.加载图片等外部文件\n    6.页面加载完毕 //load\n\n```\n\n从上面的步骤中可以看出，ready在第4步完成之后就执行了，但是load要在第6步完成之后才执行。\n\n## 两者区别\n\n### 1.执行时间\n\n* `$(window).load()`必须等到页面内包括图片的所有元素加载完毕后才能执行（比如图片和媒体资源，它们的加载速度远慢于DOM的加载速度）加载完成之后才执行。\n* `$(document).ready()`是DOM结构绘制完毕后就执行，不必等到加载完毕。但这并不代表页面的所有数据已经全部加载完成，一些大的图片有会在建立DOM树之后很长一段时间才行加载完成\n\n以浏览器装载文档为例，在页面加载完毕后，浏览器会通过 Javascript为DOM元素添加事件。在常规的Javascript 代码中，通常使用 window.onload 方法，而在 Jquery 中，使用的是 `$(document).ready()` 方法。 `$(document).ready()`方法是事件模块中最重要一个函数，可以极大的提高 Web 应用程序的速度。\n\n### 2.编写个数不同\n\n* `$(window).load`不能同时编写多个，如果有多个`$(window).load()`，那么只有最后一个`$(window).load()`里面的函数或者代码才会执行，之前的`$(window).load()`都将被覆盖。\n* `$(document).ready()`可以同时编写多个，并且都可以得到执行。\n\n示例如下：\n\n以下代码无法正确执行,结果只输出第二个,:\n\n```\n$(window).load(function(){ \n    alert(“text1”); \n}); \n$(window).load(function(){ \n    alert(“text2”); \n}); \n\n```\n\n`$(document).ready()`能同时编写多个,以下代码正确执行，结果两次都输出：\n\n```\n$(document).ready(function(){ \n    alert(“Hello World”); \n}); \n$(document).ready(function(){ \n    alert(“Hello again”); \n}); \n\n```\n\n### 3.简化写法\n\n* `$(window).load`没有简化写法\n* `$(document).ready(function(){})`可以简写成`$(function(){})`或者`$().ready(function(){})`\n\n### 4.执行的效率不同\n\n* 如要在dom的元素节点中添加onclick属性节点，这时用`$(document).ready()`就要比用`$(window).load()`的效率高\n* 但是在某些时候还必须得用`$(window).load()`才行，比如按钮图片出现后添加事件",
    "pivot": "",
    "vipLimit": 0,
    "level": 1,
    "appId": 7,
    "createAt": "2022-09-27T01:22:52.000Z",
    "updateAt": "2024-08-10T17:06:59.000Z",
    "isCollected": false,
    "currentIndex": 499,
    "filterTotalNum": 1487,
    "prev": "987220ea-bf52-48ea-a6bd-106e97167e81",
    "next": "6bea229f-8bae-4472-bedb-1260ec4aea47"
  },
  "post": {
    "exerciseKey": "c4442ea9-cfe9-4ed5-a82c-8adc2e4e5d55",
    "category": "QA",
    "title": "JQuery中的$(​document).ready与window.onload有什么区别？",
    "level": 1,
    "createAt": "2022-09-27T01:22:52+00:00",
    "updateAt": "2024-08-10T17:06:59+00:00"
  },
  "tag": {
    "id": 10,
    "tagName": "JavaScript",
    "type": "1",
    "exerciseCount": 379
  }
}