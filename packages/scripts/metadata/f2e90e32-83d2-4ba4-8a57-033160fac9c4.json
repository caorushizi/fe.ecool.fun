{
  "data": {
    "id": 170,
    "exerciseKey": "f2e90e32-83d2-4ba4-8a57-033160fac9c4",
    "category": "QA",
    "renderType": "md",
    "title": "怎么使用 CSS 如何画一个三角形",
    "desc": null,
    "options": null,
    "explanation": "## 一、前言\n\n在前端开发的时候，我们有时候会需要用到一个三角形的形状，比如地址选择或者播放器里面播放按钮\n\n ![](https://static.ecool.fun//article/e03c3216-c02f-4db0-bab4-af2bf2fc06ad.png)\n\n通常情况下，我们会使用图片或者`svg`去完成三角形效果图，但如果单纯使用`css`如何完成一个三角形呢？\n\n实现过程似乎也并不困难，通过边框就可完成\n\n\n## 二、实现过程\n\n在以前也讲过盒子模型，默认情况下是一个矩形，实现也很简单\n\n```html\n<style>\n    .border {\n        width: 50px;\n        height: 50px;\n        border: 2px solid;\n        border-color: #96ceb4 #ffeead #d9534f #ffad60;\n    }\n</style>\n<div class=\"border\"></div>\n```\n\n效果如下图所示：\n\n ![](https://static.ecool.fun//article/8faa7df8-ff57-4794-b4d3-c119d619e5ad.png)\n\n将`border`设置`50px`，效果图如下所示：\n\n ![](https://static.ecool.fun//article/9c5c4e9d-702b-4f81-8c21-7e32ced1f576.png)\n\n白色区域则为`width`、`height`，这时候只需要你将白色区域部分宽高逐渐变小，最终变为0，则变成如下图所示：\n\n ![](https://static.ecool.fun//article/5f9da9b5-c4de-42d0-8690-f0e74d76ea04.png)\n\n这时候就已经能够看到4个不同颜色的三角形，如果需要下方三角形，只需要将上、左、右边框设置为0就可以得到下方的红色三角形\n\n ![](https://static.vue-js.com/2afaa030-a27a-11eb-85f6-6fac77c0c9b3.png)\n\n但这种方式，虽然视觉上是实现了三角形，但实际上，隐藏的部分任然占据部分高度，需要将上方的宽度去掉\n\n最终实现代码如下：\n\n```css\n.border {\n    width: 0;\n    height: 0;\n    border-style:solid;\n    border-width: 0 50px 50px;\n    border-color: transparent transparent #d9534f;\n}\n```\n\n如果想要实现一个只有边框是空心的三角形，由于这里不能再使用`border`属性，所以最直接的方法是利用伪类新建一个小一点的三角形定位上去\n\n```css\n.border {\n    width: 0;\n    height: 0;\n    border-style:solid;\n    border-width: 0 50px 50px;\n    border-color: transparent transparent #d9534f;\n    position: relative;\n}\n.border:after{\n    content: '';\n    border-style:solid;\n    border-width: 0 40px 40px;\n    border-color: transparent transparent #96ceb4;\n    position: absolute;\n    top: 0;\n    left: 0;\n}\n```\n\n效果图如下所示：\n\n ![i](https://static.ecool.fun//article/bd31c2c5-0104-4ef0-b054-519e3df72afc.png)\n\n伪类元素定位参照对象的内容区域宽高都为0，则内容区域即可以理解成中心一点，所以伪元素相对中心这点定位\n\n将元素定位进行微调以及改变颜色，就能够完成下方效果图：\n\n ![](https://static.ecool.fun//article/adbfd4c3-276a-4407-b08f-711bb65f809e.png)\n\n最终代码如下：\n\n```css\n.border:after {\n    content: '';\n    border-style: solid;\n    border-width: 0 40px 40px;\n    border-color: transparent transparent #96ceb4;\n    position: absolute;\n    top: 6px;\n    left: -40px;\n}\n```\n\n\n\n## 三、原理分析\n\n可以看到，边框是实现三角形的部分，边框实际上并不是一个直线，如果我们将四条边设置不同的颜色，将边框逐渐放大，可以得到每条边框都是一个梯形\n\n ![](https://static.ecool.fun//article/856cb9da-ec73-48cc-b457-9e0f994d48a4.png)\n\n当分别取消边框的时候，发现下面几种情况：\n\n- 取消一条边的时候，与这条边相邻的两条边的接触部分会变成直的\n- 当仅有邻边时， 两个边会变成对分的三角\n- 当保留边没有其他接触时，极限情况所有东西都会消失\n\n ![](https://static.ecool.fun//article/e5f027de-aea2-4db6-9e51-4a4e6b17070c.png)\n\n通过上图的变化规则，利用旋转、隐藏，以及设置内容宽高等属性，就能够实现其他类型的三角形\n\n如设置直角三角形，如上图倒数第三行实现过程，我们就能知道整个实现原理\n\n实现代码如下：\n\n```css\n.box {\n    /* 内部大小 */\n    width: 0px;\n    height: 0px;\n    /* 边框大小 只设置两条边*/\n    border-top: #4285f4 solid;\n    border-right: transparent solid;\n    border-width: 85px; \n    /* 其他设置 */\n    margin: 50px;\n}\n```\n",
    "level": 0.5,
    "status": 2,
    "appId": 7,
    "createAt": "2021-07-03T13:26:28.000Z",
    "updateAt": "2024-01-24T17:26:32.000Z",
    "updateUserId": 11,
    "isCollected": false,
    "currentIndex": 187,
    "prev": "fad85622-728a-4c93-bf22-d91f8902837d",
    "next": "94c6d4eb-76c3-4756-956e-9cc277d9d93f"
  },
  "post": {
    "exerciseKey": "f2e90e32-83d2-4ba4-8a57-033160fac9c4",
    "category": "QA",
    "title": "怎么使用 CSS 如何画一个三角形",
    "level": 0.5,
    "updateAt": "2024-01-24T17:26:32+00:00"
  },
  "tag": {
    "id": 11,
    "tagName": "CSS",
    "type": "1",
    "exerciseCount": 90
  }
}