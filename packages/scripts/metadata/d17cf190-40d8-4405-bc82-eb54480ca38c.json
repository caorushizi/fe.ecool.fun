{
  "data": {
    "id": 2081,
    "exerciseKey": "d17cf190-40d8-4405-bc82-eb54480ca38c",
    "category": "QA",
    "renderType": "md",
    "title": "try...catch 可以捕获到异步代码中的错误吗？",
    "desc": null,
    "options": null,
    "explanation": "不能。\n\n以下面代码为例：\n\n```js\ntry {\n  setTimeout(() => {\n    throw new Error('err')\n  }, 200);\n} catch (err) {\n  console.log(err);\n}\n```\n\nsetTimeout是一个异步函数，它的回调函数会在指定的延时后被放入事件队列，等待当前执行栈清空后才执行。因此，当setTimeout的回调函数执行并抛出错误时，try...catch已经执行完毕，无法捕捉到异步回调中的错误。\n\n对于异步代码，需要结合 Promise 、async/await 或者事件监听器等机制来处理错误。",
    "pivot": "",
    "vipLimit": 0,
    "level": 3,
    "appId": 7,
    "createAt": "2024-02-01T07:30:51.000Z",
    "updateAt": "2024-08-10T17:07:39.000Z",
    "isCollected": false,
    "currentIndex": 310,
    "filterTotalNum": 1487,
    "prev": "19da1c13-87a9-4fb4-98ae-0af28c7f03e6",
    "next": "4c0c461d-35da-4944-be7a-88e75e861d62"
  },
  "post": {
    "exerciseKey": "d17cf190-40d8-4405-bc82-eb54480ca38c",
    "category": "QA",
    "title": "try...catch 可以捕获到异步代码中的错误吗？",
    "level": 3,
    "createAt": "2024-02-01T07:30:51+00:00",
    "updateAt": "2024-08-10T17:07:39+00:00"
  },
  "tag": {
    "id": 10,
    "tagName": "JavaScript",
    "type": "1",
    "exerciseCount": 379
  }
}