{
  "data": {
    "id": 2783,
    "exerciseKey": "ea2fac70-cd8c-47ad-997b-331cac76af38",
    "category": "QA",
    "renderType": "md",
    "title": "实现：setObjectValue(obj: object, keys: string[], value: any) 方法， 支持安全设置对象的值",
    "desc": "",
    "options": "",
    "explanation": "要实现一个 `setObjectValue` 方法，能够安全地设置对象的值，并支持通过键路径访问和设置值，可以按照以下步骤进行：\n\n### **功能说明**\n\n- **`obj`**: 需要修改的对象。\n- **`keys`**: 一个字符串数组，表示键路径，例如 `['a', 'b', 'c']` 代表 `obj.a.b.c`。\n- **`value`**: 要设置的值。\n\n### **实现代码**\n\n```typescript\nfunction setObjectValue(obj: object, keys: string[], value: any): void {\n  if (!keys.length) return;\n\n  // 遍历 keys 除了最后一个键\n  let current = obj;\n  for (let i = 0; i < keys.length - 1; i++) {\n    const key = keys[i];\n\n    // 如果当前路径的对象不存在，则创建它\n    if (!(key in current)) {\n      // 使用空对象作为默认值\n      (current as any)[key] = {};\n    }\n    \n    // 移动到下一个嵌套的对象\n    current = (current as any)[key];\n  }\n\n  // 设置最后一个键的值\n  const lastKey = keys[keys.length - 1];\n  (current as any)[lastKey] = value;\n}\n\n// 示例用法\nconst obj = {};\nsetObjectValue(obj, ['a', 'b', 'c'], 42);\nconsole.log(obj); // 输出: { a: { b: { c: 42 } } }\n```\n\n### **说明**\n\n1. **初始化检查**: 如果 `keys` 数组为空，则直接返回，不执行任何操作。\n2. **遍历键路径**: 遍历 `keys` 除了最后一个键。对于每个键，如果当前对象中不存在这个键，则创建一个新的对象。这样可以确保嵌套路径的所有中间对象都存在。\n3. **设置值**: 在最后一个键的位置设置目标值。\n\n### **注意事项**\n\n- **对象检测**: 在遍历中，使用 `(current as any)[key]` 来动态访问对象属性。确保中间对象可以被正确初始化。\n- **深度克隆**: 如果需要避免对已有对象的影响，可以考虑实现深度克隆，但这超出了当前需求范围。\n\n这种实现方式可以有效地处理复杂的嵌套路径，并保证在设置值之前路径中的所有部分都被正确创建。",
    "pivot": "",
    "vipLimit": 1,
    "level": 3,
    "appId": 7,
    "createAt": "2024-08-13T08:30:41.000Z",
    "updateAt": "2024-08-14T19:59:26.000Z",
    "isCollected": false,
    "currentIndex": 52,
    "filterTotalNum": 1487,
    "prev": "35052cf0-524e-403f-bf8e-38b44ea18284",
    "next": "3a3fd346-b19c-4c3c-bda9-573795286c36"
  },
  "post": {
    "exerciseKey": "ea2fac70-cd8c-47ad-997b-331cac76af38",
    "category": "QA",
    "title": "实现：setObjectValue(obj: object, keys: string[], value: any) 方法， 支持安全设置对象的值",
    "level": 3,
    "createAt": "2024-08-13T08:30:41+00:00",
    "updateAt": "2024-08-14T19:59:26+00:00"
  },
  "tag": {
    "id": 26,
    "tagName": "编程题",
    "type": "1",
    "exerciseCount": 124
  }
}