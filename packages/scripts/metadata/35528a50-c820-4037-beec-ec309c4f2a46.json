{
  "data": {
    "id": 343,
    "exerciseKey": "35528a50-c820-4037-beec-ec309c4f2a46",
    "category": "QA",
    "renderType": "md",
    "title": "React Hooks当中的useEffect是如何区分生命周期钩子的\n",
    "desc": null,
    "options": null,
    "explanation": "useEffect可以看成是 `componentDidMount`，`componentDidUpdate` 和 `componentWillUnmount` 三者的结合。\n\nuseEffect(callback, [source])接收两个参数，调用方式如下：\n\n```react.js\nuseEffect(() => {\n   console.log('mounted');\n   \n   return () => {\n       console.log('willUnmount');\n   }\n }, [source]);\n```\n\n生命周期函数的调用主要是通过第二个参数`[source]`来进行控制，有如下几种情况：\n\n* [source]参数不传时，则每次都会优先调用上次保存的函数中返回的那个函数，然后再调用外部那个函数；\n* [source]参数传[]时，则外部的函数只会在初始化时调用一次，返回的那个函数也只会最终在组件卸载时调用一次；\n* [source]参数有值时，则只会监听到数组中的值发生变化后才优先调用返回的那个函数，再调用外部的函数。\n",
    "level": 2,
    "status": 2,
    "appId": 7,
    "createAt": "2021-07-04T12:29:15.000Z",
    "updateAt": "2021-07-04T21:30:50.000Z",
    "updateUserId": 11,
    "isCollected": false,
    "currentIndex": 989,
    "prev": "dfc9b600-74ec-4e03-8832-c3d69de4dcea",
    "next": "eef587e7-d29b-4b32-b672-7f8fe2e84217"
  },
  "post": {
    "exerciseKey": "35528a50-c820-4037-beec-ec309c4f2a46",
    "category": "QA",
    "title": "React Hooks当中的useEffect是如何区分生命周期钩子的\n",
    "level": 2,
    "updateAt": "2021-07-04T21:30:50+00:00"
  },
  "tag": {
    "id": 13,
    "tagName": "React.js",
    "type": "1",
    "exerciseCount": 101
  }
}
