{
  "data": {
    "id": 66,
    "exerciseKey": "576883a2-f601-4c53-9f8c-be61a07168bf",
    "category": "Choice",
    "renderType": "md",
    "title": "输出是什么?",
    "desc": "```javascript\nconst person = { name: \"Lydia\" };\n\nObject.defineProperty(person, \"age\", { value: 21 });\n\nconsole.log(person);\nconsole.log(Object.keys(person));\n```",
    "options": "{\"options\":[\"{ name: \\\"Lydia\\\", age: 21 }, [\\\"name\\\", \\\"age\\\"]\",\"{ name: \\\"Lydia\\\", age: 21 }, [\\\"name\\\"]\",\"{ name: \\\"Lydia\\\"}, [\\\"name\\\", \\\"age\\\"]\",\"{ name: \\\"Lydia\\\"}, [\\\"age\\\"]\"],\"isMulti\":false,\"answer\":[1]}",
    "explanation": "通过`defineProperty`方法，我们可以给对象添加一个新属性，或者修改已经存在的属性。而我们使用`defineProperty`方法给对象添加了一个属性之后，属性默认为 _不可枚举(not enumerable)_. `Object.keys`方法仅返回对象中 _可枚举(enumerable)_ 的属性，因此只剩下了`\"name\"`.\n用`defineProperty`方法添加的属性默认不可变。你可以通过`writable`, `configurable` 和 `enumerable`属性来改变这一行为。这样的话， 相比于自己添加的属性，`defineProperty`方法添加的属性有了更多的控制权。",
    "level": 1,
    "status": 2,
    "appId": 7,
    "createAt": "2021-07-02T15:33:04.000Z",
    "updateAt": "2021-07-03T22:15:27.000Z",
    "updateUserId": 11,
    "isCollected": false,
    "currentIndex": 1142,
    "prev": "2eb7d8d6-731e-444d-9f2f-c8bdea7f50eb",
    "next": "43fc5697-d7c8-4d68-9ac7-f074d8a7b185"
  },
  "post": {
    "exerciseKey": "576883a2-f601-4c53-9f8c-be61a07168bf",
    "category": "Choice",
    "title": "输出是什么?",
    "level": 1,
    "updateAt": "2021-07-03T22:15:27+00:00"
  },
  "tag": {
    "id": 32,
    "tagName": "选择题",
    "type": "1",
    "exerciseCount": 151
  }
}
